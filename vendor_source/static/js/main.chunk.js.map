{"version":3,"sources":["config/constants/farms.ts","config/index.ts","hooks/useIsWindowVisible.ts","state/block/hooks.ts","utils/web3React.ts","contexts/Localization/helpers.ts","utils/farmHelpers.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","components/Toast/types.ts","components/Toast/Toast.tsx","components/Toast/ToastContainer.tsx","utils/truncateHash.ts","components/Toast/DescriptionWithTx.tsx","config/constants/lottery.ts","hooks/useToast.ts","utils/getRpcUrl.ts","state/nftMarket/reducer.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","state/profile/helpers.ts","config/abi/erc20.ts","hooks/useContract.ts","state/teams/helpers.ts","config/constants/teams.ts","config/constants/ifo.ts","hooks/useRefresh.ts","state/block/index.ts","state/lottery/getUserLotteryData.ts","contexts/RefreshContext.tsx","config/constants/campaigns.ts","utils/achievements.ts","state/achievements/helpers.ts","state/types.ts","hooks/usePreviousValue.ts","config/constants/tokens.ts","config/constants/contracts.ts","utils/addressHelpers.ts","config/constants/tokens.lottery.ts","state/lottery/index.ts","state/lists/hooks.ts","state/user/hooks/index.tsx","state/lottery/getLotteriesData.ts","state/lottery/getUserTicketsData.ts","state/farms/hooks.ts","state/user/actions.ts","utils/bigNumber.ts","hooks/useActiveWeb3React.ts","components/Layout/Container.tsx","hooks/usePairs.ts","hooks/useBUSDPrice.ts","components/Layout/Page.tsx","utils/wallet.ts","hooks/useAuth.ts","utils/contractHelpers.ts","utils/multicall.ts","config/constants/endpoints.ts","state/nftMarket/helpers.ts","state/nftMarket/queries.ts","state/nftMarket/types.ts","state/user/hooks/helpers.ts","config/constants/lists.ts","state/multicall/retry.ts","state/multicall/updater.tsx","hooks/useDebounce.ts","state/multicall/chunkArray.ts","state/transactions/updater.tsx","hooks/useEagerConnect.ts","hooks/useUserAgent.ts","routerHistory.ts","hooks/useScrollOnRouteChange.ts","components/DatePicker/DatePickerPortal.tsx","style/Global.tsx","components/SuspenseWithChunkError/index.tsx","components/Loader/PageLoader.tsx","App.tsx","state/profile/hooks.ts","hooks/useInactiveListener.ts","Providers.tsx","index.tsx","state/multicall/actions.ts","config/constants/types.ts","config/constants/index.ts","config/constants/pools.ts","state/predictions/helpers.ts","state/pools/fetchPoolsUser.ts","views/Pools/helpers.tsx","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","state/predictions/config.ts","state/predictions/queries.ts","state/predictions/index.ts","state/teams/index.tsx","state/achievements/index.ts","state/voting/helpers.ts","state/voting/index.tsx","state/info/actions.ts","state/info/index.ts","state/global/actions.ts","state/user/reducer.ts","state/swap/actions.ts","state/transactions/reducer.ts","state/mint/actions.ts","state/swap/reducer.ts","state/burn/actions.ts","state/mint/reducer.ts","state/lists/actions.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","utils/formatBalance.ts","utils/index.ts","state/multicall/hooks.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","state/transactions/actions.ts","utils/providers.ts","state/lottery/helpers.ts","state/profile/index.tsx","config/localization/languages.ts","config/constants/nftsCollections/types.ts","config/constants/nftsCollections/index.ts","views/Nft/market/constants.ts"],"names":["serializedTokens","serializeTokens","farms","pid","lpSymbol","lpAddresses","token","syrup","quoteToken","wbnb","cake","busd","zoo","sfund","gnt","isCommunity","sheesha","bcoin","qi","kart","porto","dvi","jgn","bmon","wsg","eternal","xwg","usdc","dar","fina","moni","xms","dkt","rusd","lazio","sps","cart","arv","light","mcb","rpg","beta","pros","nft","chess","mcrn","tlos","stephero","bp","bscdefi","qbt","naos","pha","bel","ramp","pots","tusd","btt","trx","win","babycake","hero","revv","skill","if","c98","axs","pmon","titan","harmony","mask","gum","adx","usdt","suter","bscpad","rabbit","waultx","wex","form","orbs","$dg","woo","htb","dft","hai","o3","ampl","oddz","eth","btcb","bondly","marsh","boring","mbox","ata","mx","bcfx","qkc","ktn","mtrg","swg","vrt","ez","kalm","popen","lien","well","deri","chr","cyc","xend","hget","hotcross","rfox","wmass","ubxt","btr","τdoge","one","fine","doge","bmxx","oin","hyfi","kun","qsd","math","mcoin","ust","pnt","pbtc","xmark","lmt","dfd","alpaca","τbtc","swingby","xed","hakka","cgg","broobee","hzn","alpa","perl","tlm","eps","arpa","itam","tko","apys","hoo","easy","nrv","dego","swth","zil","pcws","bbadger","bdigg","lto","mir","trade","dusk","bifi","txl","cos","bunny","alice","for","bux","nuls","belt","bfi","dexe","tpt","watch","iotx","bor","bopen","sushi","dodo","bry","zee","swgb","comp","sfp","lina","lit","bdo","egld","mamzn","mgoogl","mnflx","mtsla","wsote","front","helmet","btcst","ltc","dai","bscx","ten","balbt","reef","ditto","vai","blink","unfi","hard","ctk","sxp","inj","fil","uni","yfi","atom","xrp","alpha","xvs","twt","link","eos","dot","band","ada","yfii","beth","og","asr","atm","juv","psg","xtz","bch","stax","nar","nya","bake","burger","BigNumber","config","EXPONENTIAL_AT","DECIMAL_PLACES","BASE_BSC_SCAN_URLS","ChainId","MAINNET","TESTNET","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","BIG_TEN","pow","DEFAULT_GAS_LIMIT","IPFS_GATEWAY","VISIBILITY_STATE_SUPPORTED","document","isWindowVisible","visibilityState","useIsWindowVisible","useState","isVisible","setIsVisible","useEffect","handleVisibilityChange","addEventListener","removeEventListener","usePollBlockNumber","refreshTime","timer","useRef","dispatch","useAppDispatch","current","setInterval","a","simpleRpcProvider","getBlockNumber","blockNumber","setBlock","clearInterval","useBlock","useSelector","state","block","rpcUrl","getNodeUrl","chainId","parseInt","window","SO_LotteryConfig","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","qrcode","pollingInterval","bscConnector","BscConnector","connectorsByName","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","provider","library","ethers","providers","Web3Provider","LS_KEY","fetchLocale","locale","fetch","process","response","json","data","getLanguageCodeFromLS","localStorage","getItem","EN","isArchivedPid","priceHelperLps","tokens","fetchFarm","farm","lpAddress","getAddress","calls","address","name","params","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","div","tokenAmountTotal","quoteTokenAmountTotal","quoteTokenAmountMc","times","lpTotalInQuoteToken","masterchefABI","info","totalAllocPoint","allocPoint","_hex","BIG_ZERO","poolWeight","toJSON","tokenPriceVsQuote","multiplier","toString","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","Promise","all","map","farmConfig","serializedFarm","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","find","some","symbol","getFarmFromTokenSymbol","tokenSymbol","farmsWithTokenSymbol","filter","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","Boolean","quoteTokenInBusd","getFarmQuoteTokenPrice","BIG_ONE","fetchFarmsPrices","bnbBusdFarm","farmsWithPrices","tokenPriceBusd","quoteTokenPriceBusd","fetchFarmUserAllowances","account","masterChefAddress","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsConfig","userData","allowance","loadArchivedFarmsData","userDataLoaded","nonArchivedFarms","fetchFarmsPublicDataAsync","createAsyncThunk","pids","includes","farmsWithPriceHelpers","concat","priceHelperLpsConfig","farmsWithoutHelperLps","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","index","farmsSlice","createSlice","reducers","extraReducers","builder","addCase","fulfilled","action","liveFarmData","payload","farmData","forEach","userDataEl","findIndex","types","SUCCESS","DANGER","WARNING","INFO","alertTypeMap","alertVariants","StyledToast","styled","theme","mediaQueries","sm","Toast","toast","onRemove","style","ttl","props","ref","removeHandler","id","title","description","type","handleRemove","useCallback","clearTimeout","setTimeout","CSSTransition","nodeRef","timeout","onMouseEnter","onMouseLeave","variant","onClick","StyledToastContainer","ToastContainer","toasts","stackSpacing","TransitionGroup","zIndex","top","truncateHash","startLength","endLength","substring","length","DescriptionWithTx","txHash","children","useActiveWeb3React","t","useTranslation","as","external","href","getBscScanLink","TICKET_LIMIT_PER_REQUEST","NUM_ROUNDS_TO_CHECK_FOR_REWARDS","NUM_ROUNDS_TO_FETCH_FROM_NODES","useToast","toastContext","useContext","ToastsContext","undefined","Error","nodes","initialNftFilterState","loadingState","NftFilterLoadingState","IDLE","activeFilters","showOnlyOnSale","ordering","field","direction","initializationState","NFTMarketInitializationState","UNINITIALIZED","collections","nfts","filters","isUpdatingPancakeBunnies","latestPancakeBunniesUpdateAt","users","user","userNftsInitializationState","UserNftInitializationState","activity","askOrderHistory","buyTradeHistory","sellTradeHistory","fetchCollections","getCollectionsApi","getCollectionsSg","collectionsMarket","combineCollectionData","fetchCollection","collectionAddress","getCollectionApi","getCollectionSg","collection","collectionMarket","fetchNftsFromCollections","page","size","pancakeBunniesAddress","getNftsFromCollectionApi","tokenIds","Object","values","tokenId","getMarketDataForTokenIds","nftsMarket","apiMetadata","marketData","collectionName","image","attributes","console","error","filterNftsFromCollection","nftFilters","attrParams","reduce","accum","attr","traitType","value","isEmpty","fetchNftsFiltered","attrFilters","apiToken","getNftsMarketData","tokenId_in","toLowerCase","nftTokens","apiTokenMarketData","tokenMarketData","fetchNewPBAndUpdateExisting","bunnyId","existingTokensWithBunnyId","allExistingPBTokenIds","existingMetadata","orderDirection","updatedNfts","updatedNftsMarket","updatedTokens","getMetadataWithFallback","otherId","getPancakeBunniesAttributesField","combineApiAndSgResponseToNftToken","newNfts","getNftsByBunnyIdSg","moreTokensWithRequestedBunnyId","fetchUserNfts","profileNftWithCollectionAddress","getCompleteAccountNftData","completeNftData","updateUserNft","location","NftLocation","WALLET","marketDataForNft","getNftsFromDifferentCollectionsApi","metadataForNft","removeUserNft","addUserNft","nftLocation","fetchUserActivity","getUserActivity","toLocaleLowerCase","userActivity","NftMarket","removeAllFilters","setOrdering","setShowOnlyOnSale","resetUserNftState","pending","meta","arg","LOADING","INITIALIZED","existingNftsWithoutNewOnes","nftToken","newToken","Date","now","rejected","ERROR","INITIALIZING","userNftsState","nftToUpdate","indexInState","indexOf","copyOfState","nftToRemove","splice","actions","createContext","ToastsProvider","setToasts","prevToasts","kebabCase","currentToasts","prevToast","Provider","clear","remove","toastError","toastTypes","toastInfo","toastSuccess","toastWarning","ToastListener","transformProfileResponse","profileResponse","userId","numberPoints","teamId","isActive","toNumber","points","profileContract","getProfileContract","profileApi","REACT_APP_API_PROFILE","getUsername","ok","username","getProfileAvatar","hasRegistered","getUserProfile","getNftApi","apiRes","createdAt","updatedAt","original","thumbnail","getProfile","profile","getTeam","team","Cookies","set","avatar","domain","secure","expires","Interface","ERC20_ABI","ERC20_BYTES32_ABI","useCake","useMemo","getCakeContract","getSigner","useLotteryV2Contract","getLotteryV2Contract","useContract","ABI","withSignerIfPossible","getContract","useTokenContract","tokenAddress","useBytes32TokenContract","useMulticallContract","getMulticallAddress","multiCallAbi","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","teamsList","staticTeam","merge","getTeams","teamsById","numberTeams","nbTeams","i","push","getPancakeProfileAddress","multicallv2","profileABI","teamData","onChainTeamData","teams","images","lg","md","alt","ipfs","background","textColor","cakeBnbLpToken","Token","ifos","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","currency","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","version","useRefresh","RefreshContext","fastRefresh","fast","slowRefresh","slow","blockSlice","currentBlock","initialBlock","MAX_USER_LOTTERIES_REQUEST_SIZE","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","nodeRound","ticketDataForRound","roundTickets","roundId","lotteryId","endTime","status","claimed","hasRoundBeenClaimed","userTickets","totalTickets","tickets","nodeRoundsWithGraphData","userNodeRound","userGraphRound","graphResponseRound","nodeRoundData","slice","lastCombinedDataRound","lastCombinedDataRoundIndex","graphRound","remainingSubgraphRounds","getGraphLotteryUser","first","skip","where","blankUser","totalCake","rounds","request","GRAPH_API_LOTTERY","gql","userRes","round","lottery","getUserLotteryData","currentLotteryId","idsForTicketsNodeCall","getRoundIdsArray","fetchUserTicketsForMultipleRounds","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","fetchMultipleLotteries","lotteriesNodeData","graphResponse","mergedRoundData","graphResponseWithNodeRounds","React","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","hidden","useIsBrowserTabActive","interval","prev","campaigns","badge","campaignMap","Map","campaign","getAchievementTitle","key","getAchievementDescription","getUserPointIncreaseEvents","GRAPH_API_PROFILE","getAchievements","pointIncreaseEvents","userPoint","has","campaignMeta","get","Number","ProfileAvatarFetchStatus","AchievementFetchStatus","BetPosition","PredictionStatus","HistoryFilter","LeaderboardLoadingState","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","usePreviousValue","mainnetTokens","bnb","cvp","mix","safemoon","testnetTokens","keys","unserializedTokens","serializeToken","masterChef","sousChef","lotteryV2","contract","multiCall","pancakeProfile","pancakeRabbits","bunnyFactory","claimRefund","pointCenterIfo","bunnySpecial","tradingCompetition","easterNft","cakeVault","predictions","chainlinkOracle","bunnySpecialCakeVault","bunnySpecialPrediction","bunnySpecialLottery","farmAuction","AnniversaryAchievement","nftMarket","nftSale","pancakeSquad","addresses","getLotteryV2Address","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","getBunnySpecialLotteryAddress","getFarmAuctionAddress","getAnniversaryAchievement","getNftMarketAddress","getNftSaleAddress","getPancakeSquadAddress","decimals","viewDecimals","price","tokensList","isTransitioning","maxNumberTicketsPerBuyOrClaim","currentRound","isLoading","LotteryStatus","PENDING","startTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","lotteriesData","userLotteryData","fetchCurrentLottery","fetchLottery","lotteryInfo","fetchCurrentLotteryId","fetchCurrentLotteryIdAndMaxBuy","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","getLotteriesData","lotteries","fetchUserLotteries","fetchAdditionalUserLotteries","additionalUserLotteries","setLotteryIsTransitioning","LotterySlice","mergedRounds","WeakMap","useThemeManager","useDispatch","isDark","toggleThemeAction","useGasPrice","userGas","gasPrice","GAS_PRICE_GWEI","testnet","MAX_LOTTERIES_REQUEST_SIZE","applyNodeDataToLotteriesGraphResponse","nodeData","ticketPrice","totalUsers","winningTickets","graphRoundData","getGraphLotteries","idsForNodesCall","mergedData","lotteryContract","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","number","viewUserInfoForLotteryId","cursor","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","idsToCheck","ticketsForMultipleRounds","ticketsForRound","deserializeFarmUserData","deserializeFarm","dual","deserializeToken","usePollCoreFarmData","useFarmFromPid","f","usePriceCakeBusd","cakePriceBusdAsString","FarmStakedOnly","ViewMode","updateUserExpertMode","createAction","updateUserSingleHopOnly","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","muteAudio","unmuteAudio","toggleTheme","updateUserFarmStakedOnly","updateUserPoolStakedOnly","updateUserPoolsViewMode","updateUserFarmsViewMode","updateUserPredictionAcceptedRisk","updateUserPredictionChartDisclaimerShow","updateUserExpertModeAcknowledgementShow","updateUserUsernameVisibility","updateGasPrice","addWatchlistToken","addWatchlistPool","hidePhishingWarningBanner","setIsExchangeChartDisplayed","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","useWeb3React","web3React","refEth","setProvider","Container","px","maxWidth","PairState","IUniswapV2PairABI","StyledPage","Page","setupNetwork","ethereum","method","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","useAuth","activate","deactivate","login","connectorID","connector","UnsupportedChainIdError","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","walletConnectProvider","message","logout","profileClear","close","clearAllTransactions","abi","signer","signerOrProvider","Contract","getBep20Contract","bep20Abi","getErc721Contract","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","poolsConfig","pool","sousId","poolCategory","PoolCategory","BINANCE","sousChefBnb","contractAddress","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","cakeAbi","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","lotteryV2Abi","getMasterchefContract","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","getBunnySpecialLotteryContract","bunnySpecialLotteryAbi","getFarmAuctionContract","farmAuctionAbi","getAnniversaryAchievementContract","anniversaryAchievementAbi","getNftMarketContract","nftMarketAbi","getNftSaleContract","nftSaleAbi","getPancakeSquadContract","pancakeSquadAbi","getErc721CollectionContract","erc721CollectionAbi","multi","itf","utils","calldata","call","encodeFunctionData","aggregate","returnData","res","decodeFunctionResult","options","requireSuccess","tryAggregate","result","GRAPH_API_PREDICTION","SNAPSHOT_VOTING_API","SNAPSHOT_BASE_URL","API_NFT","SNAPSHOT_API","GRAPH_API_NFTMARKET","statusText","isPBCollection","requestPath","from","promises","responses","resp","existingTokenIds","isTradable","tokenId_not_in","orderBy","stringify","displayType","fetchWalletTokenIdsForCollections","walletNftPromises","balanceOf","balanceOfResponse","eq","getTokenId","tokenOfOwnerByIndex","tokenIdBn","tokenIdPromises","tokensWithCollectionAddress","walletNfts","flat","collectionApiData","collectionSgData","collectionsMarketObj","attachMarketDataToWalletNfts","marketDataForWalletNfts","walletNft","marketNft","metadataUrl","transactionHistory","currentSeller","currentAskPrice","latestTradedPriceInBNB","tradeVolumeBNB","totalTrades","combineNftMarketAndMetadata","nftsWithMetadata","nftsForSale","tokenIdsInWallet","tokenIdsForSale","profileNftId","forSaleNft","PROFILE","FORSALE","getNftLocationForMarketNft","walletNftIdsWithCollectionAddress","unshift","uniqueCollectionAddresses","uniq","walletNftId","walletNftsByCollection","idWithCollectionAddress","walletMarketDataRequests","walletNftByCollection","tokenIdIn","walletMarketDataResponses","walletMarketData","walletNftsWithMarketData","walletTokenIds","marketDataForSaleNfts","forSaleNftIds","metadataForAllNfts","AskOrderType","GAS_PRICE","projectLink","serializedToken","default","parseUnits","instant","UNSUPPORTED_LIST_URLS","DEFAULT_LIST_OF_LISTS","DEFAULT_ACTIVE_LIST_URLS","waitRandom","min","max","ms","Math","random","resolve","CancelledError","RetryableError","multicallContract","chunk","minBlockNumber","debug","obj","callData","resultsBlockNumber","results","Updater","s","debouncedListeners","delay","debouncedValue","setDebouncedValue","handler","useDebounce","callListeners","cancellations","listeningKeys","allListeners","listeners","memo","callKey","keyListeners","blocksPerFetch","previousMin","Infinity","activeListeningKeys","unserializedOutdatedCallKeys","callResults","minDataBlockNumber","fetchingBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","JSON","sort","outdatedCallKeys","parse","parseCallKey","chunkedCalls","items","maxChunkSize","numChunks","ceil","chunkSize","Array","ix","chunkArray","c","fetchingMulticallResults","fn","rejectCancelled","n","minWait","maxWait","completed","promise","reject","cancel","retry","fetchChunk","then","fetchBlockNumber","firstCallKeyIndex","curr","lastCallKeyIndex","updateMulticallResults","catch","errorFetchingMulticallResults","transactions","hash","tx","receipt","lastCheckedBlockNumber","blocksSinceCheck","minutesPending","getTime","addedTime","shouldCheck","getTransactionReceipt","finalizeTransaction","blockHash","to","transactionHash","transactionIndex","flexDirection","summary","checkedTransaction","_binanceChainListener","defineProperty","this","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","useUserAgent","documentElement","setAttribute","navigator","userAgent","history","createBrowserHistory","useScrollOnRouteChange","unlisten","listen","args","scroll","left","behavior","StyledDatePickerPortal","card","colors","cardBorder","text","input","primary","primaryBright","secondary","DatePickerPortal","GlobalStyle","createGlobalStyle","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","code","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","Wrapper","PageLoader","Lottery","lazy","NotFound","App","fetchProfile","useFetchProfile","handleDeactivate","addListener","removeListener","useInactiveListener","disableCSSOMInjection","target","getElementById","Global","path","component","ThemeProviderWrapper","dark","Providers","store","Updaters","Blocklist","BLOCKED_ADDRESSES","ReactDOM","render","StrictMode","ADDRESS_REGEX","LOWER_HEX_REGEX","toCallKey","test","pcs","split","addMulticallListeners","removeMulticallListeners","PoolIds","AuctionStatus","ROUTER_ADDRESS","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIPS_BASE","JSBI","BigInt","Percent","exponentiate","pools","stakingToken","earningToken","CORE","harvest","tokenPerBlock","sortOrder","isFinished","enableEmergencyWithdraw","COMMUNITY","Result","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","getBalanceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","getDecimalAmount","cakeAsDisplayBalance","getFullDisplayBalance","fetchPublicVaultData","sharePrice","estimatedCakeBountyReward","totalPendingCakeHarvest","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","totalShares","pricePerFullShare","totalCakeInVault","fetchVaultFees","performanceFee","callFee","withdrawalFee","withdrawalFeePeriod","cakeVaultContract","fetchVaultUser","userInfo","userContractResponse","userShares","lastDepositedTime","lastUserActionTime","cakeAtLastUserAction","fees","fetchCakeVaultPublicData","publicVaultInfo","fetchCakeVaultFees","vaultFees","fetchCakeVaultUserData","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","p","ROUNDS_PER_PAGE","numberOrNull","valueNum","isNaN","transformBetResponse","betResponse","bet","amount","parseFloat","position","BULL","BEAR","claimedAt","claimedBlock","claimedHash","claimedBNB","claimedNetBNB","transformUserResponse","transformRoundResponse","userResponse","totalBets","totalBetsBull","totalBetsBear","totalBNB","totalBNBBull","totalBNBBear","totalBetsClaimed","totalBNBClaimed","winRate","averageBNB","netBNB","roundResponse","positionResponse","epoch","failed","startAt","startBlock","startHash","lockAt","lockBlock","lockHash","lockPrice","lockRoundId","closeAt","closeBlock","closeHash","closePrice","closeRoundId","totalAmount","bullBets","bullAmount","bearBets","bearAmount","bets","HOUSE","getBetHistory","getLedgerData","epochs","ledgerCalls","defaultPredictionUserOptions","orderDir","getPredictionUsers","getPredictionUser","getClaimStatuses","claimableCalls","claimableResponses","claimableResponse","claimable","getPredictionData","staticCalls","currentEpoch","intervalSeconds","minBetAmount","paused","bufferSeconds","PAUSED","LIVE","getRoundsData","makeFutureRoundResponse","startTimestamp","lockTimestamp","closeTimestamp","rewardBaseCalAmount","rewardAmount","oracleCalled","lockOracleId","closeOracleId","makeRoundData","serializePredictionsLedgerResponse","ledgerResponse","makeLedgerData","ledgers","serializePredictionsRoundsResponse","fetchUsersRoundsLength","getUserRoundsLength","fetchUserRounds","getUserRounds","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","ALL","lastOraclePrice","totalHistory","currentHistoryPage","hasHistoryLoaded","claimableStatuses","leaderboard","selectedAddress","timePeriod","hasMoreResults","addressResults","initializePredictions","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","ledgerResponses","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","fetchNodeHistory","userRoundsLength","emptyResult","maxPages","lte","sub","lt","userRounds","epochStr","roundData","reduxRound","ledger","ledgerAmount","formatUnits","gt","filterLeaderboard","totalBets_gte","usersResponse","fetchAddressResult","rejectWithValue","filterNextPageLeaderboard","getState","predictionsSlice","setLeaderboardFilter","setHistoryPaneState","setChartPaneState","setHistoryFilter","setLastOraclePrice","markAsCollected","setSelectedAddress","newestRound","maxBy","futureRound","futureRounds","isInitialized","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","achievements","achievementFetchStatus","NOT_FETCHED","fetchAchievements","achievementSlice","addAchievement","FETCHING","FETCHED","getProposals","ACTIVE","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","headers","body","isValid","getAllVotes","proposalId","votesPerChunk","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","voting","votingSlice","_inValid","updateProtocolData","updateProtocolChartData","updateProtocolTransactions","updatePoolData","addPoolKeys","updatePoolChartData","updatePoolTransactions","updateTokenData","addTokenKeys","addTokenPoolAddresses","updateTokenChartData","updateTokenTransactions","updateTokenPriceData","protocol","overview","chartData","byAddress","createReducer","protocolData","poolData","poolAddresses","poolAddress","tokenData","tokenAddresses","priceData","secondsInterval","oldestFetchedTimestamp","updateVersion","currentTimestamp","pairKey","token0Address","token1Address","Field","userExpertMode","userSingleHopOnly","userSlippageTolerance","userDeadline","pairs","timestamp","audioPlay","isExchangeChartDisplayed","userFarmStakedOnly","ON_FINISHED","userPoolStakedOnly","userPoolsViewMode","TABLE","userFarmsViewMode","userPredictionAcceptedRisk","userPredictionChartDisclaimerShow","userExpertModeAcknowledgementShow","userUsernameVisibility","watchlistTokens","watchlistPools","showPhishingWarningBanner","lastUpdateVersionTimestamp","serializedPair","token0","token1","tokenAAddress","tokenBAddress","userAcceptedRisk","userShowDisclaimer","tokenWatchlist","newTokens","x","poolsWatchlist","newPools","addTransaction","approval","claim","txs","confirmedTime","selectCurrency","switchCurrencies","typeInput","replaceSwapState","setRecipient","updatePairData","updateDerivedPairData","independentField","INPUT","typedValue","currencyId","OUTPUT","recipient","inputCurrencyId","outputCurrencyId","pairDataById","derivedPairDataById","otherField","pairData","pairId","timeWindow","resetMintState","CURRENCY_A","otherTypedValue","noLiquidity","fetchTokenList","addList","removeList","enableList","disableList","acceptListUpdate","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","byUrl","listUrl","activeListUrls","requestId","url","tokenList","getVersionUpgrade","VersionUpgrade","NONE","errorMessage","u","lastInitializedSet","l","add","Set","newListOfListsSet","LIQUIDITY_PERCENT","PERSISTED_KEYS","configureStore","devTools","reducer","achievementsReducer","blockReducer","farmsReducer","poolsReducer","predictionsReducer","profileReducer","teamsReducer","votingReducer","lotteryReducer","infoReducer","nftMarketReducer","swap","mint","burn","lists","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","cloneDeep","userInitialState","transactionsInitialState","listsInitialState","profileInitialState","lotteryTokenDecimals","getBalanceAmount","dividedBy","balance","displayDecimals","toFixed","formatNumber","minPrecision","maxPrecision","minimumFractionDigits","maximumFractionDigits","toLocaleString","etherscan","isAddress","getProviderOrSigner","connectUnchecked","AddressZero","isMethodArg","isValidMethodArgs","isArray","every","xi","INVALID_RESULT","valid","NEVER_RELOAD","useCallsData","serializedCallKeys","callKeys","INVALID_CALL_STATE","loading","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","useMultipleContractSingleData","methodName","callInputs","getFunction","useSingleCallResult","inputs","interface","isFetching","currentLanguage","languageMap","translations","LanguageContext","LanguageProvider","codeFromStorage","languages","setState","fetchInitialLocales","enLocale","currentLocale","prevState","setLanguage","language","setItem","translate","translatedText","match","interpolatedText","dataKey","templateKey","RegExp","replace","languageContext","RPC_URL","getRpcUrl","StaticJsonRpcProvider","processViewLotterySuccessResponse","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","viewLottery","lotteryData","lotteryIds","multicallRes","processedResponses","currentIdAsInt","roundIds","useProcessLotteryResponse","priceTicketInCakeAsString","discountDivisorAsString","amountCollectedInCakeAsString","ticket","profileAvatars","fetchProfileAvatar","fetchProfileUsername","profileSlice","addPoints","usernameFetchStatus","avatarFetchStatus","CollectionKey","PANCAKE","slug","SQUAD"],"mappings":"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CJG,KAAM,MACNF,MAAO,OACP0W,MAAO,gBAET,CACE3W,GAAI,YACJG,KAAM,MACNF,MAAO,aACP0W,MAAO,iBAET,CACE3W,GAAI,YACJG,KAAM,MACNF,MAAO,QACP0W,MAAO,eAET,CACE3W,GAAI,YACJG,KAAM,MACNF,MAAO,UACP0W,MAAO,iBAET,CACE3W,GAAI,YACJG,KAAM,MACNF,MAAO,SACP0W,MAAO,kBAET,CACE3W,GAAI,YACJG,KAAM,MACNF,MAAO,QACP0W,MAAO,eAET,CACE3W,GAAI,YACJG,KAAM,MACNF,MAAO,QACP0W,MAAO,iBAET,CACE3W,GAAI,YACJG,KAAM,MACNF,MAAO,QACP0W,MAAO,eAET,CACE3W,GAAI,YACJG,KAAM,aACNF,MAAO,wBACP0W,MAAO,4BAET,CACE3W,GAAI,YACJG,KAAM,aACNF,MAAO,uBACP0W,MAAO,2BAET,CACE3W,GAAI,YACJG,KAAM,aACNF,MAAO,uBACP0W,MAAO,2BAET,CACE3W,GAAI,YACJG,KAAM,aACNF,MAAO,uBACP0W,MAAO,2BAET,CACE3W,GAAI,YACJG,KAAM,aACNF,MAAO,2BACP0W,MAAO,+BAET,CACE3W,GAAI,YACJG,KAAM,aACNF,MAAO,0BACP0W,MAAO,8BAET,CACE3W,GAAI,YACJG,KAAM,aACNF,MAAO,yBACP0W,MAAO,6BAET,CACE3W,GAAI,YACJG,KAAM,aACNF,MAAO,yBACP0W,MAAO,6BAET,CACE3W,GAAI,YACJG,KAAM,aACNF,MAAO,yBACP0W,MAAO,6BAET,CACE3W,GAAI,YACJG,KAAM,aACNF,MAAO,6BACP0W,MAAO,iCAET,CACE3W,GAAI,YACJG,KAAM,aACNF,MAAO,0BACP0W,MAAO,8BAET,CACE3W,GAAI,YACJG,KAAM,aACNF,MAAO,yBACP0W,MAAO,6BAET,CACE3W,GAAI,YACJG,KAAM,aACNF,MAAO,yBACP0W,MAAO,6BAET,CACE3W,GAAI,YACJG,KAAM,aACNF,MAAO,yBACP0W,MAAO,6BAET,CACE3W,GAAI,YACJG,KAAM,aACNF,MAAO,6BACP0W,MAAO,iCAET,CACE3W,GAAI,YACJG,KAAM,gBACNF,MAAO,eACPC,YAAa,qDACbyW,MAAO,oBAET,CACE3W,GAAI,YACJG,KAAM,gBACNF,MAAO,cACPC,YAAa,mDACbyW,MAAO,mBAET,CACE3W,GAAI,YACJG,KAAM,gBACNF,MAAO,SACPC,YAAa,iDACbyW,MAAO,cAET,CACE3W,GAAI,YACJG,KAAM,gBACNF,MAAO,QACPC,YAAa,8CACbyW,MAAO,aAET,CACE3W,GAAI,YACJG,KAAM,gBACNF,MAAO,SACPC,YAAa,uDACbyW,MAAO,cAET,CACE3W,GAAI,YACJG,KAAM,gBACNF,MAAO,SACPC,YAAa,2DACbyW,MAAO,cAET,CACE3W,GAAI,YACJG,KAAM,MACNF,MAAO,eACP0W,MAAO,eAET,CACE3W,GAAI,YACJG,KAAM,MACNF,MAAO,oBACP0W,MAAO,eAET,CACE3W,GAAI,YACJG,KAAM,MACNF,MAAO,qBACP0W,MAAO,kBAQEC,EAAc,IAAIC,IAE/BH,EAAUjY,SAAQ,SAACqY,GACjBF,EAAY5I,IAAI8I,EAAS9W,GAAI8W,MAGhBJ,I,UCjOFK,G,gCAAsB,SAACD,GAClC,MACO,QADCA,EAAS3W,KAEN,CACL6W,IAAK,uBACLtgB,KAAM,CACJuJ,MAAO6W,EAAS7W,QAIb6W,EAAS7W,QAITgX,EAA4B,SAACH,GACxC,MACO,QADCA,EAAS3W,KAEN,CACL6W,IAAK,wDACLtgB,KAAM,CACJuJ,MAAO6W,EAAS7W,QAIb6W,EAAS5W,aCxBTgX,EAA0B,uCAAG,WAAO5b,GAAP,iBAAAxH,EAAA,+EAEf+gB,kBACrBsC,IACApC,cAF6B,IAAD,wPAa5B,CACEzZ,QAASA,EAAQ6L,gBAhBiB,uBAE9BlD,EAF8B,EAE9BA,KAF8B,kBAoB/BA,EAAKyI,QApB0B,yDAsB/B,MAtB+B,yDAAH,sDA6B1B0K,EAAe,uCAAG,WAAO9b,GAAP,eAAAxH,EAAA,sEACKojB,EAA2B5b,GADhC,UACvB+b,EADuB,gDAIpB,IAJoB,gCAOtBA,EAAoB7Q,QAAO,SAACC,EAAO6Q,GACxC,IAAKV,EAAYW,IAAID,EAAUxF,YAC7B,OAAOrL,EAGT,IAAM+Q,EAAeZ,EAAYa,IAAIH,EAAUxF,YAE/C,MAAM,GAAN,mBACKrL,GADL,CAEE,CACEzG,GAAIsX,EAAUxF,WACd3R,KAAMqX,EAAarX,KACnB5I,QAAS+f,EAAUtX,GACnBC,MAAO8W,EAAoBS,GAC3BtX,YAAa+W,EAA0BO,GACvCb,MAAOa,EAAab,MACpBjK,OAAQgL,OAAOJ,EAAU5K,aAG5B,KA1B0B,2CAAH,uD,gCC0GrB,IAAKiL,EAkDAC,EAqBAC,EAMAC,EA2EAC,EA8DAC,EA+DAC,EAKAC,EAMAC,EAwCAC,EApXZ,gR,SA4CYT,K,0BAAAA,E,oBAAAA,E,mBAAAA,M,cAkDAC,K,cAAAA,E,0BAAAA,E,oBAAAA,E,mBAAAA,M,cAqBAC,K,YAAAA,E,YAAAA,E,eAAAA,M,cAMAC,K,kBAAAA,E,YAAAA,E,gBAAAA,E,eAAAA,M,cA2EAC,K,UAAAA,E,sBAAAA,E,2BAAAA,M,cA8DAC,O,qBAAAA,I,qBAAAA,I,gBAAAA,M,cA+DAC,K,oBAAAA,E,aAAAA,M,cAKAC,K,UAAAA,E,YAAAA,E,uBAAAA,M,cAMAC,K,gBAAAA,E,kBAAAA,E,iBAAAA,M,cAwCAC,K,kBAAAA,E,YAAAA,E,kBAAAA,E,eAAAA,M,uCC9dZ,WAiBeC,IAVU,SAACzR,GACxB,IAAM9G,EAAMrM,mBAMZ,OAJAP,qBAAU,WACR4M,EAAIlM,QAAUgT,IACb,CAACA,IAEG9G,EAAIlM,U,qfCVL7B,EAAqBD,IAArBC,QAASC,EAAYF,IAAZE,QAUJsmB,EAAgB,CAC3Bp1B,KAAM,IAAIkuB,IACRrf,EACA,6CACA,GACA,OACA,cACA,4BAGFwmB,IAAK,IAAInH,IAAMrf,EAAS,6CAA8C,GAAI,MAAO,MAAO,4BACxF5O,KAAM,IAAIiuB,IACRrf,EACA,6CACA,GACA,OACA,oBACA,gCAEFxM,KAAM,IAAI6rB,IAAMrf,EAAS,6CAA8C,GAAI,OAAQ,QAAS,0BAC5F7M,KAAM,IAAIksB,IACRrf,EACA,6CACA,GACA,OACA,eACA,2BAEF3M,IAAK,IAAIgsB,IAAMrf,EAAS,6CAA8C,EAAG,MAAO,SAAU,sBAC1FvM,SAAU,IAAI4rB,IACZrf,EACA,6CACA,GACA,OACA,WACA,wBAEF5M,KAAM,IAAIisB,IAAMrf,EAAS,6CAA8C,GAAI,OAAQ,UAAW,uBAC9FpM,IAAK,IAAIyrB,IAAMrf,EAAS,6CAA8C,GAAI,MAAO,cAAe,mBAChGymB,IAAK,IAAIpH,IACPrf,EACA,6CACA,GACA,MACA,kCACA,8BAEFrM,QAAS,IAAI0rB,IACXrf,EACA,6CACA,GACA,UACA,4BACA,8BAEF3O,KAAM,IAAIguB,IACRrf,EACA,6CACA,GACA,OACA,cACA,+BAEF9C,IAAK,IAAImiB,IACPrf,EACA,6CACA,GACA,MACA,iBACA,6BAEF7K,KAAM,IAAIkqB,IACRrf,EACA,6CACA,GACA,OACA,aACA,sBAEF5J,KAAM,IAAIipB,IACRrf,EACA,6CACA,GACA,OACA,cACA,wBAEFrH,IAAK,IAAI0mB,IACPrf,EACA,6CACA,GACA,MACA,oBACA,2BAEF7J,IAAK,IAAIkpB,IACPrf,EACA,6CACA,GACA,MACA,6BACA,4BAEF3N,KAAM,IAAIgtB,IACRrf,EACA,6CACA,GACA,OACA,uBACA,8BAEF9I,KAAM,IAAImoB,IACRrf,EACA,6CACA,GACA,OACA,eACA,sBAEFtN,IAAK,IAAI2sB,IACPrf,EACA,6CACA,GACA,MACA,eACA,4BAEFrI,SAAU,IAAI0nB,IACZrf,EACA,6CACA,GACA,WACA,iBACA,6BAEF1E,KAAM,IAAI+jB,IACRrf,EACA,6CACA,GACA,OACA,aACA,yBAEFtE,MAAO,IAAI2jB,IACTrf,EACA,6CACA,GACA,QACA,mBACA,2BAEFhE,IAAK,IAAIqjB,IACPrf,EACA,6CACA,GACA,MACA,cACA,yBAEFnD,MAAO,IAAIwiB,IACTrf,EACA,6CACA,GACA,QACA,gBACA,4BAEFjD,OAAQ,IAAIsiB,IACVrf,EACA,6CACA,GACA,SACA,eACA,8BAEF5C,IAAK,IAAIiiB,IACPrf,EACA,6CACA,GACA,MACA,cACA,2BAEFzC,MAAO,IAAI8hB,IACTrf,EACA,6CACA,EACA,QACA,cACA,wBAEFvC,MAAO,IAAI4hB,IACTrf,EACA,6CACA,EACA,QACA,cACA,0BAEF/O,MAAO,IAAIouB,IACTrf,EACA,6CACA,GACA,QACA,iBACA,gCAEFlM,IAAK,IAAIurB,IACPrf,EACA,6CACA,GACA,MACA,cACA,yBAEF1L,SAAU,IAAI+qB,IACZrf,EACA,6CACA,GACA,WACA,kBACA,yBAEF/N,KAAM,IAAIotB,IACRrf,EACA,6CACA,GACA,OACA,gBACA,wBAEFzL,KAAM,IAAI8qB,IACRrf,EACA,6CACA,GACA,OACA,iBACA,wBAEF9N,IAAK,IAAImtB,IACPrf,EACA,6CACA,GACA,MACA,0BACA,mBAEFzM,KAAM,IAAI8rB,IACRrf,EACA,6CACA,GACA,OACA,oBACA,oCAEFxL,KAAM,IAAI6qB,IACRrf,EACA,6CACA,GACA,OACA,aACA,+BAEFvL,MAAO,IAAI4qB,IACTrf,EACA,6CACA,GACA,QACA,qBACA,gCAEFtL,GAAI,IAAI2qB,IACNrf,EACA,6CACA,GACA,KACA,2BACA,+BAEFnN,IAAK,IAAIwsB,IACPrf,EACA,6CACA,GACA,MACA,sBACA,6BAEF1M,MAAO,IAAI+rB,IACTrf,EACA,6CACA,GACA,QACA,cACA,0BAEFlL,MAAO,IAAIuqB,IACTrf,EACA,6CACA,GACA,QACA,kBACA,yBAEFjL,QAAS,IAAIsqB,IACXrf,EACA,6CACA,GACA,MACA,oBACA,4BAEFhL,KAAM,IAAIqqB,IAAMrf,EAAS,6CAA8C,GAAI,OAAQ,aAAc,oBACjGjO,IAAK,IAAIstB,IACPrf,EACA,6CACA,GACA,MACA,wBACA,4BAEF9K,IAAK,IAAImqB,IACPrf,EACA,6CACA,GACA,MACA,qBACA,4BAEF3K,OAAQ,IAAIgqB,IACVrf,EACA,6CACA,GACA,SACA,eACA,uBAEF1K,OAAQ,IAAI+pB,IACVrf,EACA,6CACA,GACA,SACA,uBACA,iCAEFvK,KAAM,IAAI4pB,IACRrf,EACA,6CACA,GACA,OACA,kBACA,yBAEFjF,IAAK,IAAIskB,IAAMrf,EAAS,6CAA8C,GAAI,MAAO,aAAc,qBAC/FtK,KAAM,IAAI2pB,IACRrf,EACA,6CACA,GACA,OACA,aACA,yBAEFhF,IAAK,IAAIqkB,IACPrf,EACA,6CACA,GACA,MACA,kBACA,6BAEF/E,MAAO,IAAIokB,IACTrf,EACA,6CACA,GACA,QACA,qBACA,iCAEF9E,MAAO,IAAImkB,IACTrf,EACA,6CACA,EACA,QACA,0BACA,oCAEF7E,IAAK,IAAIkkB,IACPrf,EACA,6CACA,GACA,MACA,gBACA,6BAEF5E,IAAK,IAAIikB,IACPrf,EACA,6CACA,GACA,MACA,mBACA,kCAEF3E,KAAM,IAAIgkB,IACRrf,EACA,6CACA,EACA,OACA,aACA,wBAEFhM,KAAM,IAAIqrB,IACRrf,EACA,6CACA,GACA,OACA,kBACA,yBAEFzE,IAAK,IAAI8jB,IACPrf,EACA,6CACA,GACA,MACA,iBACA,qBAEFxE,KAAM,IAAI6jB,IACRrf,EACA,6CACA,GACA,OACA,aACA,yBAEFjM,IAAK,IAAIsrB,IACPrf,EACA,6CACA,GACA,MACA,uBACA,qBAEFvE,IAAK,IAAI4jB,IACPrf,EACA,6CACA,EACA,MACA,oBACA,gCAEFlH,MAAO,IAAIumB,IACTrf,EACA,6CACA,EACA,QACA,2BACA,sCAEF5H,KAAM,IAAIinB,IACRrf,EACA,6CACA,GACA,OACA,mBACA,+BAEFrE,KAAM,IAAI0jB,IACRrf,EACA,6CACA,GACA,OACA,kCACA,qBAEFpE,IAAK,IAAIyjB,IACPrf,EACA,6CACA,GACA,MACA,kBACA,8BAEFnE,MAAO,IAAIwjB,IACTrf,EACA,6CACA,GACA,QACA,wBACA,uBAEFjE,KAAM,IAAIsjB,IACRrf,EACA,6CACA,GACA,OACA,aACA,sBAEF7G,QAAS,IAAIkmB,IACXrf,EACA,6CACA,GACA,UACA,wBACA,4BAEF/D,IAAK,IAAIojB,IACPrf,EACA,6CACA,GACA,MACA,iBACA,wBAEF9D,KAAM,IAAImjB,IACRrf,EACA,6CACA,GACA,OACA,aACA,0BAEFjJ,IAAK,IAAIsoB,IACPrf,EACA,6CACA,GACA,MACA,YACA,0BAEF5D,IAAK,IAAIijB,IACPrf,EACA,6CACA,GACA,MACA,gBACA,2BAEF3D,KAAM,IAAIgjB,IACRrf,EACA,6CACA,GACA,OACA,uBACA,2BAEF1D,IAAK,IAAI+iB,IACPrf,EACA,6CACA,GACA,MACA,iBACA,6BAEFtI,KAAM,IAAI2nB,IACRrf,EACA,6CACA,EACA,OACA,eACA,2BAEFzD,IAAK,IAAI8iB,IACPrf,EACA,6CACA,GACA,MACA,gBACA,uBAEFxD,KAAM,IAAI6iB,IACRrf,EACA,6CACA,GACA,OACA,eACA,uBAEFlD,MAAO,IAAIuiB,IACTrf,EACA,6CACA,GACA,QACA,iBACA,yBAEFhD,MAAO,IAAIqiB,IACTrf,EACA,6CACA,GACA,QACA,4BACA,uBAEF7C,KAAM,IAAIkiB,IACRrf,EACA,6CACA,GACA,OACA,aACA,sBAEF3C,MAAO,IAAIgiB,IACTrf,EACA,6CACA,GACA,QACA,sBACA,6BAEFjB,IAAK,IAAIsgB,IACPrf,EACA,6CACA,EACA,MACA,gBACA,0BAEFhB,IAAK,IAAIqgB,IACPrf,EACA,6CACA,EACA,MACA,yBACA,0BAEFlB,GAAI,IAAIugB,IACNrf,EACA,6CACA,EACA,KACA,gBACA,0BAEF1C,KAAM,IAAI+hB,IACRrf,EACA,6CACA,GACA,OACA,qBACA,yBAEFf,IAAK,IAAIogB,IACPrf,EACA,6CACA,EACA,MACA,iBACA,0BAEFd,IAAK,IAAImgB,IACPrf,EACA,6CACA,EACA,MACA,4BACA,0BAEFxC,IAAK,IAAI6hB,IACPrf,EACA,6CACA,GACA,MACA,iBACA,8CAEFtC,KAAM,IAAI2hB,IACRrf,EACA,6CACA,GACA,OACA,aACA,6BAEF1B,IAAK,IAAI+gB,IACPrf,EACA,6CACA,GACA,MACA,qBACA,4BAEFrC,KAAM,IAAI0hB,IACRrf,EACA,6CACA,EACA,OACA,aACA,wBAEFzG,QAAS,IAAI8lB,IACXrf,EACA,6CACA,GACA,UACA,eACA,sBAEFX,KAAM,IAAIggB,IACRrf,EACA,6CACA,GACA,OACA,gBACA,4BAEFV,IAAK,IAAI+f,IACPrf,EACA,6CACA,GACA,MACA,oBACA,4BAEFT,IAAK,IAAI8f,IACPrf,EACA,6CACA,GACA,MACA,iBACA,yBAEFpC,IAAK,IAAIyhB,IACPrf,EACA,6CACA,EACA,MACA,eACA,kCAEFlC,IAAK,IAAIuhB,IACPrf,EACA,6CACA,GACA,MACA,2BACA,kCAEFnC,IAAK,IAAIwhB,IAAMrf,EAAS,6CAA8C,GAAI,MAAO,cAAe,qBAChG5B,MAAO,IAAIihB,IACTrf,EACA,6CACA,GACA,QACA,sBACA,4BAEF3B,IAAK,IAAIghB,IAAMrf,EAAS,6CAA8C,GAAI,MAAO,cAAe,qBAChGlE,MAAO,IAAIujB,IACTrf,EACA,6CACA,GACA,QACA,yBACA,sBAEF7D,KAAM,IAAIkjB,IACRrf,EACA,6CACA,GACA,OACA,yBACA,6BAEFlF,KAAM,IAAIukB,IACRrf,EACA,6CACA,GACA,OACA,sBACA,0BAEFnF,KAAM,IAAIwkB,IACRrf,EACA,6CACA,GACA,OACA,qBACA,yBAEFnB,KAAM,IAAIwgB,IACRrf,EACA,6CACA,GACA,OACA,qBACA,8CAEFvD,MAAO,IAAI4iB,IACTrf,EACA,6CACA,GACA,QACA,4BACA,2BAEFtD,OAAQ,IAAI2iB,IACVrf,EACA,6CACA,GACA,SACA,6BACA,2BAEFrD,MAAO,IAAI0iB,IACTrf,EACA,6CACA,GACA,QACA,4BACA,2BAEFpD,MAAO,IAAIyiB,IACTrf,EACA,6CACA,GACA,QACA,4BACA,2BAEF/C,IAAK,IAAIoiB,IACPrf,EACA,6CACA,GACA,MACA,6BACA,yBAEFrB,IAAK,IAAI0gB,IACPrf,EACA,6CACA,GACA,MACA,6BACA,4BAEFtB,KAAM,IAAI2gB,IACRrf,EACA,6CACA,GACA,OACA,kCACA,6BAEFvB,IAAK,IAAI4gB,IACPrf,EACA,6CACA,GACA,MACA,6BACA,6BAEFxB,IAAK,IAAI6gB,IACPrf,EACA,6CACA,GACA,MACA,wBACA,mBAEFzB,KAAM,IAAI8gB,IACRrf,EACA,6CACA,GACA,OACA,8BACA,uBAEF7B,IAAK,IAAIkhB,IACPrf,EACA,6CACA,GACA,MACA,wBACA,2BAEF9B,KAAM,IAAImhB,IACRrf,EACA,6CACA,GACA,OACA,2BACA,2BAEFpB,KAAM,IAAIygB,IACRrf,EACA,6CACA,GACA,OACA,iCACA,wBAEFb,IAAK,IAAIkgB,IACPrf,EACA,6CACA,GACA,MACA,0BACA,0BAEFZ,IAAK,IAAIigB,IACPrf,EACA,6CACA,GACA,MACA,iCACA,qBAEF/B,IAAK,IAAIohB,IACPrf,EACA,6CACA,GACA,MACA,kCACA,0BAEFhC,IAAK,IAAIqhB,IACPrf,EACA,6CACA,GACA,MACA,4BACA,wBAEFjC,IAAK,IAAIshB,IACPrf,EACA,6CACA,GACA,MACA,6BACA,wBAEFR,KAAM,IAAI6f,IACRrf,EACA,6CACA,GACA,OACA,mBACA,+BAEFP,OAAQ,IAAI4f,IACVrf,EACA,6CACA,GACA,SACA,mBACA,2BAEFvF,MAAO,IAAI4kB,IACTrf,EACA,6CACA,GACA,QACA,yBACA,2BAEFxF,QAAS,IAAI6kB,IACXrf,EACA,6CACA,GACA,UACA,2BACA,2BAEFpF,MAAO,IAAIykB,IACTrf,EACA,6CACA,GACA,QACA,iBACA,yBAEFpH,IAAK,IAAIymB,IACPrf,EACA,6CACA,GACA,MACA,iBACA,uBAEFrF,IAAK,IAAI0kB,IACPrf,EACA,6CACA,GACA,MACA,wBACA,2BAEFnH,KAAM,IAAIwmB,IACRrf,EACA,6CACA,GACA,OACA,oBACA,uBAEFtF,IAAK,IAAI2kB,IACPrf,EACA,6CACA,GACA,MACA,oBACA,2BAEFzF,KAAM,IAAI8kB,IACRrf,EACA,6CACA,GACA,OACA,mBACA,kCAEF1F,IAAK,IAAI+kB,IACPrf,EACA,6CACA,GACA,MACA,gBACA,4BAEF5I,KAAM,IAAIioB,IACRrf,EACA,6CACA,EACA,OACA,qBACA,yBAEF3F,KAAM,IAAIglB,IACRrf,EACA,6CACA,EACA,OACA,yBACA,6BAEFlK,IAAK,IAAIupB,IACPrf,EACA,6CACA,GACA,MACA,gBACA,gCAEF/K,IAAK,IAAIoqB,IACPrf,EACA,6CACA,GACA,MACA,sBACA,6BAEF5F,KAAM,IAAIilB,IACRrf,EACA,6CACA,GACA,OACA,qBACA,iCAEF7F,IAAK,IAAIklB,IACPrf,EACA,6CACA,GACA,MACA,sBACA,qBAEF9F,KAAM,IAAImlB,IACRrf,EACA,6CACA,GACA,OACA,aACA,2BAEF9J,KAAM,IAAImpB,IAAMrf,EAAS,6CAA8C,GAAI,OAAQ,aAAc,oBACjG/F,IAAK,IAAIolB,IAAMrf,EAAS,6CAA8C,EAAG,MAAO,YAAa,oBAC7FhG,KAAM,IAAIqlB,IACRrf,EACA,6CACA,GACA,OACA,iBACA,wBAEF3J,OAAQ,IAAIgpB,IACVrf,EACA,6CACA,GACA,SACA,eACA,+BAEFjG,IAAK,IAAIslB,IACPrf,EACA,6CACA,GACA,MACA,mBACA,+BAEFlG,KAAM,IAAIulB,IACRrf,EACA,6CACA,GACA,OACA,qBACA,yBAEFnG,KAAM,IAAIwlB,IACRrf,EACA,6CACA,GACA,OACA,kBACA,yBAEFpG,IAAK,IAAIylB,IACPrf,EACA,6CACA,GACA,MACA,yBACA,6BAEFhO,IAAK,IAAIqtB,IACPrf,EACA,6CACA,GACA,MACA,wBACA,wBAEFrG,IAAK,IAAI0lB,IACPrf,EACA,6CACA,EACA,MACA,6BACA,2BAEFtG,KAAM,IAAI2lB,IACRrf,EACA,6CACA,GACA,OACA,SACA,4BAEFvG,KAAM,IAAI4lB,IACRrf,EACA,6CACA,GACA,OACA,YACA,4BAEFxG,IAAK,IAAI6lB,IACPrf,EACA,6CACA,GACA,MACA,yBACA,gCAEF5K,MAAO,IAAIiqB,IACTrf,EACA,6CACA,GACA,QACA,iBACA,+BAEF1G,IAAK,IAAI+lB,IACPrf,EACA,6CACA,GACA,MACA,oBACA,8BAEF0mB,IAAK,IAAIrH,IACPrf,EACA,6CACA,GACA,MACA,YACA,oCAEF3G,MAAO,IAAIgmB,IACTrf,EACA,6CACA,GACA,QACA,cACA,0BAEF5G,IAAK,IAAIimB,IACPrf,EACA,6CACA,GACA,MACA,gBACA,4BAEF9G,YAAM,IAAImmB,IACRrf,EACA,6CACA,EACA,YACA,sBACA,8BAEF/G,OAAQ,IAAIomB,IACVrf,EACA,6CACA,GACA,SACA,cACA,kCAEFhH,IAAK,IAAIqmB,IACPrf,EACA,6CACA,GACA,MACA,iBACA,yBAEFjH,IAAK,IAAIsmB,IACPrf,EACA,6CACA,GACA,MACA,qBACA,yBAEF7L,IAAK,IAAIkrB,IACPrf,EACA,6CACA,GACA,MACA,+BACA,+BAEF5L,IAAK,IAAIirB,IACPrf,EACA,6CACA,GACA,MACA,aACA,yBAEF3L,IAAK,IAAIgrB,IACPrf,EACA,6CACA,GACA,MACA,YACA,yBAEFtH,MAAO,IAAI2mB,IACTrf,EACA,6CACA,GACA,QACA,4BACA,2BAEFvH,KAAM,IAAI4mB,IACRrf,EACA,6CACA,GACA,OACA,aACA,2BAEFzH,IAAK,IAAI8mB,IACPrf,EACA,6CACA,GACA,MACA,wBACA,0BAEFxH,IAAK,IAAI6mB,IACPrf,EACA,6CACA,GACA,MACA,gCACA,0BAEF1H,KAAM,IAAI+mB,IACRrf,EACA,6CACA,GACA,OACA,aACA,uBAEF3H,IAAK,IAAIgnB,IACPrf,EACA,6CACA,EACA,MACA,mBACA,wBAEF7H,KAAM,IAAIknB,IACRrf,EACA,6CACA,EACA,OACA,uBACA,yBAEF9H,KAAM,IAAImnB,IACRrf,EACA,6CACA,GACA,OACA,kBACA,0BAEF/H,IAAK,IAAIonB,IACPrf,EACA,6CACA,GACA,MACA,eACA,2BAEFnL,KAAM,IAAIwqB,IACRrf,EACA,6CACA,GACA,OACA,iBACA,yBAEFhI,aAAO,IAAIqnB,IACTrf,EACA,6CACA,EACA,aACA,iBACA,8BAEFjI,IAAK,IAAIsnB,IACPrf,EACA,6CACA,GACA,MACA,eACA,2BAEFlI,KAAM,IAAIunB,IACRrf,EACA,6CACA,GACA,OACA,eACA,uBAEFnI,MAAO,IAAIwnB,IACTrf,EACA,6CACA,EACA,QACA,qBACA,2BAEFpI,KAAM,IAAIynB,IACRrf,EACA,6CACA,GACA,OACA,aACA,8BAEFvI,KAAM,IAAI4nB,IACRrf,EACA,6CACA,GACA,OACA,aACA,yBAEFxI,IAAK,IAAI6nB,IAAMrf,EAAS,6CAA8C,GAAI,MAAO,YAAa,wBAC9FzI,IAAK,IAAI8nB,IACPrf,EACA,6CACA,EACA,MACA,eACA,wBAEF1I,KAAM,IAAI+nB,IACRrf,EACA,6CACA,GACA,OACA,aACA,gCAEF3I,KAAM,IAAIgoB,IACRrf,EACA,6CACA,GACA,OACA,gBACA,8BAEFxK,IAAK,IAAI6pB,IACPrf,EACA,6CACA,GACA,MACA,kBACA,0BAEFzK,OAAQ,IAAI8pB,IACVrf,EACA,6CACA,GACA,SACA,cACA,0BAEF7I,MAAO,IAAIkoB,IACTrf,EACA,6CACA,GACA,QACA,wBACA,uBAEF/I,GAAI,IAAIooB,IACNrf,EACA,6CACA,GACA,KACA,gBACA,2BAEFhJ,IAAK,IAAIqoB,IACPrf,EACA,6CACA,GACA,MACA,qBACA,qBAEF9L,KAAM,IAAImrB,IACRrf,EACA,6CACA,GACA,OACA,4BACA,4BAEFlJ,KAAM,IAAIuoB,IACRrf,EACA,6CACA,GACA,OACA,qBACA,yBAEFnJ,IAAK,IAAIwoB,IACPrf,EACA,6CACA,GACA,MACA,gBACA,uBAEFpJ,IAAK,IAAIyoB,IACPrf,EACA,6CACA,GACA,MACA,mBACA,0BAEFrJ,KAAM,IAAI0oB,IACRrf,EACA,6CACA,GACA,OACA,oBACA,mCAEFtJ,GAAI,IAAI2oB,IAAMrf,EAAS,6CAA8C,GAAI,KAAM,WAAY,wBAC3FvJ,IAAK,IAAI4oB,IACPrf,EACA,6CACA,GACA,MACA,iBACA,4BAEFxJ,KAAM,IAAI6oB,IACRrf,EACA,6CACA,GACA,OACA,cACA,2BAEFzJ,OAAQ,IAAI8oB,IACVrf,EACA,6CACA,GACA,SACA,kBACA,8BAEF1J,MAAO,IAAI+oB,IACTrf,EACA,6CACA,GACA,QACA,kBACA,yBAEF/J,KAAM,IAAIopB,IACRrf,EACA,6CACA,EACA,OACA,aACA,+BAEFhK,GAAI,IAAIqpB,IACNrf,EACA,6CACA,GACA,KACA,gBACA,uBAEFjK,IAAK,IAAIspB,IAAMrf,EAAS,6CAA8C,EAAG,MAAO,eAAgB,sBAChGnK,IAAK,IAAIwpB,IACPrf,EACA,6CACA,GACA,MACA,eACA,0BAEFpK,IAAK,IAAIypB,IACPrf,EACA,6CACA,GACA,MACA,yBACA,wBAEFrK,IAAK,IAAI0pB,IACPrf,EACA,6CACA,GACA,MACA,wBACA,4BAEF2mB,SAAU,IAAItH,IACZrf,EACA,6CACA,EACA,WACA,iBACA,yBAEFpL,IAAK,IAAIyqB,IACPrf,EACA,6CACA,GACA,MACA,qCACA,6BAEFrL,IAAK,IAAI0qB,IACPrf,EACA,6CACA,GACA,MACA,eACA,uBAEF/L,KAAM,IAAIorB,IACRrf,EACA,6CACA,GACA,OACA,gBACA,wBAEFxO,IAAK,IAAI6tB,IACPrf,EACA,6CACA,GACA,MACA,mBACA,oCAEFrN,KAAM,IAAI0sB,IACRrf,EACA,6CACA,GACA,OACA,aACA,iCAEFtM,GAAI,IAAI2rB,IACNrf,EACA,6CACA,GACA,KACA,kBACA,8BAEFzO,MAAO,IAAI8tB,IACTrf,EACA,6CACA,GACA,QACA,qBACA,yBAEFnM,KAAM,IAAIwrB,IACRrf,EACA,6CACA,GACA,OACA,YACA,yBAEFlN,KAAM,IAAIusB,IACRrf,EACA,6CACA,GACA,OACA,eACA,yBAEFhN,MAAO,IAAIqsB,IACTrf,EACA,6CACA,GACA,QACA,YACA,sCAEF9M,IAAK,IAAImsB,IACPrf,EACA,6CACA,GACA,MACA,mBACA,oCAEF/M,IAAK,IAAIosB,IACPrf,EACA,6CACA,GACA,MACA,QACA,8BAEFpN,MAAO,IAAIysB,IACTrf,EACA,6CACA,EACA,QACA,qBACA,2DAEFjN,IAAK,IAAIssB,IAAMrf,EAAS,6CAA8C,EAAG,MAAO,QAAS,yBACzFxN,KAAM,IAAI6sB,IACRrf,EACA,6CACA,GACA,OACA,kBACA,+BAEFvN,IAAK,IAAI4sB,IACPrf,EACA,6CACA,GACA,MACA,iBACA,8BAEF1O,IAAK,IAAI+tB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","file":"static/js/main.chunk.js","sourcesContent":["import { serializeTokens } from './tokens'\nimport { SerializedFarmConfig } from './types'\n\nconst serializedTokens = serializeTokens()\n\nconst farms: SerializedFarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n  {\n    pid: 0,\n    lpSymbol: 'CAKE',\n    lpAddresses: {\n      97: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    token: serializedTokens.syrup,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 251,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\n      56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\n    },\n    token: serializedTokens.cake,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 252,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: serializedTokens.busd,\n    quoteToken: serializedTokens.wbnb,\n  },\n  /**\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\n   */\n  {\n    pid: 479,\n    lpSymbol: 'ZOO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x85e5889Fc3Ed01B4e8B56bbc717D7643294d2c31',\n    },\n    token: serializedTokens.zoo,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 450,\n    lpSymbol: 'SFUND-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x74fA517715C4ec65EF01d55ad5335f90dce7CC87',\n    },\n    token: serializedTokens.sfund,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 447,\n    lpSymbol: 'GNT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3747e3e107223539FD09bb730b055A1f11F78Adf',\n    },\n    token: serializedTokens.gnt,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 477,\n    lpSymbol: 'SHEESHA-BNB',\n    lpAddresses: {\n      97: '',\n      56: '0xB31Ecb43645EB273210838e710f2692CC6b30a11',\n    },\n    token: serializedTokens.sheesha,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 478,\n    lpSymbol: 'BCOIN-BUSD',\n    lpAddresses: {\n      97: '',\n      56: '0xd76026a78a2A9aF2f9F57fe6337eED26Bfc26AED',\n    },\n    token: serializedTokens.bcoin,\n    quoteToken: serializedTokens.busd,\n    isCommunity: true,\n  },\n  {\n    pid: 476,\n    lpSymbol: 'QI-BNB',\n    lpAddresses: {\n      97: '',\n      56: '0xf924E642f05ACC57fc3b14990c2B1a137683b201',\n    },\n    token: serializedTokens.qi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 475,\n    lpSymbol: 'KART-BNB',\n    lpAddresses: {\n      97: '',\n      56: '0x0927C49A18eAc4512112e7a226275e2c36f2C3Db',\n    },\n    token: serializedTokens.kart,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 474,\n    lpSymbol: 'PORTO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0A292e96ABb35297786a38fDD67Dc4f82689E670',\n    },\n    token: serializedTokens.porto,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 425,\n    lpSymbol: 'DVI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x89ebf9cd99864f6e51bd7a578965922029cab977',\n    },\n    token: serializedTokens.dvi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 351,\n    lpSymbol: 'JGN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7275278C94b5e20708380561C4Af98F38dDC6374',\n    },\n    token: serializedTokens.jgn,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 446,\n    lpSymbol: 'BMON-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x00e53C169dA54a7E11172aEEDf8Eb87F060F479e',\n    },\n    token: serializedTokens.bmon,\n    quoteToken: serializedTokens.busd,\n    isCommunity: true,\n  },\n  {\n    pid: 438,\n    lpSymbol: 'WSG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x37Ff7D4459ad96E0B01275E5efffe091f33c2CAD',\n    },\n    token: serializedTokens.wsg,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 469,\n    lpSymbol: 'ZOO-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd5D00B0aD40FF6d8C1a6F7e72F185B6fB3c3fd1F',\n    },\n    token: serializedTokens.zoo,\n    quoteToken: serializedTokens.busd,\n    isCommunity: true,\n  },\n  {\n    pid: 473,\n    lpSymbol: 'ETERNAL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbd26e08411483C4BEBba80939FA5a775beE22338',\n    },\n    token: serializedTokens.eternal,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 472,\n    lpSymbol: 'XWG-USDC LP',\n    lpAddresses: {\n      97: '',\n      56: '0x936928146a21AfCcd30DfA84824A780572B1630B',\n    },\n    token: serializedTokens.xwg,\n    quoteToken: serializedTokens.usdc,\n  },\n  {\n    pid: 471,\n    lpSymbol: 'DAR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x062f88E2B4896e823ac78Ac314468c29eEC4186d',\n    },\n    token: serializedTokens.dar,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 470,\n    lpSymbol: 'FINA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6dB23b5360c9D2859fDcbf41c56494e7b8573649',\n    },\n    token: serializedTokens.fina,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 467,\n    lpSymbol: 'MONI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbcfd0d4a37fEb4dceAAeFa9da28CD833E5f04e9f',\n    },\n    token: serializedTokens.moni,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 468,\n    lpSymbol: 'XMS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xBC7e925F9Dec60FE4F50C0457609f3cA5c3f5906',\n    },\n    token: serializedTokens.xms,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 437,\n    lpSymbol: 'BMON-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3C2b7B578Dd2175A1c3524Aa0D515106282Bf108',\n    },\n    token: serializedTokens.bmon,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 466,\n    lpSymbol: 'DKT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x365c3F921b2915a480308D0b1C04aEF7B99c2876',\n    },\n    token: serializedTokens.dkt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 448,\n    lpSymbol: 'RUSD-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x59FaC9e98479fc9979aE2a0C7422Af50bCBB9B26',\n    },\n    token: serializedTokens.rusd,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 464,\n    lpSymbol: 'LAZIO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x11c0b2bb4fbb430825d07507a9e24e4c32f7704d',\n    },\n    token: serializedTokens.lazio,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 432,\n    lpSymbol: 'SPS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfdfde3af740a22648b9dd66d05698e5095940850',\n    },\n    token: serializedTokens.sps,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 459,\n    lpSymbol: 'CART-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x47F0987f276b06E7Ce8D3F09E4E7fEc41a5dB808',\n    },\n    token: serializedTokens.cart,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 465,\n    lpSymbol: 'ARV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA63E32FeEFC6590bBf869070Fd2e706Eb7881bd2',\n    },\n    token: serializedTokens.arv,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 460,\n    lpSymbol: 'LIGHT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD469F2E7d1329836733aDBAc6B53E09b775a6e03',\n    },\n    token: serializedTokens.light,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 463,\n    lpSymbol: 'MCB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE4077A90f8600d9599440cC6d9057785f43a6Ac9',\n    },\n    token: serializedTokens.mcb,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 462,\n    lpSymbol: 'RPG-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x55cdb14855220b239Cf857A03849D96736b9103f',\n    },\n    token: serializedTokens.rpg,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 461,\n    lpSymbol: 'BETA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x88a02d94f437799f06f8c256ff07aa397e6d0016',\n    },\n    token: serializedTokens.beta,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 458,\n    lpSymbol: 'PROS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x109cBFfE72C02F26536Ff8b92278Dfd3610dE656',\n    },\n    token: serializedTokens.pros,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 457,\n    lpSymbol: 'NFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0ecc84c9629317a494f12bc56aa2522475bf32e8',\n    },\n    token: serializedTokens.nft,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 429,\n    lpSymbol: 'CHESS-USDC LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1472976e0b97f5b2fc93f1fff14e2b5c4447b64f',\n    },\n    token: serializedTokens.chess,\n    quoteToken: serializedTokens.usdc,\n  },\n  {\n    pid: 439,\n    lpSymbol: 'MCRN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe8D5d81dac092Ae61d097f84EFE230759BF2e522',\n    },\n    token: serializedTokens.mcrn,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 456,\n    lpSymbol: 'TLOS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3eDb06e2d182d133864fe7C0f9B4C204bBf61D4E',\n    },\n    token: serializedTokens.tlos,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 455,\n    lpSymbol: 'HERO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5d937c3966002cbD9d32c890a59439b4b300a14d',\n    },\n    token: serializedTokens.stephero,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 449,\n    lpSymbol: 'BP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2bF2dEB40639201C9A94c9e33b4852D9AEa5fd2D',\n    },\n    token: serializedTokens.bp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 454,\n    lpSymbol: 'BSCDEFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5B0A3b98C2f01741A11E57A9d0595B254E62F9F2',\n    },\n    token: serializedTokens.bscdefi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 453,\n    lpSymbol: 'QBT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x67EFeF66A55c4562144B9AcfCFbc62F9E4269b3e',\n    },\n    token: serializedTokens.qbt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 452,\n    lpSymbol: 'NAOS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcaa662ad41a662b81be2aea5d59ec0697628665f',\n    },\n    token: serializedTokens.naos,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 451,\n    lpSymbol: 'PHA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4ddd56e2f34338839BB5953515833950eA680aFb',\n    },\n    token: serializedTokens.pha,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 314,\n    lpSymbol: 'BEL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x69DEE989c30b5fFe40867f5FC14F00E4bCE7B681',\n    },\n    token: serializedTokens.bel,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 317,\n    lpSymbol: 'RAMP-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE834bf723f5bDff34a5D1129F3c31Ea4787Bc76a',\n    },\n    token: serializedTokens.ramp,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 445,\n    lpSymbol: 'POTS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF90BAA331Cfd40F094476E752Bf272892170d399',\n    },\n    token: serializedTokens.pots,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 397,\n    lpSymbol: 'TUSD-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2e28b9b74d6d99d4697e913b82b41ef1cac51c6c',\n    },\n    token: serializedTokens.tusd,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 443,\n    lpSymbol: 'BTT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdcfbb12ded3fea12d2a078bc6324131cd14bf835',\n    },\n    token: serializedTokens.btt,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 442,\n    lpSymbol: 'TRX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb5d108578be3750209d1b3a8f45ffee8c5a75146',\n    },\n    token: serializedTokens.trx,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 441,\n    lpSymbol: 'WIN-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6a445ceb72c8b1751755386c3990055ff92e14a0',\n    },\n    token: serializedTokens.win,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 436,\n    lpSymbol: 'BABYCAKE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb5e33fE13a821e55ED33C884589a804B1b4F6fD8',\n    },\n    token: serializedTokens.babycake,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 440,\n    lpSymbol: 'HERO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe267018C943E77992e7e515724B07b9CE7938124',\n    },\n    token: serializedTokens.hero,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 435,\n    lpSymbol: 'REVV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1cc18962b919ef90085a8b21f8ddc95824fbad9e',\n    },\n    token: serializedTokens.revv,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 367,\n    lpSymbol: 'BTT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x946696344e7d4346b223e1cf77035a76690d6a73',\n    },\n    token: serializedTokens.btt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 434,\n    lpSymbol: 'SKILL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc19dfd34d3ba5816df9cbdaa02d32a9f8dc6f6fc',\n    },\n    token: serializedTokens.skill,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 369,\n    lpSymbol: 'WIN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x894bd57afd8efc93d9171cb585d11d0977557425',\n    },\n    token: serializedTokens.win,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 433,\n    lpSymbol: 'IF-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b4682D2B3f8670b125aF6AEA8d7eD2Daa43Bdc1',\n    },\n    token: serializedTokens.if,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 431,\n    lpSymbol: 'C98-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x92247860A03F48d5c6425c7CA35CDcFCB1013AA1',\n    },\n    token: serializedTokens.c98,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 430,\n    lpSymbol: 'AXS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC2d00De94795e60FB76Bc37d899170996cBdA436',\n    },\n    token: serializedTokens.axs,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 379,\n    lpSymbol: 'PMON-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcdb0016d97fd0e7ec2c3b78aa4786cbd8e19c14c',\n    },\n    token: serializedTokens.pmon,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 368,\n    lpSymbol: 'TRX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3cd338c3bb249b6b3c55799f85a589febbbff9dd',\n    },\n    token: serializedTokens.trx,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 428,\n    lpSymbol: 'TITAN-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9392a1f471d9aa14c0b8eb28bd7a3f4a814727be',\n    },\n    token: serializedTokens.titan,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 427,\n    lpSymbol: 'ONE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9d2296e2fe3cdbf2eb3e3e2ca8811bafa42eedff',\n    },\n    token: serializedTokens.harmony,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 426,\n    lpSymbol: 'MASK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x46c6bA71af7648cD7f67D0AD4d16f75bE251ed12',\n    },\n    token: serializedTokens.mask,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 339,\n    lpSymbol: 'GUM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x28Ea5894D4DBbE90bB58eE3BAB2869387d711c87',\n    },\n    token: serializedTokens.gum,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 424,\n    lpSymbol: 'ADX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0648ff5de80adf54aac07ece2490f50a418dde23',\n    },\n    token: serializedTokens.adx,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 423,\n    lpSymbol: 'USDC-USDT LP',\n    lpAddresses: {\n      97: '',\n      56: '0xec6557348085aa57c72514d67070dc863c0a5a8c',\n    },\n    token: serializedTokens.usdc,\n    quoteToken: serializedTokens.usdt,\n  },\n  {\n    pid: 422,\n    lpSymbol: 'CAKE-USDT LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA39Af17CE4a8eb807E076805Da1e2B8EA7D0755b',\n    },\n    token: serializedTokens.cake,\n    quoteToken: serializedTokens.usdt,\n  },\n  {\n    pid: 357,\n    lpSymbol: 'SUTER-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2d5DB889392Bc3c8B023A8631ca230A033eEA1B8',\n    },\n    token: serializedTokens.suter,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 421,\n    lpSymbol: 'BSCPAD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xba01662e978de7d67f8ffc937726215eb8995d17',\n    },\n    token: serializedTokens.bscpad,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 420,\n    lpSymbol: 'RABBIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x04b56A5B3f45CFeaFbfDCFc999c14be5434f2146',\n    },\n    token: serializedTokens.rabbit,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 419,\n    lpSymbol: 'WAULTx-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3e4370204f598205998143F07ebCC486E441b456',\n    },\n    token: serializedTokens.waultx,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 418,\n    lpSymbol: 'WEX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x547A355E70cd1F8CAF531B950905aF751dBEF5E6',\n    },\n    token: serializedTokens.wex,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 417,\n    lpSymbol: 'FORM-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3E19C18Fe3458A6065D8F0844cB7Eae52C9DAE07',\n    },\n    token: serializedTokens.form,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 416,\n    lpSymbol: 'ORBS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB87b857670A44356f2b70337E0F218713D2378e8',\n    },\n    token: serializedTokens.orbs,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 415,\n    lpSymbol: 'DG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8b2824d57eebf07f5aff5c91fa67ed7c501a9f43',\n    },\n    token: serializedTokens.$dg,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 414,\n    lpSymbol: 'WOO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x89eE0491CE55d2f7472A97602a95426216167189',\n    },\n    token: serializedTokens.woo,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 413,\n    lpSymbol: 'HTB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2a995d355d5df641e878c0f366685741fd18d004',\n    },\n    token: serializedTokens.htb,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 337,\n    lpSymbol: 'DFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x24d3B0eD4C444A4f6882d527cBF67aDc8c026582',\n    },\n    token: serializedTokens.dft,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 412,\n    lpSymbol: 'HAI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x289841bFb694767bCb56fBc7B741aB4B4D97D490',\n    },\n    token: serializedTokens.hai,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 411,\n    lpSymbol: 'O3-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7759283571Da8c0928786A96AE601944E10461Ff',\n    },\n    token: serializedTokens.o3,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 410,\n    lpSymbol: 'AMPL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6e98beb694ff1cdb1ee130edd2b21b0298683d58',\n    },\n    token: serializedTokens.ampl,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 343,\n    lpSymbol: 'ODDZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3c2c77353E2F6AC1578807b6b2336Bf3a3CbB014',\n    },\n    token: serializedTokens.oddz,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 409,\n    lpSymbol: 'ETH-USDC LP',\n    lpAddresses: {\n      97: '',\n      56: '0xEa26B78255Df2bBC31C1eBf60010D78670185bD0',\n    },\n    token: serializedTokens.eth,\n    quoteToken: serializedTokens.usdc,\n  },\n  {\n    pid: 408,\n    lpSymbol: 'BTCB-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD171B26E4484402de70e3Ea256bE5A2630d7e88D',\n    },\n    token: serializedTokens.btcb,\n    quoteToken: serializedTokens.eth,\n  },\n  {\n    pid: 347,\n    lpSymbol: 'BONDLY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb8b4383B49d451BBeA63BC4421466E1086da6f18',\n    },\n    token: serializedTokens.bondly,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 407,\n    lpSymbol: 'MARSH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x222f93187f15f354d41ff6a7703ef7e18cdd5103',\n    },\n    token: serializedTokens.marsh,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 406,\n    lpSymbol: 'BORING-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xDfA808Da5CFB9ABA5Fb3748FF85888F79174F378',\n    },\n    token: serializedTokens.boring,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 405,\n    lpSymbol: 'MBOX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8FA59693458289914dB0097F5F366d771B7a7C3F',\n    },\n    token: serializedTokens.mbox,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 404,\n    lpSymbol: 'ATA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xef7767677867552cfa699148b96a03358a9be779',\n    },\n    token: serializedTokens.ata,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 403,\n    lpSymbol: 'MX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x41f049d990d38305504631c9835f6f856bf1ba67',\n    },\n    token: serializedTokens.mx,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 402,\n    lpSymbol: 'bCFX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA0387eBeA6be90849c2261b911fBBD52B4C9eAC4',\n    },\n    token: serializedTokens.bcfx,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 401,\n    lpSymbol: 'QKC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8853e3309a31583ea438f7704681f46f0d4d909b',\n    },\n    token: serializedTokens.qkc,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 400,\n    lpSymbol: 'KTN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x48028de4a9b0d3d91180333d796021ec7757ba1b',\n    },\n    token: serializedTokens.ktn,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 399,\n    lpSymbol: 'MTRG-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4dcA4D427511bC327639b222DA18FA5e334F686F',\n    },\n    token: serializedTokens.mtrg,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 398,\n    lpSymbol: 'SWG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x226af4e918fcf3e62e5eeec867a3e78aaa7bb01d',\n    },\n    token: serializedTokens.swg,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 396,\n    lpSymbol: 'VRT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xef5212ada83ec2cc105c409df10b8806d20e3b35',\n    },\n    token: serializedTokens.vrt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 395,\n    lpSymbol: 'EZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x51bf99bbae59b67e5ce2fa9c17b683384773f8b3',\n    },\n    token: serializedTokens.ez,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 394,\n    lpSymbol: 'KALM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc74f7243766269dec5b85b0ef4af186e909c1b06',\n    },\n    token: serializedTokens.kalm,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 393,\n    lpSymbol: 'pOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1090c996fd1490d15dd7906322ee676a5cc3cf82',\n    },\n    token: serializedTokens.popen,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 335,\n    lpSymbol: 'LIEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa4963B38b271c0D714593063497Fc786Fa4029Ce',\n    },\n    token: serializedTokens.lien,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 392,\n    lpSymbol: 'WELL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1d94cb25895abd6ccfef863c53372bb462aa6b86',\n    },\n    token: serializedTokens.well,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 391,\n    lpSymbol: 'DERI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdc7188ac11e124b1fa650b73ba88bf615ef15256',\n    },\n    token: serializedTokens.deri,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 390,\n    lpSymbol: 'CHR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6045931e511ef7e53a4a817f971e0ca28c758809',\n    },\n    token: serializedTokens.chr,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 389,\n    lpSymbol: 'CAKE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x804678fa97d91B974ec2af3c843270886528a9E6',\n    },\n    token: serializedTokens.cake,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 388,\n    lpSymbol: 'CYC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xecf30fbecfa642012f54212a3be92eef1e48edac',\n    },\n    token: serializedTokens.cyc,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 387,\n    lpSymbol: 'XEND-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcecfc2789af72ed151589a96a59f3a1abc65c3b5',\n    },\n    token: serializedTokens.xend,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 296,\n    lpSymbol: 'HGET-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF74ee1e10e097dc326a2ad004F9Cc95CB71088d3',\n    },\n    token: serializedTokens.hget,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 386,\n    lpSymbol: 'HOTCROSS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf23bad605e94de0e3b60c9718a43a94a5af43915',\n    },\n    token: serializedTokens.hotcross,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 385,\n    lpSymbol: 'RFOX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8e04b3972b5c25766c681dfd30a8a1cbf6dcc8c1',\n    },\n    token: serializedTokens.rfox,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 384,\n    lpSymbol: 'WMASS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xec95ff6281c3ad8e27372fa6675eb337640b8e5e',\n    },\n    token: serializedTokens.wmass,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 383,\n    lpSymbol: 'UBXT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8d3ff27d2ad6a9556b7c4f82f4d602d20114bc90',\n    },\n    token: serializedTokens.ubxt,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 381,\n    lpSymbol: 'BTR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbc7ac609fa730239190a70952e64ee1dfc2530ac',\n    },\n    token: serializedTokens.btr,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 380,\n    lpSymbol: 'τDOGE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2030845Ce7d4224523fd2F03Ca20Afe4aAD1D890',\n    },\n    token: serializedTokens.τdoge,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 378,\n    lpSymbol: 'ONE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4d057f769d930eafd597b49d6fb2e1009a73a702',\n    },\n    token: serializedTokens.one,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 377,\n    lpSymbol: 'FINE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc309a6d2f1537922e06f15aa2eb21caa1b2eedb6',\n    },\n    token: serializedTokens.fine,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 376,\n    lpSymbol: 'DOGE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xac109c8025f272414fd9e2faa805a583708a017f',\n    },\n    token: serializedTokens.doge,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 310,\n    lpSymbol: 'bMXX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc20A92a1424b29b78DFaF92FD35D4cf8A06419B4',\n    },\n    token: serializedTokens.bmxx,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 375,\n    lpSymbol: 'OIN-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6a00e41561ac36a78dba1d09091b0f00c4e53724',\n    },\n    token: serializedTokens.oin,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 374,\n    lpSymbol: 'HYFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0716725d78081a9e0e1ff81516f5415b399e274d',\n    },\n    token: serializedTokens.hyfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 373,\n    lpSymbol: 'KUN-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xea61020e5a128d2bec67d48f7cfbe3408db7e391',\n    },\n    token: serializedTokens.kun,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 372,\n    lpSymbol: 'KUN-QSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4eafbf68a2d50291ffd163d4e00ad0f040aae707',\n    },\n    token: serializedTokens.kun,\n    quoteToken: serializedTokens.qsd,\n  },\n  {\n    pid: 371,\n    lpSymbol: 'MATH-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb7cada0f120ca46745a024e6b9fe907b2fe10cf3',\n    },\n    token: serializedTokens.math,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 370,\n    lpSymbol: 'mCOIN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbcf01a42f6bc42f3cfe81b05519565044d65d22a',\n    },\n    token: serializedTokens.mcoin,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 366,\n    lpSymbol: 'PNT-pBTC LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdaa89d335926628367b47852989bb22ee62ca5de',\n    },\n    token: serializedTokens.pnt,\n    quoteToken: serializedTokens.pbtc,\n  },\n  {\n    pid: 311,\n    lpSymbol: 'xMARK-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xAa40f1AC20AAFcFEE8595Da606D78C503C7e70A3',\n    },\n    token: serializedTokens.xmark,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 365,\n    lpSymbol: 'BTCB-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf45cd219aef8618a92baa7ad848364a158a24f33',\n    },\n    token: serializedTokens.btcb,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 364,\n    lpSymbol: 'LMT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8271d7eafeeb8f24d7c9fe1acce2ae20611972e5',\n    },\n    token: serializedTokens.lmt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 363,\n    lpSymbol: 'DFD-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x029d66f9c0469450b7b4834b8ddc6a1118cec3e1',\n    },\n    token: serializedTokens.dfd,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 362,\n    lpSymbol: 'ALPACA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7752e1fa9f3a2e860856458517008558deb989e3',\n    },\n    token: serializedTokens.alpaca,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 361,\n    lpSymbol: 'τBTC-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8046fa66753928F35f7Db23ae0188ee6743C2FBA',\n    },\n    token: serializedTokens.τbtc,\n    quoteToken: serializedTokens.btcb,\n  },\n  {\n    pid: 304,\n    lpSymbol: 'SWINGBY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4Fd6D315bEf387fAD2322fbc64368fC443F0886D',\n    },\n    token: serializedTokens.swingby,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 360,\n    lpSymbol: 'XED-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa7A0b605343dF36B748FF4B5f7578b3F2D0651CE',\n    },\n    token: serializedTokens.xed,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 359,\n    lpSymbol: 'HAKKA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2C624C9Ecf16Cb81aB85cC2C0B0c5e12A09AFDa6',\n    },\n    token: serializedTokens.hakka,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 358,\n    lpSymbol: 'CGG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0604471c532F9fEBAD3E37190B667f44BD0894b3',\n    },\n    token: serializedTokens.cgg,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 356,\n    lpSymbol: 'bROOBEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x950FD020F8E4B8C57285EC7020b7a204348dadFa',\n    },\n    token: serializedTokens.broobee,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 355,\n    lpSymbol: 'HZN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xDc9a574b9B341D4a98cE29005b614e1E27430E74',\n    },\n    token: serializedTokens.hzn,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 354,\n    lpSymbol: 'ALPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4cC442220BE1cE560C1f2573f8CA8f460B3E4172',\n    },\n    token: serializedTokens.alpa,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 353,\n    lpSymbol: 'PERL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x61010e6CbA3b56ba47E9dFd56Da682daCFe76131',\n    },\n    token: serializedTokens.perl,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 352,\n    lpSymbol: 'TLM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE6b421a4408c82381b226Ab5B6F8C4b639044359',\n    },\n    token: serializedTokens.tlm,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 350,\n    lpSymbol: 'EPS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xddE420cbB3794ebD8FFC3Ac69F9c78e5d1411870',\n    },\n    token: serializedTokens.eps,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 349,\n    lpSymbol: 'ARPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9730c791743300E9f984C9264395ce705A55Da7c',\n    },\n    token: serializedTokens.arpa,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 348,\n    lpSymbol: 'ITAM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd02DA76c813b9cd4516eD50442923E625f90228f',\n    },\n    token: serializedTokens.itam,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 346,\n    lpSymbol: 'TKO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFFd4B200d3C77A0B691B5562D804b3bd54294e6e',\n    },\n    token: serializedTokens.tko,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 345,\n    lpSymbol: 'APYS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x510b29a93ebf098f3fC24A16541aAA0114D07056',\n    },\n    token: serializedTokens.apys,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 344,\n    lpSymbol: 'HOO-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3e42C1f7239231E3752B507764445dd8e6A570d5',\n    },\n    token: serializedTokens.hoo,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 342,\n    lpSymbol: 'EASY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x20c6De8983Fb2D641c55004646aEF40b4EA66E18',\n    },\n    token: serializedTokens.easy,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 341,\n    lpSymbol: 'NRV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE482249Cd295C0d1e9D2baAEE71e66de21024C68',\n    },\n    token: serializedTokens.nrv,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 340,\n    lpSymbol: 'DEGO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF1Ec67fA1881796BFf63Db3E1A301cE9cb787Fad',\n    },\n    token: serializedTokens.dego,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 338,\n    lpSymbol: 'pBTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0362ba706DFE8ED12Ec1470aB171d8Dcb1C72B8D',\n    },\n    token: serializedTokens.pbtc,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 336,\n    lpSymbol: 'SWTH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x123D475E13aA54A43a7421d94CAa4459dA021c77',\n    },\n    token: serializedTokens.swth,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 334,\n    lpSymbol: 'ZIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6A97867a4b7Eb7646ffB1F359ad582e9903aa1C2',\n    },\n    token: serializedTokens.zil,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 333,\n    lpSymbol: 'pCWS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6615CE60D71513aA4849269dD63821D324A23F8C',\n    },\n    token: serializedTokens.pcws,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 332,\n    lpSymbol: 'bBADGER-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5A58609dA96469E9dEf3fE344bC39B00d18eb9A5',\n    },\n    token: serializedTokens.bbadger,\n    quoteToken: serializedTokens.btcb,\n  },\n  {\n    pid: 331,\n    lpSymbol: 'bDIGG-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x81d776C90c89B8d51E9497D58338933127e2fA80',\n    },\n    token: serializedTokens.bdigg,\n    quoteToken: serializedTokens.btcb,\n  },\n  {\n    pid: 330,\n    lpSymbol: 'LTO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa5Bb44c6F5fD9B836E5a654c8AbbCCc96A15deE5',\n    },\n    token: serializedTokens.lto,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 329,\n    lpSymbol: 'MIR-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x89666d026696660e93Bf6edf57B71A68615768B7',\n    },\n    token: serializedTokens.mir,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 328,\n    lpSymbol: 'TRADE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8F6baf368E7A4f6e2C9c995f22702d5e654A0237',\n    },\n    token: serializedTokens.trade,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 327,\n    lpSymbol: 'DUSK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x678EDb8B268e73dB57b7694c163e1dc296b6e219',\n    },\n    token: serializedTokens.dusk,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 326,\n    lpSymbol: 'BIFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3f1A9f3D9aaD8bD339eD4853F345d2eF89fbfE0c',\n    },\n    token: serializedTokens.bifi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 325,\n    lpSymbol: 'TXL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1434BB50196A0C7eA825940b1DFd8aAd25d79817',\n    },\n    token: serializedTokens.txl,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 324,\n    lpSymbol: 'COS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe98585bBb2dc81854fF100A3d9D7B0F53E0dafEd',\n    },\n    token: serializedTokens.cos,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 323,\n    lpSymbol: 'BUNNY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5aFEf8567414F29f0f927A0F2787b188624c10E2',\n    },\n    token: serializedTokens.bunny,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 322,\n    lpSymbol: 'ALICE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcAD7019D6d84a3294b0494aEF02e73BD0f2572Eb',\n    },\n    token: serializedTokens.alice,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 321,\n    lpSymbol: 'FOR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE60B4e87645093A42fa9dcC5d0C8Df6E67f1f9d2',\n    },\n    token: serializedTokens.for,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 320,\n    lpSymbol: 'BUX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x222C3CbB89647bF77822435Bd4c234A04272A77A',\n    },\n    token: serializedTokens.bux,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 319,\n    lpSymbol: 'NULS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x853784B7BDe87d858555715c0123374242db7943',\n    },\n    token: serializedTokens.nuls,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 318,\n    lpSymbol: 'BELT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF3Bc6FC080ffCC30d93dF48BFA2aA14b869554bb',\n    },\n    token: serializedTokens.belt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 316,\n    lpSymbol: 'BFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x153Ad7d25B0b810497483d0cEE8AF42Fc533FeC8',\n    },\n    token: serializedTokens.bfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 315,\n    lpSymbol: 'DEXE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3578B1f9BCE98D2F4D293b422d8850fdf48B1f21',\n    },\n    token: serializedTokens.dexe,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 313,\n    lpSymbol: 'TPT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6D0c831254221ba121fB53fb44Df289A6558867d',\n    },\n    token: serializedTokens.tpt,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 312,\n    lpSymbol: 'WATCH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x13321AcfF4A27f3d2bcA64b8bEaC6e5FdAAAf12C',\n    },\n    token: serializedTokens.watch,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 309,\n    lpSymbol: 'IOTX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc13aA76AAc067c86aE38028019F414D731b3D86A',\n    },\n    token: serializedTokens.iotx,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 308,\n    lpSymbol: 'BOR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe094c686aD6cDda57b9564457F541FBF099B948A',\n    },\n    token: serializedTokens.bor,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 307,\n    lpSymbol: 'bOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc7A9c2af263ebB86139Cca9349e49b17129Ba033',\n    },\n    token: serializedTokens.bopen,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 306,\n    lpSymbol: 'SUSHI-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x16aFc4F2Ad82986bbE2a4525601F8199AB9c832D',\n    },\n    token: serializedTokens.sushi,\n    quoteToken: serializedTokens.eth,\n  },\n  {\n    pid: 305,\n    lpSymbol: 'DODO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA9986Fcbdb23c2E8B11AB40102990a08f8E58f06',\n    },\n    token: serializedTokens.dodo,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 303,\n    lpSymbol: 'BRY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x21dD71aB78EDE3033c976948f769D506E4F489eE',\n    },\n    token: serializedTokens.bry,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 302,\n    lpSymbol: 'ZEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8e799cB0737525CeB8A6C6Ad07f748535fF6377B',\n    },\n    token: serializedTokens.zee,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 301,\n    lpSymbol: 'SWGb-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x856f9AD94cA8680B899214Bb1EB3d235a3C33Afe',\n    },\n    token: serializedTokens.swgb,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 300,\n    lpSymbol: 'COMP-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x37908620dEf1491Dd591b5a2d16022A33cDDA415',\n    },\n    token: serializedTokens.comp,\n    quoteToken: serializedTokens.eth,\n  },\n  {\n    pid: 299,\n    lpSymbol: 'SFP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x942b294e59a8c47a0F7F20DF105B082710F7C305',\n    },\n    token: serializedTokens.sfp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 298,\n    lpSymbol: 'LINA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC5768c5371568Cf1114cddD52CAeD163A42626Ed',\n    },\n    token: serializedTokens.lina,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 297,\n    lpSymbol: 'LIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1F37d4226d23d09044B8005c127C0517BD7e94fD',\n    },\n    token: serializedTokens.lit,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 295,\n    lpSymbol: 'BDO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4288706624e3dD839b069216eB03B8B9819C10d2',\n    },\n    token: serializedTokens.bdo,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 294,\n    lpSymbol: 'EGLD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcD68856b6E72E99b5eEaAE7d41Bb4A3b484c700D',\n    },\n    token: serializedTokens.egld,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 293,\n    lpSymbol: 'UST-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x05faf555522Fa3F93959F86B41A3808666093210',\n    },\n    token: serializedTokens.ust,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 292,\n    lpSymbol: 'mAMZN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC05654C66756eBB82c518598c5f1ea1a0199a563',\n    },\n    token: serializedTokens.mamzn,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 291,\n    lpSymbol: 'mGOOGL-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA3BfBbAd526C6B856B1Fdf73F99BCD894761fbf3',\n    },\n    token: serializedTokens.mgoogl,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 290,\n    lpSymbol: 'mNFLX-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x91417426C3FEaA3Ca795921eB9FdD9715ad92537',\n    },\n    token: serializedTokens.mnflx,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 289,\n    lpSymbol: 'mTSLA-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xEc6b56a736859AE8ea4bEdA16279Ecd8c60dA7EA',\n    },\n    token: serializedTokens.mtsla,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 288,\n    lpSymbol: 'wSOTE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7653D2c31440f04d2c6520D482dC5DbD7650f70a',\n    },\n    token: serializedTokens.wsote,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 287,\n    lpSymbol: 'FRONT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC6b668548aA4A56792e8002A920d3159728121D5',\n    },\n    token: serializedTokens.front,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 286,\n    lpSymbol: 'Helmet-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC869A9943b702B03770B6A92d2b2d25cf3a3f571',\n    },\n    token: serializedTokens.helmet,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 285,\n    lpSymbol: 'BTCST-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB2678C414ebC63c9CC6d1a0fC45f43E249B50fdE',\n    },\n    token: serializedTokens.btcst,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 284,\n    lpSymbol: 'LTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x71b01eBdDD797c8E9E0b003ea2f4FD207fBF46cC',\n    },\n    token: serializedTokens.ltc,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 283,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1',\n    },\n    token: serializedTokens.usdc,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 282,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x66FDB2eCCfB58cF098eaa419e5EfDe841368e489',\n    },\n    token: serializedTokens.dai,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 281,\n    lpSymbol: 'BSCX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x47C42b0A056A9C6e9C65b9Ef79020Af518e767A5',\n    },\n    token: serializedTokens.bscx,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 280,\n    lpSymbol: 'TEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1B415C3ec8095AfBF9d78882b3a6263c4ad141B5',\n    },\n    token: serializedTokens.ten,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 279,\n    lpSymbol: 'bALBT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x24EB18bA412701f278B172ef96697c4622b19da6',\n    },\n    token: serializedTokens.balbt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 278,\n    lpSymbol: 'REEF-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd63b5CecB1f40d626307B92706Df357709D05827',\n    },\n    token: serializedTokens.reef,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 277,\n    lpSymbol: 'Ditto-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8645148dE4E339964bA480AE3478653b5bc6E211',\n    },\n    token: serializedTokens.ditto,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 276,\n    lpSymbol: 'VAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x133ee93FE93320e1182923E1a640912eDE17C90C',\n    },\n    token: serializedTokens.vai,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 275,\n    lpSymbol: 'BLK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x356Dd24BfF8e23BdE0430f00ad0C290E33438bD7',\n    },\n    token: serializedTokens.blink,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 274,\n    lpSymbol: 'UNFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x44EA47F2765fd5D26b7eF0222736AD6FD6f61950',\n    },\n    token: serializedTokens.unfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 273,\n    lpSymbol: 'HARD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x73566ca86248bD12F0979793e4671e99a40299A7',\n    },\n    token: serializedTokens.hard,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 272,\n    lpSymbol: 'CTK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x460b4193Ec4C1a17372Aa5FDcd44c520ba658646',\n    },\n    token: serializedTokens.ctk,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 271,\n    lpSymbol: 'SXP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD8E2F8b6Db204c405543953Ef6359912FE3A88d6',\n    },\n    token: serializedTokens.sxp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 270,\n    lpSymbol: 'INJ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1BdCebcA3b93af70b58C41272AEa2231754B23ca',\n    },\n    token: serializedTokens.inj,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 269,\n    lpSymbol: 'FIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD9bCcbbbDFd9d67BEb5d2273102CE0762421D1e3',\n    },\n    token: serializedTokens.fil,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 268,\n    lpSymbol: 'UNI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x014608E87AF97a054C9a49f81E1473076D51d9a3',\n    },\n    token: serializedTokens.uni,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 267,\n    lpSymbol: 'YFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xCE383277847f8217392eeA98C5a8B4a7D27811b0',\n    },\n    token: serializedTokens.yfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 266,\n    lpSymbol: 'ATOM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x468b2DC8DC75990eE3E9dc0648965Ad6294E7914',\n    },\n    token: serializedTokens.atom,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 265,\n    lpSymbol: 'XRP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x03F18135c44C64ebFdCBad8297fe5bDafdBbdd86',\n    },\n    token: serializedTokens.xrp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 264,\n    lpSymbol: 'USDT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n    },\n    token: serializedTokens.usdt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 263,\n    lpSymbol: 'ALPHA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xACF47CBEaab5c8A6Ee99263cfE43995f89fB3206',\n    },\n    token: serializedTokens.alpha,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 262,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082',\n    },\n    token: serializedTokens.btcb,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 261,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\n    },\n    token: serializedTokens.eth,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 260,\n    lpSymbol: 'XVS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7EB5D86FD78f3852a3e0e064f2842d45a3dB6EA2',\n    },\n    token: serializedTokens.xvs,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 259,\n    lpSymbol: 'TWT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3DcB1787a95D2ea0Eb7d00887704EeBF0D79bb13',\n    },\n    token: serializedTokens.twt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 258,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',\n    },\n    token: serializedTokens.usdt,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 257,\n    lpSymbol: 'LINK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x824eb9faDFb377394430d2744fa7C42916DE3eCe',\n    },\n    token: serializedTokens.link,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 256,\n    lpSymbol: 'EOS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB6e34b5C65Eda51bb1BD4ea5F79d385Fb94b9504',\n    },\n    token: serializedTokens.eos,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 255,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF',\n    },\n    token: serializedTokens.dot,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 254,\n    lpSymbol: 'BAND-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x168B273278F3A8d302De5E879aA30690B7E6c28f',\n    },\n    token: serializedTokens.band,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 253,\n    lpSymbol: 'ADA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x28415ff2C35b65B9E5c7de82126b4015ab9d031F',\n    },\n    token: serializedTokens.ada,\n    quoteToken: serializedTokens.wbnb,\n  },\n  /**\n   * V2 farms, set to be removed once unstaked\n   */\n  {\n    pid: 139,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFB7E9FE9D13561AdA7131Fa746942a14F7dd4Cf6',\n    },\n    token: serializedTokens.cake,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 250,\n    lpSymbol: 'τBTC-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFD09CDbd6A7dCAd8AC47df4F139443a729264763',\n    },\n    token: serializedTokens.τbtc,\n    quoteToken: serializedTokens.btcb,\n  },\n  {\n    pid: 193,\n    lpSymbol: 'SWINGBY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA0e3F72BAFcc5d52F0052a39165FD40D3d4d34Fc',\n    },\n    token: serializedTokens.swingby,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 249,\n    lpSymbol: 'XED-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xBbE20dA99db94Fa1077F1C9A5d256761dAf89C60',\n    },\n    token: serializedTokens.xed,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 248,\n    lpSymbol: 'HAKKA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9ed1ca73AA8F1ccdc3c3a174E77014f8900411CE',\n    },\n    token: serializedTokens.hakka,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 247,\n    lpSymbol: 'CGG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB9aA8B0d67DE546aaa82091065a64B7F1C4B1a1F',\n    },\n    token: serializedTokens.cgg,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 246,\n    lpSymbol: 'SUTER-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6f41c9226fa89a552009c3AC087BA74b83772C52',\n    },\n    token: serializedTokens.suter,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 245,\n    lpSymbol: 'bROOBEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5Ac5184eA06dE24ce8ED2133f58b4Aa2CEd2dC3b',\n    },\n    token: serializedTokens.broobee,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 244,\n    lpSymbol: 'HZN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF7fcD7e7B3853bf59bCA9183476F218ED07eD3B0',\n    },\n    token: serializedTokens.hzn,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 243,\n    lpSymbol: 'ALPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xBB41898A3051A6b6D4A36a1c43e906b05799B744',\n    },\n    token: serializedTokens.alpa,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 242,\n    lpSymbol: 'PERL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB1C2e08A992a619DA570425E78828A8508654f4F',\n    },\n    token: serializedTokens.perl,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 241,\n    lpSymbol: 'TLM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x25f15Cb3D3B3753702E1d5c4E5f6F0720b197843',\n    },\n    token: serializedTokens.tlm,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 240,\n    lpSymbol: 'JGN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8fD5ca41B2B44e4713590584f97c85f9FF59F00D',\n    },\n    token: serializedTokens.jgn,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 239,\n    lpSymbol: 'EPS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x43bc6C256240e657Ad84aFb86825E21B48FEDe78',\n    },\n    token: serializedTokens.eps,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 238,\n    lpSymbol: 'ARPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD55e5A7b886aE9657b95641c6A7dc5A662EcAbF3',\n    },\n    token: serializedTokens.arpa,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 237,\n    lpSymbol: 'ITAM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3e78b0eD211a49e263fF9b3F0B410932a021E368',\n    },\n    token: serializedTokens.itam,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 236,\n    lpSymbol: 'BONDLY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2205a6424ec4D74a7588450fB71ffd0C4A3Ead65',\n    },\n    token: serializedTokens.bondly,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 235,\n    lpSymbol: 'TKO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc43EdF4a7e89160135C2553E9868446fef9C18DD',\n    },\n    token: serializedTokens.tko,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 234,\n    lpSymbol: 'APYS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7A5523f50a80790cAD011167E20bD21056A2f04A',\n    },\n    token: serializedTokens.apys,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 233,\n    lpSymbol: 'HOO-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc12dAD966505443b5aad7b0C55716c13d285B520',\n    },\n    token: serializedTokens.hoo,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 232,\n    lpSymbol: 'ODDZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3B0a7d1030bcDFf45ABB7B03C04110FcCc8095BC',\n    },\n    token: serializedTokens.oddz,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 231,\n    lpSymbol: 'EASY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4b0ec41404a7FF59BaE33C8Dc420804c58B7bF24',\n    },\n    token: serializedTokens.easy,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 230,\n    lpSymbol: 'NRV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x25dea33a42c7775F6945fae22A8fFBfAC9fB22CD',\n    },\n    token: serializedTokens.nrv,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 229,\n    lpSymbol: 'DEGO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6108aBd546AF17D8f7aFAe59EBfb4A01132A11Bb',\n    },\n    token: serializedTokens.dego,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 228,\n    lpSymbol: 'GUM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA99d1926a3c15DC4Fb83aB3Fafd63B6C3E87CF22',\n    },\n    token: serializedTokens.gum,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 227,\n    lpSymbol: 'pBTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xaccd6673FFc24cD56B080D71384327f78fD92496',\n    },\n    token: serializedTokens.pbtc,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 226,\n    lpSymbol: 'DFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe86d075051f20eb8c741007Cb8e262f4519944ee',\n    },\n    token: serializedTokens.dft,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 225,\n    lpSymbol: 'SWTH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4f6dfFc9795d35dc1D92c2a7B23Cb7d6EF190B33',\n    },\n    token: serializedTokens.swth,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 224,\n    lpSymbol: 'LIEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbe7BDE4aD1c136038Dc9f57ef94d1d16e6F9CbF7',\n    },\n    token: serializedTokens.lien,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 223,\n    lpSymbol: 'ZIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcBDf499db66Df19A66aB48F16C790FF9eE872add',\n    },\n    token: serializedTokens.zil,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 222,\n    lpSymbol: 'pCWS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe3D941e74141311436F82523817EBaa26462967d',\n    },\n    token: serializedTokens.pcws,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 221,\n    lpSymbol: 'bBADGER-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x87Ae7b5c43D4e160cDB9427a78BA87B9503ee37b',\n    },\n    token: serializedTokens.bbadger,\n    quoteToken: serializedTokens.btcb,\n  },\n  {\n    pid: 220,\n    lpSymbol: 'bDIGG-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfbfa92e037e37F946c0105902640914E3aCe6752',\n    },\n    token: serializedTokens.bdigg,\n    quoteToken: serializedTokens.btcb,\n  },\n  {\n    pid: 219,\n    lpSymbol: 'LTO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF62e92292772F24EAa6B6B8a105c9FC7B8F31EC5',\n    },\n    token: serializedTokens.lto,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 218,\n    lpSymbol: 'MIR-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x905186a70ba3Eb50090d1d0f6914F5460B4DdB40',\n    },\n    token: serializedTokens.mir,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 217,\n    lpSymbol: 'TRADE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x52fCfB6d91Bcf1F1f6d375D0f6c303688b0E8550',\n    },\n    token: serializedTokens.trade,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 216,\n    lpSymbol: 'DUSK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x69773f622cE228Ca7dEd42D8C34Eba8582e85dcA',\n    },\n    token: serializedTokens.dusk,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 215,\n    lpSymbol: 'BIFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x01956F08A55e4FF9775bc01aF6ACb09144564837',\n    },\n    token: serializedTokens.bifi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 214,\n    lpSymbol: 'TXL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8Ba7eB4056338fd7271E1b7431C8ca3827eF907c',\n    },\n    token: serializedTokens.txl,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 213,\n    lpSymbol: 'COS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xAfB2e729A24629aBdE8E55CEB0e1f899bEe0f70f',\n    },\n    token: serializedTokens.cos,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 212,\n    lpSymbol: 'BUNNY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x283FA8d459Da6e3165B2faF7FA0DD0137503DECf',\n    },\n    token: serializedTokens.bunny,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 211,\n    lpSymbol: 'ALICE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9e1BB5033d47BF8F16FC017CEC0959De7FF00833',\n    },\n    token: serializedTokens.alice,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 210,\n    lpSymbol: 'FOR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xaBB817B07663521Cf64B006EC9D0FF185b65cfE5',\n    },\n    token: serializedTokens.for,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 209,\n    lpSymbol: 'BUX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7aA4eb5c3bF33e3AD41A47e26b3Bd9b902984610',\n    },\n    token: serializedTokens.bux,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 208,\n    lpSymbol: 'NULS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xaB46737CAAFbB99999f8b91E4D3C6D4D28E10e05',\n    },\n    token: serializedTokens.nuls,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 207,\n    lpSymbol: 'BELT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x446ff2C0F5350bF2dadD0e0F1AaAA573b362CA6B',\n    },\n    token: serializedTokens.belt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 206,\n    lpSymbol: 'RAMP-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6ED589e69D1927AC45054cBb6E57877879384d6F',\n    },\n    token: serializedTokens.ramp,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 205,\n    lpSymbol: 'BFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFFA2357f1E6f48d74b1c18c363c3Fe58A032405a',\n    },\n    token: serializedTokens.bfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 204,\n    lpSymbol: 'DEXE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x534b0b0700c0cfF9785852707f07f60E7C0bc07E',\n    },\n    token: serializedTokens.dexe,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 203,\n    lpSymbol: 'BEL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2013265224E3cB6A53C67130F9Fe53Ae36CFcfdd',\n    },\n    token: serializedTokens.bel,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 202,\n    lpSymbol: 'TPT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC14c2dd21d6aEA3C2068A1F8e58d41D3c28F9288',\n    },\n    token: serializedTokens.tpt,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 201,\n    lpSymbol: 'WATCH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD5fBfFf5faB9d29f614d9bd50AF9b1356C53049C',\n    },\n    token: serializedTokens.watch,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 200,\n    lpSymbol: 'xMARK-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x601aE41C5a65b2089a6af2CcfaF984896a1f52AD',\n    },\n    token: serializedTokens.xmark,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 199,\n    lpSymbol: 'bMXX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x037d38c7DfF5732DAA5f8C05478Eb75cdf24f42B',\n    },\n    token: serializedTokens.bmxx,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 198,\n    lpSymbol: 'IOTX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8503462D0d4D3ce73e857bCC7D0Ef1125B0d66fF',\n    },\n    token: serializedTokens.iotx,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 197,\n    lpSymbol: 'BOR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE0243Ce3b50bd551168cE6964F178507d0a1acD5',\n    },\n    token: serializedTokens.bor,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 196,\n    lpSymbol: 'bOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD2FcF98EaeD2c08e9BcA854802C07b93D27913aC',\n    },\n    token: serializedTokens.bopen,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 195,\n    lpSymbol: 'SUSHI-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3BECbb09F622187B544C0892EeDeB58C004117e1',\n    },\n    token: serializedTokens.sushi,\n    quoteToken: serializedTokens.eth,\n  },\n  {\n    pid: 194,\n    lpSymbol: 'DODO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x220e34306a93002fB7947C9Fc633d6f538bd5032',\n    },\n    token: serializedTokens.dodo,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 192,\n    lpSymbol: 'BRY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC3E303647cbD43EC22989275e7ecFA8952A6BA02',\n    },\n    token: serializedTokens.bry,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 191,\n    lpSymbol: 'ZEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6d1299B158bd13F4B50e951aaBf2Aa501FD87E52',\n    },\n    token: serializedTokens.zee,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 190,\n    lpSymbol: 'SWGb-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd2A5008d555371e97F30B6dD71597b4F1eDB0f20',\n    },\n    token: serializedTokens.swgb,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 189,\n    lpSymbol: 'COMP-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6A55a9176f11c1118f01CBaf6c4033a5c1B22a81',\n    },\n    token: serializedTokens.comp,\n    quoteToken: serializedTokens.eth,\n  },\n  {\n    pid: 188,\n    lpSymbol: 'SFP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x01744B868fe98dB669EBf4e9CA557462BAA6097c',\n    },\n    token: serializedTokens.sfp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 187,\n    lpSymbol: 'LINA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb923A2Beeb0834528D20b8973A2c69088571aA9E',\n    },\n    token: serializedTokens.lina,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 186,\n    lpSymbol: 'LIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x41D69Beda3AFF2FFE48E715e2f4248Cb272cFf30',\n    },\n    token: serializedTokens.lit,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 185,\n    lpSymbol: 'HGET-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x239aD1874114B2235485e34b14c48dB73CCA3ffb',\n    },\n    token: serializedTokens.hget,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 184,\n    lpSymbol: 'BDO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF7045D7dE334a3F6c1254f98167b2af130eEA8E6',\n    },\n    token: serializedTokens.bdo,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 183,\n    lpSymbol: 'EGLD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB4670bBEce2D02c4D30786D173985A984686042C',\n    },\n    token: serializedTokens.egld,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 182,\n    lpSymbol: 'UST-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1719606031F1E0B3CCaCa11A2CF550Ef8feBEB0F',\n    },\n    token: serializedTokens.ust,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 181,\n    lpSymbol: 'mAMZN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2c065E42B464ef38480778B0624A207A09042481',\n    },\n    token: serializedTokens.mamzn,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 180,\n    lpSymbol: 'mGOOGL-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x74d8Dbac5053d31E904a821A3B4C411Bd4dd2307',\n    },\n    token: serializedTokens.mgoogl,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 179,\n    lpSymbol: 'mNFLX-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe1d76359FE4Eb7f0dAd1D719256c22890864718E',\n    },\n    token: serializedTokens.mnflx,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 178,\n    lpSymbol: 'mTSLA-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x36285DDD149949f366b5aFb3f41Cea71d35B8c9e',\n    },\n    token: serializedTokens.mtsla,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 177,\n    lpSymbol: 'wSOTE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe5909de3822d589c220Fb4FA1660A0Fd251Fa87d',\n    },\n    token: serializedTokens.wsote,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 176,\n    lpSymbol: 'FRONT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x84Df48B3e900C79539F6c523D6F528802BeAa713',\n    },\n    token: serializedTokens.front,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 175,\n    lpSymbol: 'Helmet-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD09648792d7e77523ae311Fa5A8F38E4684A5f15',\n    },\n    token: serializedTokens.helmet,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 174,\n    lpSymbol: 'BTCST-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf967845A6D30C44b555C49C50530076dF5D7fd75',\n    },\n    token: serializedTokens.btcst,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 173,\n    lpSymbol: 'LTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x286E8d71722c585c9A82876B1B2FB4dEe9fc536E',\n    },\n    token: serializedTokens.ltc,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 172,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x05FC2ac8a4FA697501087C916c87b8a5dc4f7b46',\n    },\n    token: serializedTokens.usdc,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 171,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdaFE10aA3AB6758596aDAC70f6873C49F5a9bf86',\n    },\n    token: serializedTokens.dai,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 170,\n    lpSymbol: 'BSCX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5fE5394BBc394345737b8e6e48be2804E89eC0eB',\n    },\n    token: serializedTokens.bscx,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 169,\n    lpSymbol: 'TEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x003C4d60de42eAD30739dD204BD153fE69E20Fb2',\n    },\n    token: serializedTokens.ten,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 168,\n    lpSymbol: 'bALBT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1B8ab50d894CfE793B44057F681A950E87Bd0331',\n    },\n    token: serializedTokens.balbt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 167,\n    lpSymbol: 'REEF-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x074ed2De503580887073A0F788E035C0fbe13F48',\n    },\n    token: serializedTokens.reef,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 166,\n    lpSymbol: 'Ditto-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb33D432eACe45DF62F0145228B550b214DCaA6D4',\n    },\n    token: serializedTokens.ditto,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 165,\n    lpSymbol: 'VAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9d95063661fa34B67E0Be0cc71Cf92fc6126aF37',\n    },\n    token: serializedTokens.vai,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 164,\n    lpSymbol: 'BLK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdA5a79fFe24739876a52AEF0d419aBB3b2517922',\n    },\n    token: serializedTokens.blink,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 163,\n    lpSymbol: 'UNFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x029f944CD3afa7c229122b19c706d8B7c01e062a',\n    },\n    token: serializedTokens.unfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 162,\n    lpSymbol: 'HARD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x158e337e7Dcfcd8FC512840208BB522d122bB19d',\n    },\n    token: serializedTokens.hard,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 161,\n    lpSymbol: 'CTK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcbb3fCE7134aF9ef2f3DCe0EAE96db68961b1337',\n    },\n    token: serializedTokens.ctk,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 160,\n    lpSymbol: 'SXP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6294D8518b7321dc22E32AA907A89B1DAfc1aDbB',\n    },\n    token: serializedTokens.sxp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 159,\n    lpSymbol: 'INJ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0444712EE8DFF8913B2b44CB1D2a0273b4CDaBe9',\n    },\n    token: serializedTokens.inj,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 158,\n    lpSymbol: 'FIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD027c0B352578b1Cf57f472107591CaE5fa27Eb1',\n    },\n    token: serializedTokens.fil,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 157,\n    lpSymbol: 'UNI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2937202a53C82E36bC8beCFBe79795bedF284804',\n    },\n    token: serializedTokens.uni,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 156,\n    lpSymbol: 'YFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfffad7374c894E65b498BDBD489a9a5324A59F60',\n    },\n    token: serializedTokens.yfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 155,\n    lpSymbol: 'YFII-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x237E7016Ff50D3B704A7e07571aE08628909A116',\n    },\n    token: serializedTokens.yfii,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 154,\n    lpSymbol: 'ATOM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7DD05eF533b1eBCE7815c90678D4B7344E32b8c9',\n    },\n    token: serializedTokens.atom,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 153,\n    lpSymbol: 'XRP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0F640E3ec77415Fd810D18B3ac000cD8a172E22f',\n    },\n    token: serializedTokens.xrp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 152,\n    lpSymbol: 'USDT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4160910ca32eAD83B6d4b32107974397D2579c2d',\n    },\n    token: serializedTokens.usdt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 151,\n    lpSymbol: 'ALPHA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0edAA38Bd263E83fAECbC8476822800F30eE6028',\n    },\n    token: serializedTokens.alpha,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 150,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x356b7d0d3c54F22C82B7a670C6Ba9E2381b0624c',\n    },\n    token: serializedTokens.btcb,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 149,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4D7078a6B348766E7a16cD6e6fCb3064721bc6a6',\n    },\n    token: serializedTokens.eth,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 148,\n    lpSymbol: 'XVS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x77B5dB64fD4Cf5B699855420fF2608B2EA6708B3',\n    },\n    token: serializedTokens.xvs,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 147,\n    lpSymbol: 'TWT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x34910518Faf5bfd3a4D15ccFE104B63f06ee3d85',\n    },\n    token: serializedTokens.twt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 146,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x28b81C6b155fd9152AE4A09c4eeB7E7F1C114FaC',\n    },\n    token: serializedTokens.usdt,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 145,\n    lpSymbol: 'LINK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x380941fFd7b7cbf4AEbBfa8A26aa80c2f6570909',\n    },\n    token: serializedTokens.link,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 144,\n    lpSymbol: 'EOS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x082A80b3a55BD3B320a16678784186a979882b21',\n    },\n    token: serializedTokens.eos,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 143,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3aFfc4dd05286ed6B7206Fc85219d222130e35a9',\n    },\n    token: serializedTokens.dot,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 142,\n    lpSymbol: 'BAND-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x473390697036E7611a670575eA9141583471fF47',\n    },\n    token: serializedTokens.band,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 141,\n    lpSymbol: 'ADA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xec0C5719cC100DfB6c6F371bb48d3D079ab6A6D2',\n    },\n    token: serializedTokens.ada,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 140,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9bdEdb0c876fC0Da79D945DF28942b898Af89Fc7',\n    },\n    token: serializedTokens.busd,\n    quoteToken: serializedTokens.wbnb,\n  },\n  /**\n   * All farms below here are from v1 and are to be set to 0x\n   */\n  {\n    pid: 1,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\n      56: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    },\n    token: serializedTokens.cake,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 136,\n    lpSymbol: 'τBTC-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2d4e52c48fd18ee06d3959e82ab0f773c41b9277',\n    },\n    token: serializedTokens.τbtc,\n    quoteToken: serializedTokens.btcb,\n  },\n  {\n    pid: 76,\n    lpSymbol: 'SWINGBY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4576C456AF93a37a096235e5d83f812AC9aeD027',\n    },\n    token: serializedTokens.swingby,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 135,\n    lpSymbol: 'XED-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x718d3baa161e1a38758bb0f1fe751e401f431ac4',\n    },\n    token: serializedTokens.xed,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 134,\n    lpSymbol: 'HAKKA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x56bc8de6e90a8454cb2614b33e750d960aecdf12',\n    },\n    token: serializedTokens.hakka,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 133,\n    lpSymbol: 'CGG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x484c60f6202c8043DCA0236bB3101ada7ec50AD4',\n    },\n    token: serializedTokens.cgg,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 132,\n    lpSymbol: 'SUTER-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6Ff75C20656A0E4745E7c114972D361F483AFa5f',\n    },\n    token: serializedTokens.suter,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 131,\n    lpSymbol: 'bROOBEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9e6f9f3382f9edc683203b528222c554c92382c2',\n    },\n    token: serializedTokens.broobee,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 130,\n    lpSymbol: 'HZN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xee4ca18e91012bf87fefde3dd6723a8834347a4d',\n    },\n    token: serializedTokens.hzn,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 129,\n    lpSymbol: 'ALPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x837cd42282801e340f1f17aadf3166fee99fb07c',\n    },\n    token: serializedTokens.alpa,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 128,\n    lpSymbol: 'PERL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x044e9985c14a547d478b1e3d4a4e562e69c8f936',\n    },\n    token: serializedTokens.perl,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 127,\n    lpSymbol: 'TLM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x34e821e785A93261B697eBD2797988B3AA78ca33',\n    },\n    token: serializedTokens.tlm,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 125,\n    lpSymbol: 'JGN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x890479844484D67e34B99e1BBc1468231b254c08',\n    },\n    token: serializedTokens.jgn,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 124,\n    lpSymbol: 'EPS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf9045866e7b372def1eff3712ce55fac1a98daf0',\n    },\n    token: serializedTokens.eps,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 123,\n    lpSymbol: 'ARPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfb29fca952b478ddcb8a43f57176161e498225b1',\n    },\n    token: serializedTokens.arpa,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 122,\n    lpSymbol: 'ITAM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xCdC53345192D0e31eEAD03D7E9e008Ee659FAEbE',\n    },\n    token: serializedTokens.itam,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 121,\n    lpSymbol: 'BONDLY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x67581bfb4fc13bb73c71489b504e9b5354769063',\n    },\n    token: serializedTokens.bondly,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 120,\n    lpSymbol: 'TKO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x496a8b716A3A3410B16e71E3c906968CE4488e52',\n    },\n    token: serializedTokens.tko,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 119,\n    lpSymbol: 'APYS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE5783Cc9dFb3E7e474B81B07369a008e80F1cEdb',\n    },\n    token: serializedTokens.apys,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 118,\n    lpSymbol: 'HOO-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3c9e55edbd937ae0ad8c084a1a8302110612a371',\n    },\n    token: serializedTokens.hoo,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 117,\n    lpSymbol: 'ODDZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x61376b56ff33c618b115131712a4138f98810a6a',\n    },\n    token: serializedTokens.oddz,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 116,\n    lpSymbol: 'EASY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbd1ec00b0d1cca9d5b28fbe0bb7d664238af2ffa',\n    },\n    token: serializedTokens.easy,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 115,\n    lpSymbol: 'NRV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5a805994a2e30ac710e7376ccc0211285bd4dd92',\n    },\n    token: serializedTokens.nrv,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 114,\n    lpSymbol: 'DEGO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x17F0b998B81cE75074a7CDAdAe6D63Da3cb23572',\n    },\n    token: serializedTokens.dego,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 113,\n    lpSymbol: 'GUM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x155645cDF8e4B28d5B7790b65d9f79efc222740C',\n    },\n    token: serializedTokens.gum,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 112,\n    lpSymbol: 'pBTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb5f6f7dad23132d40d778085d795bd0fd4b859cd',\n    },\n    token: serializedTokens.pbtc,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 111,\n    lpSymbol: 'DFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8FbCbD7e30b1733965a8980bf7Ae2ca1c0C456cc',\n    },\n    token: serializedTokens.dft,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 110,\n    lpSymbol: 'SWTH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8c5cFfad6cddb96Ee33DA685D0d50a37e030E115',\n    },\n    token: serializedTokens.swth,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 109,\n    lpSymbol: 'LIEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcd14855150335AAE984aa6D281E090c27035C692',\n    },\n    token: serializedTokens.lien,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 108,\n    lpSymbol: 'ZIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc746337b5f800a0e19ed4eb3bda03ff1401b8167',\n    },\n    token: serializedTokens.zil,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 107,\n    lpSymbol: 'pCWS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x889e81d25bffba437b2a5d3e0e4fc58a0e2749c5',\n    },\n    token: serializedTokens.pcws,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 106,\n    lpSymbol: 'bBADGER-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x10F461CEAC7A17F59e249954Db0784d42EfF5DB5',\n    },\n    token: serializedTokens.bbadger,\n    quoteToken: serializedTokens.btcb,\n  },\n  {\n    pid: 104,\n    lpSymbol: 'bDIGG-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE1E33459505bB3763843a426F7Fd9933418184ae',\n    },\n    token: serializedTokens.bdigg,\n    quoteToken: serializedTokens.btcb,\n  },\n  {\n    pid: 103,\n    lpSymbol: 'LTO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x85644fcd00c401e1a0a0a10d2ae6bbe04a73e4ab',\n    },\n    token: serializedTokens.lto,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 102,\n    lpSymbol: 'MIR-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf64a269F0A06dA07D23F43c1Deb217101ee6Bee7',\n    },\n    token: serializedTokens.mir,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 101,\n    lpSymbol: 'TRADE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2562f94E90dE6D9eb4fB6B3b8Eab56b15Aa4FC72',\n    },\n    token: serializedTokens.trade,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 100,\n    lpSymbol: 'DUSK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB7918560273FD56e50E9c215CC0DFE8D764C36C5',\n    },\n    token: serializedTokens.dusk,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 99,\n    lpSymbol: 'BIFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd132D2C24F29EE8ABb64a66559d1b7aa627Bd7fD',\n    },\n    token: serializedTokens.bifi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 98,\n    lpSymbol: 'TXL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD20E0BcCa8B29409bf5726CB24DD779Fe337020e',\n    },\n    token: serializedTokens.txl,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 97,\n    lpSymbol: 'COS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b1e440240B220244761C9D9A3B07fbA1995BD84',\n    },\n    token: serializedTokens.cos,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 96,\n    lpSymbol: 'BUNNY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7Bb89460599Dbf32ee3Aa50798BBcEae2A5F7f6a',\n    },\n    token: serializedTokens.bunny,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 95,\n    lpSymbol: 'ALICE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe022baa3E5E87658f789c9132B10d7425Fd3a389',\n    },\n    token: serializedTokens.alice,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 94,\n    lpSymbol: 'FOR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfEc200A5E3adDD4a7915a556DDe3F5850e644020',\n    },\n    token: serializedTokens.for,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 93,\n    lpSymbol: 'BUX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0F556f4E47513d1a19Be456a9aF778d7e1A226B9',\n    },\n    token: serializedTokens.bux,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 92,\n    lpSymbol: 'NULS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xCA01F5D89d5b1d24ca5D6Ecc856D21e8a61DAFCc',\n    },\n    token: serializedTokens.nuls,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 91,\n    lpSymbol: 'NULS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xad7e515409e5a7d516411a85acc88c5e993f570a',\n    },\n    token: serializedTokens.nuls,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 90,\n    lpSymbol: 'BELT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x83B92D283cd279fF2e057BD86a95BdEfffED6faa',\n    },\n    token: serializedTokens.belt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 89,\n    lpSymbol: 'RAMP-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbF36959939982D0D34B37Fb3f3425da9676C13a3',\n    },\n    token: serializedTokens.ramp,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 88,\n    lpSymbol: 'BFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x45a9e8d48bc560416008d122c9437927fed50e7d',\n    },\n    token: serializedTokens.bfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 87,\n    lpSymbol: 'DEXE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x69ab367bc1bea1d2c0fb4dbaec6b7197951da56c',\n    },\n    token: serializedTokens.dexe,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 86,\n    lpSymbol: 'BEL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xAB97952a2806D5c92b7046c7aB13a72A87e0097b',\n    },\n    token: serializedTokens.bel,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 85,\n    lpSymbol: 'TPT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4db28767d1527ba545ca5bbda1c96a94ed6ff242',\n    },\n    token: serializedTokens.tpt,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 84,\n    lpSymbol: 'WATCH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdc6c130299e53acd2cc2d291fa10552ca2198a6b',\n    },\n    token: serializedTokens.watch,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 83,\n    lpSymbol: 'xMARK-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x292ca56ed5b3330a19037f835af4a9c0098ea6fa',\n    },\n    token: serializedTokens.xmark,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 82,\n    lpSymbol: 'bMXX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4D5aA94Ce6BbB1BC4eb73207a5a5d4D052cFcD67',\n    },\n    token: serializedTokens.bmxx,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 81,\n    lpSymbol: 'IOTX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x36b8b28d37f93372188f2aa2507b68a5cd8b2664',\n    },\n    token: serializedTokens.iotx,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 80,\n    lpSymbol: 'BOR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x86e650350c40a5178a5d014ba37fe8556232b898',\n    },\n    token: serializedTokens.bor,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 79,\n    lpSymbol: 'bOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9d8b7e4a9d53654d82f12c83448d8f92732bc761',\n    },\n    token: serializedTokens.bopen,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 78,\n    lpSymbol: 'SUSHI-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x17580340f3daedae871a8c21d15911742ec79e0f',\n    },\n    token: serializedTokens.sushi,\n    quoteToken: serializedTokens.eth,\n  },\n  {\n    pid: 77,\n    lpSymbol: 'DODO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9e642d174b14faea31d842dc83037c42b53236e6',\n    },\n    token: serializedTokens.dodo,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 75,\n    lpSymbol: 'BRY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5E3CD27F36932Bc0314aC4e2510585798C34a2fC',\n    },\n    token: serializedTokens.bry,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 74,\n    lpSymbol: 'ZEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb5ab3996808c7e489dcdc0f1af2ab212ae0059af',\n    },\n    token: serializedTokens.zee,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 73,\n    lpSymbol: 'SWGb-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc1800c29cf91954357cd0bf3f0accaada3d0109c',\n    },\n    token: serializedTokens.swgb,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 72,\n    lpSymbol: 'COMP-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0392957571f28037607c14832d16f8b653edd472',\n    },\n    token: serializedTokens.comp,\n    quoteToken: serializedTokens.eth,\n  },\n  {\n    pid: 71,\n    lpSymbol: 'SFP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcbe2cf3bd012e9c1ade2ee4d41db3dac763e78f3',\n    },\n    token: serializedTokens.sfp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 70,\n    lpSymbol: 'BETH-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x99d865ed50d2c32c1493896810fa386c1ce81d91',\n    },\n    token: serializedTokens.beth,\n    quoteToken: serializedTokens.eth,\n  },\n  {\n    pid: 69,\n    lpSymbol: 'LINA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xeb325a8ea1c5abf40c7ceaf645596c1f943d0948',\n    },\n    token: serializedTokens.lina,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 68,\n    lpSymbol: 'LIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x60bB03D1010b99CEAdD0dd209b64bC8bd83da161',\n    },\n    token: serializedTokens.lit,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 67,\n    lpSymbol: 'HGET-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x66b9e1eac8a81f3752f7f3a5e95de460688a17ee',\n    },\n    token: serializedTokens.hget,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 66,\n    lpSymbol: 'BDO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x74690f829fec83ea424ee1f1654041b2491a7be9',\n    },\n    token: serializedTokens.bdo,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 65,\n    lpSymbol: 'EGLD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3ef4952c7a9afbe374ea02d1bf5ed5a0015b7716',\n    },\n    token: serializedTokens.egld,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 63,\n    lpSymbol: 'UST-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD1F12370b2ba1C79838337648F820a87eDF5e1e6',\n    },\n    token: serializedTokens.ust,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 62,\n    lpSymbol: 'mAMZN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc92Dc34665c8a21f98E1E38474580b61b4f3e1b9',\n    },\n    token: serializedTokens.mamzn,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 61,\n    lpSymbol: 'mGOOGL-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x852A68181f789AE6d1Da3dF101740a59A071004f',\n    },\n    token: serializedTokens.mgoogl,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 60,\n    lpSymbol: 'mNFLX-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF609ade3846981825776068a8eD7746470029D1f',\n    },\n    token: serializedTokens.mnflx,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 59,\n    lpSymbol: 'mTSLA-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD5664D2d15cdffD597515f1c0D945c6c1D3Bf85B',\n    },\n    token: serializedTokens.mtsla,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 58,\n    lpSymbol: 'wSOTE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xffb9e2d5ce4378f1a89b29bf53f80804cc078102',\n    },\n    token: serializedTokens.wsote,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 57,\n    lpSymbol: 'FRONT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x36b7d2e5c7877392fb17f9219efad56f3d794700',\n    },\n    token: serializedTokens.front,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 56,\n    lpSymbol: 'Helmet-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6411310c07d8c48730172146fd6f31fa84034a8b',\n    },\n    token: serializedTokens.helmet,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 55,\n    lpSymbol: 'BTCST-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x91589786D36fEe5B27A5539CfE638a5fc9834665',\n    },\n    token: serializedTokens.btcst,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 54,\n    lpSymbol: 'LTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbc765fd113c5bdb2ebc25f711191b56bb8690aec',\n    },\n    token: serializedTokens.ltc,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 53,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\n    },\n    token: serializedTokens.usdc,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 52,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3aB77e40340AB084c3e23Be8e5A6f7afed9D41DC',\n    },\n    token: serializedTokens.dai,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 51,\n    lpSymbol: 'BSCX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x20781bc3701c5309ac75291f5d09bdc23d7b7fa8',\n    },\n    token: serializedTokens.bscx,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 50,\n    lpSymbol: 'TEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x01ecc44ddd2d104f44d2aa1a2bd9dfbc91ae8275',\n    },\n    token: serializedTokens.ten,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 49,\n    lpSymbol: 'bALBT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbe14f3a89a4f7f279af9d99554cf12e8c29db921',\n    },\n    token: serializedTokens.balbt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 46,\n    lpSymbol: 'OG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x64373608f2e93ea97ad4d8ca2cce6b2575db2f55',\n    },\n    token: serializedTokens.og,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 47,\n    lpSymbol: 'ASR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd6b900d5308356317299dafe303e661271aa12f1',\n    },\n    token: serializedTokens.asr,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 48,\n    lpSymbol: 'ATM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd5b3ebf1a85d32c73a82b40f75e1cd929caf4029',\n    },\n    token: serializedTokens.atm,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 45,\n    lpSymbol: 'REEF-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x58B58cab6C5cF158f63A2390b817710826d116D0',\n    },\n    token: serializedTokens.reef,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 44,\n    lpSymbol: 'Ditto-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x470bc451810b312bbb1256f96b0895d95ea659b1',\n    },\n    token: serializedTokens.ditto,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 43,\n    lpSymbol: 'JUV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x51a2ffa5b7de506f9a22549e48b33f6cf0d9030e',\n    },\n    token: serializedTokens.juv,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 42,\n    lpSymbol: 'PSG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9c4f6a5050cf863e67a402e8b377973b4e3372c1',\n    },\n    token: serializedTokens.psg,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 39,\n    lpSymbol: 'UNFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbEA35584b9a88107102ABEf0BDeE2c4FaE5D8c31',\n    },\n    token: serializedTokens.unfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 41,\n    lpSymbol: 'VAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xff17ff314925dff772b71abdff2782bc913b3575',\n    },\n    token: serializedTokens.vai,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 40,\n    lpSymbol: 'BLK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC743Dc05F03D25E1aF8eC5F8228f4BD25513c8d0',\n    },\n    token: serializedTokens.blink,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 37,\n    lpSymbol: 'HARD-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x9f40e8a2fcaa267a0c374b6c661e0b372264cc3d',\n    },\n    token: serializedTokens.hard,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\n    },\n    token: serializedTokens.busd,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 3,\n    lpSymbol: 'ADA-BNB LP',\n    lpAddresses: {\n      97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n      56: '0xba51d1ab95756ca4eab8737ecd450cd8f05384cf',\n    },\n    token: serializedTokens.ada,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 4,\n    lpSymbol: 'BAND-BNB LP',\n    lpAddresses: {\n      97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n      56: '0xc639187ef82271d8f517de6feae4faf5b517533c',\n    },\n    token: serializedTokens.band,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 5,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xbcd62661a6b1ded703585d3af7d7649ef4dcdb5c',\n    },\n    token: serializedTokens.dot,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 6,\n    lpSymbol: 'EOS-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x981d2ba1b298888408d342c39c2ab92e8991691e',\n    },\n    token: serializedTokens.eos,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 7,\n    lpSymbol: 'LINK-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xaebe45e3a03b734c68e5557ae04bfc76917b4686',\n    },\n    token: serializedTokens.link,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 11,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xc15fa3E22c912A276550F3E5FE3b0Deb87B55aCd',\n    },\n    token: serializedTokens.usdt,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 12,\n    lpSymbol: 'TWT-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x610e7a287c27dfFcaC0F0a94f547Cc1B770cF483',\n    },\n    token: serializedTokens.twt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 13,\n    lpSymbol: 'XVS-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x41182c32F854dd97bA0e0B1816022e0aCB2fc0bb',\n    },\n    token: serializedTokens.xvs,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 14,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x70D8929d04b60Af4fb9B58713eBcf18765aDE422',\n    },\n    token: serializedTokens.eth,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 15,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7561EEe90e24F3b348E1087A005F78B4c8453524',\n    },\n    token: serializedTokens.btcb,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 16,\n    lpSymbol: 'ALPHA-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x4e0f3385d932F7179DeE045369286FFa6B03d887',\n    },\n    token: serializedTokens.alpha,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 17,\n    lpSymbol: 'USDT-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x20bcc3b8a0091ddac2d0bc30f68e6cbb97de59cd',\n    },\n    token: serializedTokens.usdt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 18,\n    lpSymbol: 'XRP-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xc7b4b32a3be2cb6572a1c9959401f832ce47a6d2',\n    },\n    token: serializedTokens.xrp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 19,\n    lpSymbol: 'ATOM-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x2333c77fc0b2875c11409cdcd3c75d42d402e834',\n    },\n    token: serializedTokens.atom,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 20,\n    lpSymbol: 'YFII-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x574a978c2d0d36d707a05e459466c7a1054f1210',\n    },\n    token: serializedTokens.yfii,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 21,\n    lpSymbol: 'DAI-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x56c77d59e82f33c712f919d09fceddf49660a829',\n    },\n    token: serializedTokens.dai,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 22,\n    lpSymbol: 'XTZ-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x5acac332f0f49c8badc7afd0134ad19d3db972e6',\n    },\n    token: serializedTokens.xtz,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 23,\n    lpSymbol: 'BCH-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x54edd846db17f43b6e43296134ecd96284671e81',\n    },\n    token: serializedTokens.bch,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 24,\n    lpSymbol: 'YFI-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x68Ff2ca47D27db5Ac0b5c46587645835dD51D3C1',\n    },\n    token: serializedTokens.yfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 25,\n    lpSymbol: 'UNI-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x4269e7F43A63CEA1aD7707Be565a94a9189967E9',\n    },\n    token: serializedTokens.uni,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 26,\n    lpSymbol: 'FIL-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x35fe9787f0ebf2a200bac413d3030cf62d312774',\n    },\n    token: serializedTokens.fil,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 27,\n    lpSymbol: 'INJ-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7a34bd64d18e44CfdE3ef4B81b87BAf3EB3315B6',\n    },\n    token: serializedTokens.inj,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 29,\n    lpSymbol: 'USDC-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x30479874f9320a62bce3bc0e315c920e1d73e278',\n    },\n    token: serializedTokens.usdc,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 30,\n    lpSymbol: 'SXP-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x752E713fB70E3FA1Ac08bCF34485F14A986956c4',\n    },\n    token: serializedTokens.sxp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 32,\n    lpSymbol: 'CTK-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7793870484647a7278907498ec504879d6971EAb',\n    },\n    token: serializedTokens.ctk,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 34,\n    lpSymbol: 'STAX-CAKE LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7cd05f8b960ba071fdf69c750c0e5a57c8366500',\n    },\n    token: serializedTokens.stax,\n    quoteToken: serializedTokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 35,\n    lpSymbol: 'NAR-CAKE LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x745c4fd226e169d6da959283275a8e0ecdd7f312',\n    },\n    token: serializedTokens.nar,\n    quoteToken: serializedTokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 36,\n    lpSymbol: 'NYA-CAKE LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x2730bf486d658838464a4ef077880998d944252d',\n    },\n    token: serializedTokens.nya,\n    quoteToken: serializedTokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 38,\n    lpSymbol: 'bROOBEE-CAKE LP',\n    lpAddresses: {\n      97: '',\n      56: '0x970858016C963b780E06f7DCfdEf8e809919BcE8',\n    },\n    token: serializedTokens.broobee,\n    quoteToken: serializedTokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 8,\n    lpSymbol: 'BAKE-BNB Bakery LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xc2eed0f5a0dc28cfa895084bc0a9b8b8279ae492',\n    },\n    token: serializedTokens.bake,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 9,\n    lpSymbol: 'BURGER-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xd937FB9E6e47F3805981453BFB277a49FFfE04D7',\n    },\n    token: serializedTokens.burger,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 10,\n    lpSymbol: 'BAKE-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x3Da30727ed0626b78C212e81B37B97A8eF8A25bB',\n    },\n    token: serializedTokens.bake,\n    quoteToken: serializedTokens.wbnb,\n  },\n]\n\nexport default farms\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 15 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = 40\nexport const BLOCKS_PER_YEAR = (60 / BSC_BLOCK_TIME) * 60 * 24 * 365 // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK * BLOCKS_PER_YEAR\nexport const BASE_URL = 'https://pancakeswap.finance'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 200000\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\nexport const IPFS_GATEWAY = 'https://ipfs.io/ipfs'\n// In reality its 10000 because of fast refresh, a bit less here to cover for possible long request times\nexport const PANCAKE_BUNNIES_UPDATE_FREQUENCY = 8000\n","import { useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  if (!VISIBILITY_STATE_SUPPORTED) {\n    return true\n  }\n\n  return document.visibilityState === 'visible'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible() {\n  const [isVisible, setIsVisible] = useState(isWindowVisible())\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    const handleVisibilityChange = () => {\n      setIsVisible(isWindowVisible())\n    }\n\n    document.addEventListener('visibilitychange', handleVisibilityChange)\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange)\n    }\n  }, [setIsVisible])\n\n  return isVisible\n}\n","import { useEffect, useRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = (refreshTime = 6000) => {\n  const timer = useRef(null)\n  const dispatch = useAppDispatch()\n  const isWindowVisible = useIsWindowVisible()\n\n  useEffect(() => {\n    if (isWindowVisible) {\n      timer.current = setInterval(async () => {\n        const blockNumber = await simpleRpcProvider.getBlockNumber()\n        dispatch(setBlock(blockNumber))\n      }, refreshTime)\n    } else {\n      clearInterval(timer.current)\n    }\n\n    return () => clearInterval(timer.current)\n  }, [dispatch, timer, isWindowVisible, refreshTime])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\n// @ts-ignore\nconst chainId = parseInt(window.SO_LotteryConfig.chainId, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  qrcode: true,\n  // @ts-ignore\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import tokens from './tokens'\nimport { SerializedFarmConfig } from './types'\n\nconst priceHelperLps: SerializedFarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absence of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { SerializedFarm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: SerializedFarm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: token.address,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: quoteToken.address,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: token.address,\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: quoteToken.address,\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of quoteToken in the LP that are staked in the MC\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { SerializedFarm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: SerializedFarm): Promise<SerializedFarm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { SerializedFarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: SerializedFarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      const serializedFarm = { ...farm, token: farm.token, quoteToken: farm.quoteToken }\n      return serializedFarm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { SerializedFarm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (\n  farms: SerializedFarm[],\n  preferredQuoteTokens: string[] = ['BUSD', 'WBNB'],\n): SerializedFarm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { SerializedFarm } from 'state/types'\nimport tokens from 'config/constants/tokens'\n\nconst getFarmFromTokenSymbol = (\n  farms: SerializedFarm[],\n  tokenSymbol: string,\n  preferredQuoteTokens?: string[],\n): SerializedFarm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (\n  farm: SerializedFarm,\n  quoteTokenFarm: SerializedFarm,\n  bnbPriceBusd: BigNumber,\n): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === tokens.busd.symbol) {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === tokens.wbnb.symbol) {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or WBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === tokens.wbnb.symbol) {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === tokens.busd.symbol) {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/WBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (\n  farm: SerializedFarm,\n  quoteTokenFarm: SerializedFarm,\n  bnbPriceBusd: BigNumber,\n): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'WBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'WBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms: SerializedFarm[]) => {\n  const bnbBusdFarm = farms.find((farm) => farm.pid === 252)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const tokenPriceBusd = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPriceBusd = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n\n    return {\n      ...farm,\n      tokenPriceBusd: tokenPriceBusd.toJSON(),\n      quoteTokenPriceBusd: quoteTokenPriceBusd.toJSON(),\n    }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { SerializedFarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { SerializedFarmsState, SerializedFarm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: SerializedFarmsState = {\n  data: noAccountFarmConfig,\n  loadArchivedFarmsData: false,\n  userDataLoaded: false,\n}\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<SerializedFarm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: SerializedFarm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\nexport default farmsSlice.reducer\n","import { ReactNode } from 'react'\n\nexport const types = {\n  SUCCESS: 'success',\n  DANGER: 'danger',\n  WARNING: 'warning',\n  INFO: 'info',\n}\n\nexport type Types = typeof types[keyof typeof types]\n\nexport interface Toast {\n  id: string\n  type: Types\n  title: string\n  description?: ReactNode\n}\n\nexport interface ToastContainerProps {\n  toasts: Toast[]\n  stackSpacing?: number\n  ttl?: number\n  onRemove: (id: string) => void\n}\n\nexport interface ToastProps {\n  toast: Toast\n  onRemove: ToastContainerProps['onRemove']\n  ttl: number\n  style: Partial<CSSStyleDeclaration>\n}\n","import React, { useCallback, useEffect, useRef } from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport styled from 'styled-components'\nimport { Alert, alertVariants } from '@pancakeswap/uikit'\nimport { ToastProps, types } from './types'\n\nconst alertTypeMap = {\n  [types.INFO]: alertVariants.INFO,\n  [types.SUCCESS]: alertVariants.SUCCESS,\n  [types.DANGER]: alertVariants.DANGER,\n  [types.WARNING]: alertVariants.WARNING,\n}\n\nconst StyledToast = styled.div`\n  right: 16px;\n  position: fixed;\n  max-width: calc(100% - 32px);\n  transition: all 250ms ease-in;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 400px;\n  }\n`\n\nconst Toast: React.FC<ToastProps> = ({ toast, onRemove, style, ttl, ...props }) => {\n  const timer = useRef<number>()\n  const ref = useRef(null)\n  const removeHandler = useRef(onRemove)\n  const { id, title, description, type } = toast\n\n  const handleRemove = useCallback(() => removeHandler.current(id), [id, removeHandler])\n\n  const handleMouseEnter = () => {\n    clearTimeout(timer.current)\n  }\n\n  const handleMouseLeave = () => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n  }\n\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n\n    return () => {\n      clearTimeout(timer.current)\n    }\n  }, [timer, ttl, handleRemove])\n\n  return (\n    <CSSTransition nodeRef={ref} timeout={250} style={style} {...props}>\n      <StyledToast ref={ref} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n        <Alert title={title} variant={alertTypeMap[type]} onClick={handleRemove}>\n          {description}\n        </Alert>\n      </StyledToast>\n    </CSSTransition>\n  )\n}\n\nexport default Toast\n","import React from 'react'\nimport { TransitionGroup } from 'react-transition-group'\nimport styled from 'styled-components'\nimport Toast from './Toast'\nimport { ToastContainerProps } from './types'\n\nconst ZINDEX = 1000\nconst TOP_POSITION = 80 // Initial position from the top\n\nconst StyledToastContainer = styled.div`\n  .enter,\n  .appear {\n    opacity: 0.01;\n  }\n\n  .enter.enter-active,\n  .appear.appear-active {\n    opacity: 1;\n    transition: opacity 250ms ease-in;\n  }\n\n  .exit {\n    opacity: 1;\n  }\n\n  .exit.exit-active {\n    opacity: 0.01;\n    transition: opacity 250ms ease-out;\n  }\n`\n\nconst ToastContainer: React.FC<ToastContainerProps> = ({ toasts, onRemove, ttl = 6000, stackSpacing = 24 }) => {\n  return (\n    <StyledToastContainer>\n      <TransitionGroup>\n        {toasts.map((toast, index) => {\n          const zIndex = (ZINDEX - index).toString()\n          const top = TOP_POSITION + index * stackSpacing\n\n          return (\n            <Toast key={toast.id} toast={toast} onRemove={onRemove} ttl={ttl} style={{ top: `${top}px`, zIndex }} />\n          )\n        })}\n      </TransitionGroup>\n    </StyledToastContainer>\n  )\n}\n\nexport default ToastContainer\n","/**\n * Truncate a transaction or address hash\n */\nconst truncateHash = (address: string, startLength = 4, endLength = 4) => {\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\n}\n\nexport default truncateHash\n","import React from 'react'\nimport { Link, Text } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport truncateHash from 'utils/truncateHash'\n\ninterface DescriptionWithTxProps {\n  description?: string\n  txHash?: string\n}\n\nconst DescriptionWithTx: React.FC<DescriptionWithTxProps> = ({ txHash, children }) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  return (\n    <>\n      {typeof children === 'string' ? <Text as=\"p\">{children}</Text> : children}\n      {txHash && (\n        <Link external href={getBscScanLink(txHash, 'transaction', chainId)}>\n          {t('View in explorer')}: {truncateHash(txHash, 8, 0)}\n        </Link>\n      )}\n    </>\n  )\n}\n\nexport default DescriptionWithTx\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import sample from 'lodash/sample'\n\nif (\n  process.env.NODE_ENV !== 'production' &&\n  (!process.env.REACT_APP_NODE_1 || !process.env.REACT_APP_NODE_2 || !process.env.REACT_APP_NODE_3)\n) {\n  throw Error('One base RPC URL is undefined')\n}\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  // @ts-ignore\n  return window.SO_LotteryConfig.rpc\n}\n\nexport default getNodeUrl\n","import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit'\nimport { pancakeBunniesAddress } from 'views/Nft/market/constants'\nimport isEmpty from 'lodash/isEmpty'\nimport {\n  getNftsFromCollectionApi,\n  getNftsMarketData,\n  getCollectionsApi,\n  getCollectionsSg,\n  getUserActivity,\n  combineCollectionData,\n  getCollectionSg,\n  getCollectionApi,\n  getNftsFromDifferentCollectionsApi,\n  getCompleteAccountNftData,\n  getNftsByBunnyIdSg,\n  getMarketDataForTokenIds,\n  getMetadataWithFallback,\n  getPancakeBunniesAttributesField,\n  combineApiAndSgResponseToNftToken,\n  fetchNftsFiltered,\n} from './helpers'\nimport {\n  State,\n  Collection,\n  ApiCollections,\n  TokenIdWithCollectionAddress,\n  NFTMarketInitializationState,\n  UserNftInitializationState,\n  NftToken,\n  NftLocation,\n  ApiSingleTokenData,\n  NftAttribute,\n  NftFilterLoadingState,\n  NftFilter,\n} from './types'\n\nconst initialNftFilterState: NftFilter = {\n  loadingState: NftFilterLoadingState.IDLE,\n  activeFilters: {},\n  showOnlyOnSale: true,\n  ordering: {\n    field: 'currentAskPrice',\n    direction: 'asc',\n  },\n}\n\nconst initialState: State = {\n  initializationState: NFTMarketInitializationState.UNINITIALIZED,\n  data: {\n    collections: {},\n    nfts: {},\n    filters: {},\n    loadingState: {\n      isUpdatingPancakeBunnies: false,\n      latestPancakeBunniesUpdateAt: 0,\n    },\n    users: {},\n    user: {\n      userNftsInitializationState: UserNftInitializationState.UNINITIALIZED,\n      nfts: [],\n      activity: {\n        initializationState: UserNftInitializationState.UNINITIALIZED,\n        askOrderHistory: [],\n        buyTradeHistory: [],\n        sellTradeHistory: [],\n      },\n    },\n  },\n}\n\n/**\n * Fetch all collections data by combining data from the API (static metadata) and the Subgraph (dynamic market data)\n */\nexport const fetchCollections = createAsyncThunk<Record<string, Collection>>('nft/fetchCollections', async () => {\n  const [collections, collectionsMarket] = await Promise.all([getCollectionsApi(), getCollectionsSg()])\n  return combineCollectionData(collections?.data ?? [], collectionsMarket)\n})\n\n/**\n * Fetch collection data by combining data from the API (static metadata) and the Subgraph (dynamic market data)\n */\nexport const fetchCollection = createAsyncThunk<Record<string, Collection>, string>(\n  'nft/fetchCollection',\n  async (collectionAddress) => {\n    const [collection, collectionMarket] = await Promise.all([\n      getCollectionApi(collectionAddress),\n      getCollectionSg(collectionAddress),\n    ])\n\n    return combineCollectionData([collection], [collectionMarket])\n  },\n)\n\n/**\n * Fetch all NFT data for a collections by combining data from the API (static metadata)\n * and the Subgraph (dynamic market data)\n * @param collectionAddress\n */\nexport const fetchNftsFromCollections = createAsyncThunk<\n  NftToken[],\n  { collectionAddress: string; page: number; size: number }\n>('nft/fetchNftsFromCollections', async ({ collectionAddress, page, size }) => {\n  try {\n    if (collectionAddress === pancakeBunniesAddress) {\n      // PancakeBunnies don't need to pre-fetch \"all nfts\" from the collection\n      // When user visits IndividualNFTPage required nfts will be fetched via bunny id\n      return []\n    }\n\n    const nfts = await getNftsFromCollectionApi(collectionAddress, size, page)\n\n    if (!nfts?.data) {\n      return []\n    }\n\n    const tokenIds = Object.values(nfts.data).map((nft) => nft.tokenId)\n    const nftsMarket = await getMarketDataForTokenIds(collectionAddress, tokenIds)\n\n    return tokenIds.map((id) => {\n      const apiMetadata = nfts.data[id]\n      const marketData = nftsMarket.find((nft) => nft.tokenId === id)\n\n      return {\n        tokenId: id,\n        name: apiMetadata.name,\n        description: apiMetadata.description,\n        collectionName: apiMetadata.collection.name,\n        collectionAddress,\n        image: apiMetadata.image,\n        attributes: apiMetadata.attributes,\n        marketData,\n      }\n    })\n  } catch (error) {\n    console.error(`Failed to fetch collection NFTs for ${collectionAddress}`, error)\n    return []\n  }\n})\n\nexport const filterNftsFromCollection = createAsyncThunk<\n  NftToken[],\n  { collectionAddress: string; nftFilters: Record<string, NftAttribute> }\n>('nft/filterNftsFromCollection', async ({ collectionAddress, nftFilters }) => {\n  try {\n    const attrParams = Object.values(nftFilters).reduce(\n      (accum, attr) => ({\n        ...accum,\n        [attr.traitType]: attr.value,\n      }),\n      {},\n    )\n    if (isEmpty(attrParams)) {\n      return []\n    }\n    const attrFilters = await fetchNftsFiltered(collectionAddress, attrParams)\n\n    // Fetch market data for each token returned\n    const tokenIds = Object.values(attrFilters.data).map((apiToken) => apiToken.tokenId)\n    const marketData = await getNftsMarketData({ tokenId_in: tokenIds, collection: collectionAddress.toLowerCase() })\n\n    const nftTokens: NftToken[] = Object.values(attrFilters.data).map((apiToken) => {\n      const apiTokenMarketData = marketData.find((tokenMarketData) => tokenMarketData.tokenId === apiToken.tokenId)\n\n      return {\n        tokenId: apiToken.tokenId,\n        name: apiToken.name,\n        description: apiToken.description,\n        collectionName: apiToken.collection.name,\n        collectionAddress,\n        image: apiToken.image,\n        attributes: apiToken.attributes,\n        marketData: apiTokenMarketData,\n      }\n    })\n\n    return nftTokens\n  } catch {\n    return []\n  }\n})\n\n/**\n * This action keeps data on the individual PancakeBunny page up-to-date. Operation is a twofold\n * 1. Update existing NFTs in the state in case some were sold or got price modified\n * 2. Fetch 30 more NFTs with specified bunny id\n */\nexport const fetchNewPBAndUpdateExisting = createAsyncThunk<\n  NftToken[],\n  {\n    bunnyId: string\n    existingTokensWithBunnyId: string[]\n    allExistingPBTokenIds: string[]\n    existingMetadata: ApiSingleTokenData\n    orderDirection: 'asc' | 'desc'\n  }\n>(\n  'nft/fetchNewPBAndUpdateExisting',\n  async ({ bunnyId, existingTokensWithBunnyId, allExistingPBTokenIds, existingMetadata, orderDirection }) => {\n    try {\n      // 1. Update existing NFTs in the state in case some were sold or got price modified\n      const [updatedNfts, updatedNftsMarket] = await Promise.all([\n        getNftsFromCollectionApi(pancakeBunniesAddress),\n        getMarketDataForTokenIds(pancakeBunniesAddress, allExistingPBTokenIds),\n      ])\n\n      if (!updatedNfts?.data) {\n        return []\n      }\n      const updatedTokens = updatedNftsMarket.map((marketData) => {\n        const apiMetadata = getMetadataWithFallback(updatedNfts.data, marketData.otherId)\n        const attributes = getPancakeBunniesAttributesField(marketData.otherId)\n        return combineApiAndSgResponseToNftToken(apiMetadata, marketData, attributes)\n      })\n\n      // 2. Fetch 30 more NFTs with specified bunny id\n      let newNfts = { data: { [bunnyId]: existingMetadata } }\n\n      if (!existingMetadata) {\n        newNfts = await getNftsFromCollectionApi(pancakeBunniesAddress)\n      }\n      const nftsMarket = await getNftsByBunnyIdSg(bunnyId, existingTokensWithBunnyId, orderDirection)\n\n      if (!newNfts?.data) {\n        return updatedTokens\n      }\n\n      const moreTokensWithRequestedBunnyId = nftsMarket.map((marketData) => {\n        const apiMetadata = getMetadataWithFallback(newNfts.data, marketData.otherId)\n        const attributes = getPancakeBunniesAttributesField(marketData.otherId)\n        return combineApiAndSgResponseToNftToken(apiMetadata, marketData, attributes)\n      })\n      return [...updatedTokens, ...moreTokensWithRequestedBunnyId]\n    } catch (error) {\n      console.error(`Failed to update PancakeBunnies NFTs`, error)\n      return []\n    }\n  },\n)\n\nexport const fetchUserNfts = createAsyncThunk<\n  NftToken[],\n  { account: string; profileNftWithCollectionAddress?: TokenIdWithCollectionAddress; collections: ApiCollections }\n>('nft/fetchUserNfts', async ({ account, profileNftWithCollectionAddress, collections }) => {\n  const completeNftData = await getCompleteAccountNftData(account, collections, profileNftWithCollectionAddress)\n  return completeNftData\n})\n\nexport const updateUserNft = createAsyncThunk<\n  NftToken,\n  { tokenId: string; collectionAddress: string; location?: NftLocation }\n>('nft/updateUserNft', async ({ tokenId, collectionAddress, location = NftLocation.WALLET }) => {\n  const marketDataForNft = await getNftsMarketData({\n    tokenId_in: [tokenId],\n    collection: collectionAddress.toLowerCase(),\n  })\n  const metadataForNft = await getNftsFromDifferentCollectionsApi([{ tokenId, collectionAddress }])\n  const completeNftData = { ...metadataForNft[0], location, marketData: marketDataForNft[0] }\n\n  return completeNftData\n})\n\nexport const removeUserNft = createAsyncThunk<string, { tokenId: string }>(\n  'nft/removeUserNft',\n  async ({ tokenId }) => tokenId,\n)\n\nexport const addUserNft = createAsyncThunk<\n  NftToken,\n  { tokenId: string; collectionAddress: string; nftLocation?: NftLocation }\n>('nft/addUserNft', async ({ tokenId, collectionAddress, nftLocation = NftLocation.WALLET }) => {\n  const marketDataForNft = await getNftsMarketData({\n    tokenId_in: [tokenId],\n    collection: collectionAddress.toLowerCase(),\n  })\n  const metadataForNft = await getNftsFromDifferentCollectionsApi([{ tokenId, collectionAddress }])\n\n  return {\n    ...metadataForNft[0],\n    location: nftLocation,\n    marketData: marketDataForNft[0],\n  }\n})\n\nexport const fetchUserActivity = createAsyncThunk('nft/fetchUserActivity', async (address: string) => {\n  const userActivity = await getUserActivity(address.toLocaleLowerCase())\n  return userActivity\n})\n\nexport const NftMarket = createSlice({\n  name: 'NftMarket',\n  initialState,\n  reducers: {\n    removeAllFilters: (state, action: PayloadAction<string>) => {\n      state.data.filters[action.payload] = { ...initialNftFilterState }\n      state.data.nfts[action.payload] = []\n    },\n    setOrdering: (state, action: PayloadAction<{ collection: string; field: string; direction: 'asc' | 'desc' }>) => {\n      if (state.data.filters[action.payload.collection]) {\n        state.data.filters[action.payload.collection].ordering = {\n          field: action.payload.field,\n          direction: action.payload.direction,\n        }\n      } else {\n        state.data.filters[action.payload.collection] = {\n          ...initialNftFilterState,\n          ordering: {\n            field: action.payload.field,\n            direction: action.payload.direction,\n          },\n        }\n      }\n    },\n    setShowOnlyOnSale: (state, action: PayloadAction<{ collection: string; showOnlyOnSale: boolean }>) => {\n      if (state.data.filters[action.payload.collection]) {\n        state.data.filters[action.payload.collection].showOnlyOnSale = action.payload.showOnlyOnSale\n      } else {\n        state.data.filters[action.payload.collection] = {\n          ...initialNftFilterState,\n          showOnlyOnSale: action.payload.showOnlyOnSale,\n        }\n      }\n    },\n    resetUserNftState: (state) => {\n      state.data.user = { ...initialState.data.user }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(filterNftsFromCollection.pending, (state, action) => {\n      const { collectionAddress } = action.meta.arg\n      if (state.data.filters[collectionAddress]) {\n        state.data.filters[collectionAddress].loadingState = NftFilterLoadingState.LOADING\n      } else {\n        state.data.filters[collectionAddress] = {\n          ...initialNftFilterState,\n          loadingState: NftFilterLoadingState.LOADING,\n        }\n      }\n    })\n    builder.addCase(filterNftsFromCollection.fulfilled, (state, action) => {\n      const { collectionAddress, nftFilters } = action.meta.arg\n\n      state.data.filters[collectionAddress] = {\n        ...state.data.filters[collectionAddress],\n        loadingState: NftFilterLoadingState.IDLE,\n        activeFilters: nftFilters,\n      }\n      state.data.nfts[collectionAddress] = action.payload\n    })\n\n    builder.addCase(fetchCollection.fulfilled, (state, action) => {\n      state.data.collections = { ...state.data.collections, ...action.payload }\n    })\n    builder.addCase(fetchCollections.fulfilled, (state, action) => {\n      state.data.collections = action.payload\n      state.initializationState = NFTMarketInitializationState.INITIALIZED\n    })\n    builder.addCase(fetchNftsFromCollections.pending, (state, action) => {\n      const { collectionAddress } = action.meta.arg\n      if (state.data.filters[collectionAddress]) {\n        state.data.filters[collectionAddress].loadingState = NftFilterLoadingState.LOADING\n      } else {\n        state.data.filters[collectionAddress] = {\n          ...initialNftFilterState,\n          loadingState: NftFilterLoadingState.LOADING,\n        }\n      }\n    })\n    builder.addCase(fetchNftsFromCollections.fulfilled, (state, action) => {\n      const { collectionAddress } = action.meta.arg\n      const existingNfts: NftToken[] = state.data.nfts[collectionAddress] ?? []\n      const existingNftsWithoutNewOnes = existingNfts.filter(\n        (nftToken) => !action.payload.find((newToken) => newToken.tokenId === nftToken.tokenId),\n      )\n\n      state.data.filters[collectionAddress] = {\n        ...state.data.filters[collectionAddress],\n        loadingState: NftFilterLoadingState.IDLE,\n        activeFilters: {},\n      }\n      state.data.nfts[collectionAddress] = [...existingNftsWithoutNewOnes, ...action.payload]\n    })\n    builder.addCase(fetchNewPBAndUpdateExisting.pending, (state) => {\n      state.data.loadingState.isUpdatingPancakeBunnies = true\n    })\n    builder.addCase(fetchNewPBAndUpdateExisting.fulfilled, (state, action) => {\n      if (action.payload.length > 0) {\n        state.data.nfts[pancakeBunniesAddress] = action.payload\n      }\n      state.data.loadingState.isUpdatingPancakeBunnies = false\n      state.data.loadingState.latestPancakeBunniesUpdateAt = Date.now()\n    })\n    builder.addCase(fetchNewPBAndUpdateExisting.rejected, (state) => {\n      state.data.loadingState.isUpdatingPancakeBunnies = false\n      state.data.loadingState.latestPancakeBunniesUpdateAt = Date.now()\n    })\n    builder.addCase(fetchUserNfts.rejected, (state) => {\n      state.data.user.userNftsInitializationState = UserNftInitializationState.ERROR\n    })\n    builder.addCase(fetchUserNfts.pending, (state) => {\n      state.data.user.userNftsInitializationState = UserNftInitializationState.INITIALIZING\n    })\n    builder.addCase(fetchUserNfts.fulfilled, (state, action) => {\n      state.data.user.nfts = action.payload\n      state.data.user.userNftsInitializationState = UserNftInitializationState.INITIALIZED\n    })\n    builder.addCase(updateUserNft.fulfilled, (state, action) => {\n      const userNftsState: NftToken[] = state.data.user.nfts\n      const nftToUpdate = userNftsState.find((nft) => nft.tokenId === action.payload.tokenId)\n      const indexInState = userNftsState.indexOf(nftToUpdate)\n      state.data.user.nfts[indexInState] = action.payload\n    })\n    builder.addCase(removeUserNft.fulfilled, (state, action) => {\n      const copyOfState: NftToken[] = [...state.data.user.nfts]\n      const nftToRemove = copyOfState.find((nft) => nft.tokenId === action.payload)\n      const indexInState = copyOfState.indexOf(nftToRemove)\n      copyOfState.splice(indexInState, 1)\n      state.data.user.nfts = copyOfState\n    })\n    builder.addCase(addUserNft.fulfilled, (state, action) => {\n      state.data.user.nfts = [...state.data.user.nfts, action.payload]\n    })\n    builder.addCase(fetchUserActivity.fulfilled, (state, action) => {\n      state.data.user.activity = { ...action.payload, initializationState: UserNftInitializationState.INITIALIZED }\n    })\n    builder.addCase(fetchUserActivity.rejected, (state) => {\n      state.data.user.activity.initializationState = UserNftInitializationState.ERROR\n    })\n    builder.addCase(fetchUserActivity.pending, (state) => {\n      state.data.user.activity.initializationState = UserNftInitializationState.INITIALIZING\n    })\n  },\n})\n\n// Actions\nexport const { removeAllFilters, setOrdering, setShowOnlyOnSale, resetUserNftState } = NftMarket.actions\n\nexport default NftMarket.reducer\n","import React, { createContext, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from 'components/Toast'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from 'components/Toast'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import Cookies from 'js-cookie'\nimport { Profile } from 'state/types'\nimport { GetUserProfileResponse } from 'utils/types'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { getTeam } from 'state/teams/helpers'\nimport { NftToken } from 'state/nftMarket/types'\nimport { getNftApi } from 'state/nftMarket/helpers'\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst transformProfileResponse = (profileResponse: GetUserProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: collectionAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: userId.toNumber(),\n    points: numberPoints.toNumber(),\n    teamId: teamId.toNumber(),\n    tokenId: tokenId.toNumber(),\n    collectionAddress,\n    isActive,\n  }\n}\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport const getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address.toLowerCase()}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\n/**\n * Intended to be used for getting a profile avatar\n */\nexport const getProfileAvatar = async (address: string) => {\n  try {\n    const hasRegistered = await profileContract.hasRegistered(address)\n\n    if (!hasRegistered) {\n      return null\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { tokenId, collectionAddress, isActive } = transformProfileResponse(profileResponse)\n\n    let nft = null\n    if (isActive) {\n      const apiRes = await getNftApi(collectionAddress, tokenId.toString())\n\n      nft = {\n        tokenId: apiRes.tokenId,\n        name: apiRes.name,\n        collectionName: apiRes.collection.name,\n        collectionAddress,\n        description: apiRes.description,\n        attributes: apiRes.attributes,\n        createdAt: apiRes.createdAt,\n        updatedAt: apiRes.updatedAt,\n        image: {\n          original: apiRes.image?.original,\n          thumbnail: apiRes.image?.thumbnail,\n        },\n      }\n    }\n\n    return { nft, hasRegistered }\n  } catch {\n    return { nft: null, hasRegistered: false }\n  }\n}\n\nexport const getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    return { hasRegistered: false, profile: null }\n    const hasRegistered = await profileContract.hasRegistered(address)\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, collectionAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n    let nftToken: NftToken\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    if (isActive) {\n      const apiRes = await getNftApi(collectionAddress, tokenId.toString())\n\n      nftToken = {\n        tokenId: apiRes.tokenId,\n        name: apiRes.name,\n        collectionName: apiRes.collection.name,\n        collectionAddress,\n        description: apiRes.description,\n        attributes: apiRes.attributes,\n        createdAt: apiRes.createdAt,\n        updatedAt: apiRes.updatedAt,\n        image: {\n          original: apiRes.image?.original,\n          thumbnail: apiRes.image?.thumbnail,\n        },\n      }\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `${nftToken.image.thumbnail}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      collectionAddress,\n      isActive,\n      nft: nftToken,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (e) {\n    console.error(e)\n    return null\n  }\n}\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n  getBunnySpecialLotteryContract,\n  getAnniversaryAchievementContract,\n  getNftMarketContract,\n  getNftSaleContract,\n  getPancakeSquadContract,\n  getErc721CollectionContract,\n} from 'utils/contractHelpers'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport multiCallAbi from '../config/abi/Multicall.json'\nimport { getContract, getProviderOrSigner } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialLotteryContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialLotteryContract(library.getSigner()), [library])\n}\n\nexport const useAnniversaryAchievementContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getAnniversaryAchievementContract(library.getSigner()), [library])\n}\n\nexport const useNftSaleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getNftSaleContract(library.getSigner()), [library])\n}\n\nexport const usePancakeSquadContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeSquadContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnected or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\nexport const useNftMarketContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getNftMarketContract(library.getSigner()), [library])\n}\n\nexport const useErc721CollectionContract = (collectionAddress: string) => {\n  const { library, account } = useActiveWeb3React()\n  return useMemo(() => {\n    return getErc721CollectionContract(getProviderOrSigner(library, account), collectionAddress)\n  }, [account, library, collectionAddress])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  return useContract(getMulticallAddress(), multiCallAbi, false)\n}\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { IPFS_GATEWAY } from '../index'\nimport { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png`,\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png`,\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png`,\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { Token, ChainId } from '@pancakeswap/sdk'\nimport tokens from './tokens'\nimport farms from './farms'\nimport { Ifo } from './types'\n\nconst cakeBnbLpToken = new Token(ChainId.MAINNET, farms[1].lpAddresses[ChainId.MAINNET], 18, farms[1].lpSymbol)\n\nconst ifos: Ifo[] = [\n  {\n    id: 'porto',\n    address: '0xFDFf29dD0b4DD49Bf5E991A30b8593eaA34B4580',\n    isActive: true,\n    name: 'FC Porto Fan Token (PORTO)',\n    poolBasic: {\n      saleAmount: '250,000 PORTO',\n      raiseAmount: '$500,000',\n      cakeToBurn: '$0',\n      distributionRatio: 0.5,\n    },\n    poolUnlimited: {\n      saleAmount: '250,000 PORTO',\n      raiseAmount: '$500,000',\n      cakeToBurn: '$0',\n      distributionRatio: 0.5,\n    },\n    currency: tokens.cake,\n    token: tokens.porto,\n    releaseBlockNumber: 12687500,\n    campaignId: '511140000',\n    articleUrl: 'https://pancakeswap.finance/voting/proposal/QmaakXYpydAwCgTuSPe3R2ZNraRtkCbK6iBRqBCCdzqKEG',\n    tokenOfferingPrice: 2,\n    version: 2,\n  },\n  {\n    id: 'dar',\n    address: '0xb6eF1f36220397c434A6B15dc5EA616CFFDF58CE',\n    isActive: false,\n    name: 'Mines of Dalarnia (DAR)',\n    poolBasic: {\n      saleAmount: '6,000,000 DAR',\n      raiseAmount: '$450,000',\n      cakeToBurn: '$0',\n      distributionRatio: 0.5,\n    },\n    poolUnlimited: {\n      saleAmount: '6,000,000 DAR',\n      raiseAmount: '$450,000',\n      cakeToBurn: '$0',\n      distributionRatio: 0.5,\n    },\n    currency: tokens.cake,\n    token: tokens.dar,\n    releaseBlockNumber: 12335455,\n    campaignId: '511130000',\n    articleUrl: 'https://pancakeswap.finance/voting/proposal/QmeJenHcbY45eQxLRebzvpNk5qSCrj2wM1t4EAMHotFoJL',\n    tokenOfferingPrice: 0.075,\n    version: 2,\n  },\n  {\n    id: 'dkt',\n    address: '0x89ab9852155A794e371095d863aEAa2DF198067C',\n    isActive: false,\n    name: 'Duelist King (DKT)',\n    poolBasic: {\n      saleAmount: '75,000 DKT',\n      raiseAmount: '$131,250',\n      cakeToBurn: '$65,625',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '175,000 DKT',\n      raiseAmount: '$306,250',\n      cakeToBurn: '$153,125',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.dkt,\n    releaseBlockNumber: 12130750,\n    campaignId: '511120000',\n    articleUrl: 'https://pancakeswap.finance/voting/proposal/QmTRWdW9a65fAkyJy1wrAJRU548fNMAZhRUDrSxzMDLmwk',\n    tokenOfferingPrice: 1.75,\n    version: 2,\n  },\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: false,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nexport const MAX_USER_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype UserLotteriesWhere = { lottery_in?: string[] }\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const nodeRoundsWithGraphData = userNodeData.map((userNodeRound) => {\n    const userGraphRound = userGraphData.find(\n      (graphResponseRound) => graphResponseRound.lotteryId === userNodeRound.roundId,\n    )\n    const nodeRoundData = lotteryNodeData.find((nodeRound) => nodeRound.lotteryId === userNodeRound.roundId)\n    return {\n      endTime: nodeRoundData.endTime,\n      status: nodeRoundData.status,\n      lotteryId: nodeRoundData.lotteryId.toString(),\n      claimed: hasRoundBeenClaimed(userNodeRound.userTickets),\n      totalTickets: userGraphRound?.totalTickets || userNodeRound.userTickets.length.toString(),\n      tickets: userNodeRound.userTickets,\n    }\n  })\n\n  // Return the rounds with combined data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = userGraphData\n    .map((graphRound) => graphRound?.lotteryId)\n    .indexOf(lastCombinedDataRound?.lotteryId)\n  const remainingSubgraphRounds = userGraphData ? userGraphData.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteryUser = async (\n  account: string,\n  first = MAX_USER_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: UserLotteriesWhere = {},\n): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!, $first: Int!, $skip: Int!, $where: Round_filter) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase(), first, skip, where },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status.toLowerCase(),\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n  {\n    id: '515010001',\n    type: 'participation',\n    title: 'Lottie',\n    description: 'Joined a round in the early days of Lottery V2',\n    badge: 'lottie.svg',\n  },\n  {\n    id: '515020001',\n    type: 'participation',\n    title: 'Lucky',\n    description: 'Won a round in the early days of Lottery V2',\n    badge: 'lucky.svg',\n  },\n  {\n    id: '515030001',\n    type: 'participation',\n    title: 'Baller',\n    description: 'Top 100 ticket buyer in the early days of Lottery V2',\n    badge: 'baller.svg',\n  },\n  {\n    id: '516010001',\n    type: 'participation',\n    title: '1 Year',\n    description: 'Joined PancakeSwap during the first year of our journey!',\n    badge: '1-year.svg',\n  },\n  {\n    id: '511120000',\n    type: 'ifo',\n    title: 'Duelist King',\n    badge: 'ifo-dkt.svg',\n  },\n  {\n    id: '511130000',\n    type: 'ifo',\n    title: 'Mines of Dalarnia',\n    badge: 'ifo-dar.svg',\n  },\n  {\n    id: '511140000',\n    type: 'ifo',\n    title: 'FC Porto Fan Token',\n    badge: 'ifo-porto.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { ethers } from 'ethers'\nimport { Campaign, TranslatableText } from 'config/constants/types'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: ethers.BigNumber\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatusCalls = ifoCampaigns.map(({ address }) => {\n    return {\n      address: getPointCenterIfoAddress(),\n      name: 'checkClaimStatus',\n      params: [account, address],\n    }\n  })\n\n  const claimStatuses = (await multicallv2(pointCenterIfoABI, claimStatusCalls, { requireSuccess: false })) as\n    | [boolean][]\n    | null\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await multicallv2(\n    pointCenterIfoABI,\n    claimStatuses.reduce((accum, claimStatusArr, index) => {\n      if (claimStatusArr === null) {\n        return accum\n      }\n\n      const [claimStatus] = claimStatusArr\n\n      if (claimStatus === true) {\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [ifoCampaigns[index].address] }]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    const claimableCampaignId = claimableIfoDataItem.campaignId.toString()\n    if (!campaignMap.has(claimableCampaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableCampaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableCampaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableCampaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: claimableIfoDataItem.numberPoints.toNumber(),\n      },\n    ]\n  }, [])\n}\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    if (!campaignMap.has(userPoint.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport {\n  CampaignType,\n  SerializedFarmConfig,\n  LotteryStatus,\n  LotteryTicket,\n  DeserializedPoolConfig,\n  SerializedPoolConfig,\n  Team,\n  TranslatableText,\n  DeserializedFarmConfig,\n} from 'config/constants/types'\nimport { NftToken, State as NftMarketState } from './nftMarket/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type SerializedBigNumber = string\n\ninterface SerializedFarmUserData {\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport interface DeserializedFarmUserData {\n  allowance: BigNumber\n  tokenBalance: BigNumber\n  stakedBalance: BigNumber\n  earnings: BigNumber\n}\n\nexport interface SerializedFarm extends SerializedFarmConfig {\n  tokenPriceBusd?: string\n  quoteTokenPriceBusd?: string\n  tokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: SerializedFarmUserData\n}\n\nexport interface DeserializedFarm extends DeserializedFarmConfig {\n  tokenPriceBusd?: string\n  quoteTokenPriceBusd?: string\n  tokenAmountTotal?: BigNumber\n  lpTotalInQuoteToken?: BigNumber\n  lpTotalSupply?: BigNumber\n  tokenPriceVsQuote?: BigNumber\n  poolWeight?: BigNumber\n  userData?: DeserializedFarmUserData\n}\n\ninterface CorePoolProps {\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n}\n\nexport interface DeserializedPool extends DeserializedPoolConfig, CorePoolProps {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface SerializedPool extends SerializedPoolConfig, CorePoolProps {\n  totalStaked?: SerializedBigNumber\n  stakingLimit?: SerializedBigNumber\n  userData?: {\n    allowance: SerializedBigNumber\n    stakingTokenBalance: SerializedBigNumber\n    stakedBalance: SerializedBigNumber\n    pendingReward: SerializedBigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  collectionAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: NftToken\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface SerializedFarmsState {\n  data: SerializedFarm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface DeserializedFarmsState {\n  data: DeserializedFarm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: SerializedPool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport enum ProfileAvatarFetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  FETCHING = 'fetching',\n  FETCHED = 'fetched',\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n  profileAvatars: {\n    [key: string]: {\n      username: string\n      nft: NftToken\n      hasRegistered: boolean\n      usernameFetchStatus: ProfileAvatarFetchStatus\n      avatarFetchStatus: ProfileAvatarFetchStatus\n    }\n  }\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport enum AchievementFetchStatus {\n  ERROR = 'error',\n  NOT_FETCHED = 'not-fetched',\n  FETCHING = 'fetching',\n  FETCHED = 'fetched',\n}\n\nexport interface AchievementState {\n  achievements: Achievement[]\n  achievementFetchStatus: AchievementFetchStatus\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  position: BetPosition\n  failed: boolean\n  startAt: number\n  startBlock: number\n  startHash: string\n  lockAt: number\n  lockBlock: number\n  lockHash: string\n  lockPrice: number\n  lockRoundId: string\n  closeAt: number\n  closeBlock: number\n  closeHash: string\n  closePrice: number\n  closeRoundId: string\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bullAmount: number\n  bearBets: number\n  bearAmount: number\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedAt: number\n  claimedBlock: number\n  claimedHash: string\n  claimedBNB: number\n  claimedNetBNB: number\n  createdAt: number\n  updatedAt: number\n  user?: PredictionUser\n  round?: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  createdAt: number\n  updatedAt: number\n  block: number\n  totalBets: number\n  totalBetsBull: number\n  totalBetsBear: number\n  totalBNB: number\n  totalBNBBull: number\n  totalBNBBear: number\n  totalBetsClaimed: number\n  totalBNBClaimed: number\n  winRate: number\n  averageBNB: number\n  netBNB: number\n  bets?: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n  lockOracleId: string\n  closeOracleId: string\n}\n\nexport interface NodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: ethers.BigNumber | null\n  closePrice: ethers.BigNumber | null\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n  closeOracleId: string\n  lockOracleId: string\n}\n\nexport enum LeaderboardLoadingState {\n  INITIAL,\n  LOADING,\n  IDLE,\n}\n\nexport type LeaderboardFilterTimePeriod = '1d' | '7d' | '1m' | 'all'\n\nexport interface LeaderboardFilter {\n  address?: string\n  orderBy?: string\n  timePeriod?: LeaderboardFilterTimePeriod\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  intervalSeconds: number\n  minBetAmount: string\n  bufferSeconds: number\n  lastOraclePrice: string\n  history: Bet[]\n  totalHistory: number\n  currentHistoryPage: number\n  hasHistoryLoaded: boolean\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n  leaderboard: {\n    selectedAddress: string\n    loadingState: LeaderboardLoadingState\n    filters: LeaderboardFilter\n    skip: number\n    hasMoreResults: boolean\n    addressResults: {\n      [key: string]: PredictionUser\n    }\n    results: PredictionUser[]\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: SerializedFarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  voting: VotingState\n  lottery: LotteryState\n  nftMarket: NftMarketState\n}\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { serializeToken } from 'state/user/hooks/helpers'\nimport { SerializedToken } from './types'\n\nconst { MAINNET, TESTNET } = ChainId\n\ninterface TokenList {\n  [symbol: string]: Token\n}\n\ninterface SerializedTokenList {\n  [symbol: string]: SerializedToken\n}\n\nexport const mainnetTokens = {\n  wbnb: new Token(\n    MAINNET,\n    '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    18,\n    'WBNB',\n    'Wrapped BNB',\n    'https://www.binance.com/',\n  ),\n  // bnb here points to the wbnb contract. Wherever the currency BNB is required, conditional checks for the symbol 'BNB' can be used\n  bnb: new Token(MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'BNB', 'BNB', 'https://www.binance.com/'),\n  cake: new Token(\n    MAINNET,\n    '0x703f112bda4cc6cb9c5fb4b2e6140f6d8374f10b',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n    'https://pancakeswap.finance/',\n  ),\n  tlos: new Token(MAINNET, '0xb6C53431608E626AC81a9776ac3e999c5556717c', 18, 'TLOS', 'Telos', 'https://www.telos.net/'),\n  beta: new Token(\n    MAINNET,\n    '0xBe1a001FE942f96Eea22bA08783140B9Dcc09D28',\n    18,\n    'BETA',\n    'Beta Finance',\n    'https://betafinance.org',\n  ),\n  nft: new Token(MAINNET, '0x1fC9004eC7E5722891f5f38baE7678efCB11d34D', 6, 'NFT', 'APENFT', 'https://apenft.org'),\n  stephero: new Token(\n    MAINNET,\n    '0xE8176d414560cFE1Bf82Fd73B986823B89E4F545',\n    18,\n    'HERO',\n    'StepHero',\n    'https://stephero.io/',\n  ),\n  pros: new Token(MAINNET, '0xEd8c8Aa8299C10f067496BB66f8cC7Fb338A3405', 18, 'PROS', 'Prosper', 'https://prosper.so/'),\n  qbt: new Token(MAINNET, '0x17B7163cf1Dbd286E262ddc68b553D899B93f526', 18, 'QBT', 'Qubit Token', 'https://qbt.fi/'),\n  cvp: new Token(\n    MAINNET,\n    '0x5Ec3AdBDae549Dce842e24480Eb2434769e22B2E',\n    18,\n    'CVP',\n    'Concentrated Voting Power Token',\n    'https://powerpool.finance/',\n  ),\n  bscdefi: new Token(\n    MAINNET,\n    '0x40E46dE174dfB776BB89E04dF1C47d8a66855EB3',\n    18,\n    'BSCDEFI',\n    'BSC Defi blue chips token',\n    'https://powerpool.finance/',\n  ),\n  busd: new Token(\n    MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n    'https://www.paxos.com/busd/',\n  ),\n  dai: new Token(\n    MAINNET,\n    '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n    18,\n    'DAI',\n    'Dai Stablecoin',\n    'https://www.makerdao.com/',\n  ),\n  usdt: new Token(\n    MAINNET,\n    '0x55d398326f99059fF775485246999027B3197955',\n    18,\n    'USDT',\n    'Tether USD',\n    'https://tether.to/',\n  ),\n  btcb: new Token(\n    MAINNET,\n    '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n    18,\n    'BTCB',\n    'Binance BTC',\n    'https://bitcoin.org/',\n  ),\n  ust: new Token(\n    MAINNET,\n    '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n    18,\n    'UST',\n    'Wrapped UST Token',\n    'https://mirror.finance/',\n  ),\n  eth: new Token(\n    MAINNET,\n    '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n    18,\n    'ETH',\n    'Binance-Peg Ethereum Token',\n    'https://ethereum.org/en/',\n  ),\n  usdc: new Token(\n    MAINNET,\n    '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n    18,\n    'USDC',\n    'Binance-Peg USD Coin',\n    'https://www.centre.io/usdc',\n  ),\n  kalm: new Token(\n    MAINNET,\n    '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n    18,\n    'KALM',\n    'Kalmar Token',\n    'https://kalmar.io/',\n  ),\n  dkt: new Token(\n    MAINNET,\n    '0x7Ceb519718A80Dd78a8545AD8e7f401dE4f2faA7',\n    18,\n    'DKT',\n    'Duelist King',\n    'https://duelistking.com/',\n  ),\n  hotcross: new Token(\n    MAINNET,\n    '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n    18,\n    'HOTCROSS',\n    'Hotcross Token',\n    'https://www.hotcross.com/',\n  ),\n  belt: new Token(\n    MAINNET,\n    '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n    18,\n    'BELT',\n    'Belt Token',\n    'https://beta.belt.fi/',\n  ),\n  watch: new Token(\n    MAINNET,\n    '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n    18,\n    'WATCH',\n    'Yieldwatch Token',\n    'https://yieldwatch.net/',\n  ),\n  bry: new Token(\n    MAINNET,\n    '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n    18,\n    'BRY',\n    'Berry Token',\n    'https://berrydata.co/',\n  ),\n  wsote: new Token(\n    MAINNET,\n    '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n    18,\n    'wSOTE',\n    'Soteria Token',\n    'https://soteria.finance/',\n  ),\n  helmet: new Token(\n    MAINNET,\n    '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n    18,\n    'Helmet',\n    'Helmet Token',\n    'https://www.helmet.insure/',\n  ),\n  ten: new Token(\n    MAINNET,\n    '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n    18,\n    'TEN',\n    'Tenet Token',\n    'https://www.tenet.farm/',\n  ),\n  ditto: new Token(\n    MAINNET,\n    '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n    9,\n    'DITTO',\n    'Ditto Token',\n    'https://ditto.money/',\n  ),\n  blink: new Token(\n    MAINNET,\n    '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n    6,\n    'BLINK',\n    'Blink Token',\n    'https://blink.wink.org',\n  ),\n  syrup: new Token(\n    MAINNET,\n    '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n    18,\n    'SYRUP',\n    'SyrupBar Token',\n    'https://pancakeswap.finance/',\n  ),\n  pha: new Token(\n    MAINNET,\n    '0x0112e557d400474717056C4e6D40eDD846F38351',\n    18,\n    'PHA',\n    'Phala Token',\n    'https://phala.network',\n  ),\n  babycake: new Token(\n    MAINNET,\n    '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n    18,\n    'BABYCAKE',\n    'Baby Cake Token',\n    'https://babycake.app/',\n  ),\n  bmon: new Token(\n    MAINNET,\n    '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n    18,\n    'BMON',\n    'Binamon Token',\n    'https://binamon.org/',\n  ),\n  hero: new Token(\n    MAINNET,\n    '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n    18,\n    'HERO',\n    'Metahero Token',\n    'https://metahero.io/',\n  ),\n  wsg: new Token(\n    MAINNET,\n    '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n    18,\n    'WSG',\n    'Wall Street Games Token',\n    'https://wsg.gg/',\n  ),\n  mcrn: new Token(\n    MAINNET,\n    '0xacb2d47827C9813AE26De80965845D80935afd0B',\n    18,\n    'MCRN',\n    'Macaronswap Token',\n    'https://www.macaronswap.finance/',\n  ),\n  revv: new Token(\n    MAINNET,\n    '0x833F307aC507D47309fD8CDD1F835BeF8D702a93',\n    18,\n    'REVV',\n    'REVV Token',\n    'https://revvmotorsport.com/',\n  ),\n  skill: new Token(\n    MAINNET,\n    '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n    18,\n    'SKILL',\n    'Cryptoblades Token',\n    'https://www.cryptoblades.io/',\n  ),\n  if: new Token(\n    MAINNET,\n    '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n    18,\n    'IF',\n    'Impossible Finance Token',\n    'https://impossible.finance/',\n  ),\n  sps: new Token(\n    MAINNET,\n    '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n    18,\n    'SPS',\n    'Splinterlands Token',\n    'https://splinterlands.com',\n  ),\n  chess: new Token(\n    MAINNET,\n    '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n    18,\n    'CHESS',\n    'Chess Token',\n    'https://tranchess.com/',\n  ),\n  titan: new Token(\n    MAINNET,\n    '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n    18,\n    'TITAN',\n    'Titanswap Token',\n    'https://titanswap.org',\n  ),\n  harmony: new Token(\n    MAINNET,\n    '0x03fF0ff224f904be3118461335064bB48Df47938',\n    18,\n    'ONE',\n    'Harmony ONE Token',\n    'https://www.harmony.one/',\n  ),\n  mask: new Token(MAINNET, '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3', 18, 'MASK', 'Mask Token', 'https://mask.io/'),\n  dvi: new Token(\n    MAINNET,\n    '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n    18,\n    'DVI',\n    'Dvision Network Token',\n    'https://dvision.network/',\n  ),\n  adx: new Token(\n    MAINNET,\n    '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n    18,\n    'ADX',\n    'Adex Network Token',\n    'https://www.adex.network',\n  ),\n  bscpad: new Token(\n    MAINNET,\n    '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n    18,\n    'BSCPAD',\n    'Bscpad Token',\n    'https://bscpad.com/',\n  ),\n  rabbit: new Token(\n    MAINNET,\n    '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n    18,\n    'RABBIT',\n    'Rabbit Finance Token',\n    'https://rabbitfinance.io/earn',\n  ),\n  form: new Token(\n    MAINNET,\n    '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n    18,\n    'FORM',\n    'Formation Token',\n    'https://formation.fi/',\n  ),\n  txl: new Token(MAINNET, '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5', 18, 'TXL', 'Tixl Token', 'https://tixl.org/'),\n  orbs: new Token(\n    MAINNET,\n    '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n    18,\n    'ORBS',\n    'Orbs Token',\n    'https://www.orbs.com/',\n  ),\n  cos: new Token(\n    MAINNET,\n    '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n    18,\n    'COS',\n    'Contentos Token',\n    'https://www.contentos.io/',\n  ),\n  bunny: new Token(\n    MAINNET,\n    '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n    18,\n    'BUNNY',\n    'Pancakebunny Token',\n    'https://pancakebunny.finance/',\n  ),\n  alice: new Token(\n    MAINNET,\n    '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n    6,\n    'ALICE',\n    'My Neighbor Alice Token',\n    'https://www.myneighboralice.com/',\n  ),\n  for: new Token(\n    MAINNET,\n    '0x658A109C5900BC6d2357c87549B651670E5b0539',\n    18,\n    'FOR',\n    'Fortube Token',\n    'https://www.for.tube/home',\n  ),\n  bux: new Token(\n    MAINNET,\n    '0x211FfbE424b90e25a15531ca322adF1559779E45',\n    18,\n    'BUX',\n    'Bux Crypto Token',\n    'https://getbux.com/bux-crypto/',\n  ),\n  nuls: new Token(\n    MAINNET,\n    '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n    8,\n    'NULS',\n    'Nuls Token',\n    'https://www.nuls.io/',\n  ),\n  ramp: new Token(\n    MAINNET,\n    '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n    18,\n    'RAMP',\n    'RAMP DEFI Token',\n    'https://rampdefi.com/',\n  ),\n  bfi: new Token(\n    MAINNET,\n    '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n    18,\n    'BFI',\n    'bearn.fi Token',\n    'https://bearn.fi/',\n  ),\n  dexe: new Token(\n    MAINNET,\n    '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n    18,\n    'DEXE',\n    'DeXe Token',\n    'https://dexe.network/',\n  ),\n  bel: new Token(\n    MAINNET,\n    '0x8443f091997f06a61670B735ED92734F5628692F',\n    18,\n    'BEL',\n    'Bella Protocol Token',\n    'https://bella.fi/',\n  ),\n  tpt: new Token(\n    MAINNET,\n    '0xECa41281c24451168a37211F0bc2b8645AF45092',\n    4,\n    'TPT',\n    'Tokenpocket Token',\n    'https://www.tokenpocket.pro/',\n  ),\n  xmark: new Token(\n    MAINNET,\n    '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n    9,\n    'xMARK',\n    'Benchmark Protocol Token',\n    'https://benchmarkprotocol.finance/',\n  ),\n  bmxx: new Token(\n    MAINNET,\n    '0x4131b87F74415190425ccD873048C708F8005823',\n    18,\n    'bMXX',\n    'Multiplier Token',\n    'https://multiplier.finance/',\n  ),\n  iotx: new Token(\n    MAINNET,\n    '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n    18,\n    'IOTX',\n    'Binance-Peg IoTeX Network Token',\n    'https://iotex.io/',\n  ),\n  bor: new Token(\n    MAINNET,\n    '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n    18,\n    'BOR',\n    'BoringDAO Token',\n    'https://www.boringdao.com/',\n  ),\n  bopen: new Token(\n    MAINNET,\n    '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n    18,\n    'bOPEN',\n    'OPEN Governance Token',\n    'https://opendao.io/',\n  ),\n  dodo: new Token(\n    MAINNET,\n    '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n    18,\n    'DODO',\n    'Dodo Token',\n    'https://dodoex.io/',\n  ),\n  swingby: new Token(\n    MAINNET,\n    '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n    18,\n    'SWINGBY',\n    'Swingby Network Token',\n    'https://swingby.network/',\n  ),\n  zee: new Token(\n    MAINNET,\n    '0x44754455564474A89358B2C2265883DF993b12F0',\n    18,\n    'ZEE',\n    'Zeroswap Token',\n    'https://zeroswap.io/',\n  ),\n  swgb: new Token(\n    MAINNET,\n    '0xE40255C5d7fa7ceEc5120408C78C787CECB4cfdb',\n    18,\n    'SWGb',\n    'SWGb Token',\n    'https://swirgepay.com/',\n  ),\n  swg: new Token(\n    MAINNET,\n    '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n    18,\n    'SWG',\n    'SWG Token',\n    'https://swirgepay.com/',\n  ),\n  sfp: new Token(\n    MAINNET,\n    '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n    18,\n    'SFP',\n    'Safepal Token',\n    'https://www.safepal.io/',\n  ),\n  lina: new Token(\n    MAINNET,\n    '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n    18,\n    'LINA',\n    'Linear Finance Token',\n    'https://linear.finance/',\n  ),\n  lit: new Token(\n    MAINNET,\n    '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n    18,\n    'LIT',\n    'Litentry Token',\n    'https://www.litentry.com/',\n  ),\n  hget: new Token(\n    MAINNET,\n    '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n    6,\n    'HGET',\n    'Hedget Token',\n    'https://www.hedget.com/',\n  ),\n  bdo: new Token(\n    MAINNET,\n    '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n    18,\n    'BDO',\n    'Bdollar Token',\n    'https://bdollar.fi/',\n  ),\n  egld: new Token(\n    MAINNET,\n    '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n    18,\n    'EGLD',\n    'Elrond Token',\n    'https://elrond.com/',\n  ),\n  front: new Token(\n    MAINNET,\n    '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n    18,\n    'FRONT',\n    'Frontier Token',\n    'https://frontier.xyz/',\n  ),\n  btcst: new Token(\n    MAINNET,\n    '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n    17,\n    'BTCST',\n    'StandardBTCHashrate Token',\n    'https://www.1-b.tc/',\n  ),\n  bscx: new Token(\n    MAINNET,\n    '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n    18,\n    'BSCX',\n    'BSCX Token',\n    'https://bscex.org/',\n  ),\n  balbt: new Token(\n    MAINNET,\n    '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n    18,\n    'bALBT',\n    'AllianceBlock Token',\n    'https://allianceblock.io/',\n  ),\n  asr: new Token(\n    MAINNET,\n    '0x80D5f92C2c8C682070C95495313dDB680B267320',\n    2,\n    'ASR',\n    'AS Roma Token',\n    'https://www.chiliz.com',\n  ),\n  atm: new Token(\n    MAINNET,\n    '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n    2,\n    'ATM',\n    'Athletico Madrid Token',\n    'https://www.chiliz.com',\n  ),\n  og: new Token(\n    MAINNET,\n    '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n    2,\n    'OG',\n    'OG Nice Token',\n    'https://www.chiliz.com',\n  ),\n  reef: new Token(\n    MAINNET,\n    '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n    18,\n    'REEF',\n    'Reef.finance Token',\n    'https://reef.finance/',\n  ),\n  juv: new Token(\n    MAINNET,\n    '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n    2,\n    'JUV',\n    'Juventus Token',\n    'https://www.chiliz.com',\n  ),\n  psg: new Token(\n    MAINNET,\n    '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n    2,\n    'PSG',\n    'Paris Saint-Germain Token',\n    'https://www.chiliz.com',\n  ),\n  vai: new Token(\n    MAINNET,\n    '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n    18,\n    'VAI',\n    'VAI Stablecoin',\n    '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n  ),\n  unfi: new Token(\n    MAINNET,\n    '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n    18,\n    'UNFI',\n    'UNFI Token',\n    'https://unifiprotocol.com',\n  ),\n  twt: new Token(\n    MAINNET,\n    '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n    18,\n    'TWT',\n    'Trust Wallet Token',\n    'https://trustwallet.com/',\n  ),\n  hard: new Token(\n    MAINNET,\n    '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n    6,\n    'HARD',\n    'HARD Token',\n    'https://hard.kava.io',\n  ),\n  broobee: new Token(\n    MAINNET,\n    '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n    18,\n    'bROOBEE',\n    'ROOBEE Token',\n    'https://roobee.io/',\n  ),\n  stax: new Token(\n    MAINNET,\n    '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n    18,\n    'STAX',\n    'StableX Token',\n    'https://stablexswap.com/',\n  ),\n  nar: new Token(\n    MAINNET,\n    '0xA1303E6199b319a891b79685F0537D289af1FC83',\n    18,\n    'NAR',\n    'Narwhalswap Token',\n    'https://narwhalswap.org/',\n  ),\n  nya: new Token(\n    MAINNET,\n    '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n    18,\n    'NYA',\n    'Nyanswop Token',\n    'https://nyanswop.org/',\n  ),\n  ctk: new Token(\n    MAINNET,\n    '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n    6,\n    'CTK',\n    'Certik Token',\n    'https://www.certik.foundation/',\n  ),\n  inj: new Token(\n    MAINNET,\n    '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n    18,\n    'INJ',\n    'Injective Protocol Token',\n    'https://injectiveprotocol.com/',\n  ),\n  sxp: new Token(MAINNET, '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A', 18, 'SXP', 'Swipe Token', 'https://swipe.io/'),\n  alpha: new Token(\n    MAINNET,\n    '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n    18,\n    'ALPHA',\n    'Alpha Finance Token',\n    'https://alphafinance.io/',\n  ),\n  xvs: new Token(MAINNET, '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63', 18, 'XVS', 'Venus Token', 'https://venus.io/'),\n  sushi: new Token(\n    MAINNET,\n    '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n    18,\n    'SUSHI',\n    'Binance-Peg SushiToken',\n    'https://sushi.com/',\n  ),\n  comp: new Token(\n    MAINNET,\n    '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n    18,\n    'COMP',\n    'Compound Finance Token',\n    'https://compound.finance/',\n  ),\n  bifi: new Token(\n    MAINNET,\n    '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n    18,\n    'BIFI',\n    'Beefy Finance Token',\n    'https://beefy.finance/',\n  ),\n  dusk: new Token(\n    MAINNET,\n    '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n    18,\n    'DUSK',\n    'Dusk Network Token',\n    'https://dusk.network/',\n  ),\n  beth: new Token(\n    MAINNET,\n    '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n    18,\n    'BETH',\n    'Binance Beacon ETH',\n    'https://ethereum.org/en/eth2/beacon-chain/',\n  ),\n  mamzn: new Token(\n    MAINNET,\n    '0x3947B992DC0147D2D89dF0392213781b04B25075',\n    18,\n    'mAMZN',\n    'Wrapped Mirror AMZN Token',\n    'https://mirror.finance/',\n  ),\n  mgoogl: new Token(\n    MAINNET,\n    '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n    18,\n    'mGOOGL',\n    'Wrapped Mirror GOOGL Token',\n    'https://mirror.finance/',\n  ),\n  mnflx: new Token(\n    MAINNET,\n    '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n    18,\n    'mNFLX',\n    'Wrapped Mirror NFLX Token',\n    'https://mirror.finance/',\n  ),\n  mtsla: new Token(\n    MAINNET,\n    '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n    18,\n    'mTSLA',\n    'Wrapped Mirror TSLA Token',\n    'https://mirror.finance/',\n  ),\n  ltc: new Token(\n    MAINNET,\n    '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n    18,\n    'LTC',\n    'Binance-Peg Litecoin Token',\n    'https://litecoin.org/',\n  ),\n  ada: new Token(\n    MAINNET,\n    '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n    18,\n    'ADA',\n    ' Binance-Peg Cardano Token',\n    'https://www.cardano.org/',\n  ),\n  band: new Token(\n    MAINNET,\n    '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n    18,\n    'BAND',\n    'Binance-Peg Band Protocol Token',\n    'https://bandprotocol.com/',\n  ),\n  dot: new Token(\n    MAINNET,\n    '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n    18,\n    'DOT',\n    'Binance-Peg Polkadot Token',\n    'https://polkadot.network/',\n  ),\n  eos: new Token(\n    MAINNET,\n    '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n    18,\n    'EOS',\n    'Binance-Peg EOS Token',\n    'https://eos.io/',\n  ),\n  link: new Token(\n    MAINNET,\n    '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n    18,\n    'LINK',\n    'Binance-Peg Chainlink Token',\n    'https://chain.link/',\n  ),\n  xrp: new Token(\n    MAINNET,\n    '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n    18,\n    'XRP',\n    'Binance-Peg XRP Token',\n    'https://ripple.com/xrp/',\n  ),\n  atom: new Token(\n    MAINNET,\n    '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n    18,\n    'ATOM',\n    'Binance-Peg Cosmos Token',\n    'https://cosmos.network/',\n  ),\n  yfii: new Token(\n    MAINNET,\n    '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n    18,\n    'YFII',\n    'Binance-Peg YFII.finance Token',\n    'https://dfi.money/#/',\n  ),\n  xtz: new Token(\n    MAINNET,\n    '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n    18,\n    'XTZ',\n    'Binance-Peg Tezos Token',\n    'https://www.tezos.com/',\n  ),\n  bch: new Token(\n    MAINNET,\n    '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n    18,\n    'BCH',\n    'Binance-Peg Bitcoin Cash Token',\n    'https://bch.info/',\n  ),\n  yfi: new Token(\n    MAINNET,\n    '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n    18,\n    'YFI',\n    'Binance-Peg yearn.finance Token',\n    'https://yearn.finance/',\n  ),\n  uni: new Token(\n    MAINNET,\n    '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n    18,\n    'UNI',\n    'Binance-Peg Uniswap Token',\n    'https://uniswap.org/',\n  ),\n  fil: new Token(\n    MAINNET,\n    '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n    18,\n    'FIL',\n    'Binance-Peg Filecoin Token',\n    'https://filecoin.io/',\n  ),\n  bake: new Token(\n    MAINNET,\n    '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    18,\n    'BAKE',\n    'Bakeryswap Token',\n    'https://www.bakeryswap.org/',\n  ),\n  burger: new Token(\n    MAINNET,\n    '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n    18,\n    'BURGER',\n    'Burgerswap Token',\n    'https://burgerswap.org/',\n  ),\n  bdigg: new Token(\n    MAINNET,\n    '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n    18,\n    'bDIGG',\n    'Badger Sett Digg Token',\n    'https://badger.finance/',\n  ),\n  bbadger: new Token(\n    MAINNET,\n    '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n    18,\n    'bBadger',\n    'Badger Sett Badger Token',\n    'https://badger.finance/',\n  ),\n  trade: new Token(\n    MAINNET,\n    '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n    18,\n    'TRADE',\n    'Unitrade Token',\n    'https://unitrade.app/',\n  ),\n  pnt: new Token(\n    MAINNET,\n    '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n    18,\n    'PNT',\n    'pNetwork Token',\n    'https://ptokens.io/',\n  ),\n  mir: new Token(\n    MAINNET,\n    '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n    18,\n    'MIR',\n    'Mirror Protocol Token',\n    'https://mirror.finance/',\n  ),\n  pbtc: new Token(\n    MAINNET,\n    '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n    18,\n    'pBTC',\n    'pTokens BTC Token',\n    'https://ptokens.io/',\n  ),\n  lto: new Token(\n    MAINNET,\n    '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n    18,\n    'LTO',\n    'LTO Network Token',\n    'https://ltonetwork.com/',\n  ),\n  pcws: new Token(\n    MAINNET,\n    '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n    18,\n    'pCWS',\n    'PolyCrowns Token',\n    'https://game.seascape.network/',\n  ),\n  zil: new Token(\n    MAINNET,\n    '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n    12,\n    'ZIL',\n    'Zilliqa Token',\n    'https://www.zilliqa.com/',\n  ),\n  lien: new Token(\n    MAINNET,\n    '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n    8,\n    'LIEN',\n    'Lien Finance Token',\n    'https://lien.finance/',\n  ),\n  swth: new Token(\n    MAINNET,\n    '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n    8,\n    'SWTH',\n    'Switcheo Network Token',\n    'https://switcheo.network/',\n  ),\n  dft: new Token(\n    MAINNET,\n    '0x42712dF5009c20fee340B245b510c0395896cF6e',\n    18,\n    'DFT',\n    'Dfuture Token',\n    'https://www.dfuture.com/home',\n  ),\n  gum: new Token(\n    MAINNET,\n    '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n    18,\n    'GUM',\n    'GourmetGalaxy Token',\n    'https://gourmetgalaxy.io/',\n  ),\n  dego: new Token(\n    MAINNET,\n    '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n    18,\n    'DEGO',\n    'Dego Finance Token',\n    'https://bsc.dego.finance/home',\n  ),\n  nrv: new Token(\n    MAINNET,\n    '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n    18,\n    'NRV',\n    'Nerve Finance Token',\n    'https://nerve.fi/',\n  ),\n  easy: new Token(\n    MAINNET,\n    '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n    18,\n    'EASY',\n    'EASY Token',\n    'https://easyfi.network/',\n  ),\n  oddz: new Token(MAINNET, '0xCD40F2670CF58720b694968698A5514e924F742d', 18, 'ODDZ', 'Oddz Token', 'https://oddz.fi/'),\n  hoo: new Token(MAINNET, '0xE1d1F66215998786110Ba0102ef558b22224C016', 8, 'HOO', 'Hoo Token', 'https://hoo.com/'),\n  apys: new Token(\n    MAINNET,\n    '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n    18,\n    'APYS',\n    'APY Swap Token',\n    'https://apyswap.com/',\n  ),\n  bondly: new Token(\n    MAINNET,\n    '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n    18,\n    'BONDLY',\n    'Bondly Token',\n    'https://www.bondly.finance/',\n  ),\n  tko: new Token(\n    MAINNET,\n    '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n    18,\n    'TKO',\n    'Tokocrypto Token',\n    'https://www.tokocrypto.com/',\n  ),\n  itam: new Token(\n    MAINNET,\n    '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n    18,\n    'ITAM',\n    'Itam Network Token',\n    'https://itam.network/',\n  ),\n  arpa: new Token(\n    MAINNET,\n    '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n    18,\n    'ARPA',\n    'Arpachain Token',\n    'https://arpachain.io/',\n  ),\n  eps: new Token(\n    MAINNET,\n    '0xA7f552078dcC247C2684336020c03648500C6d9F',\n    18,\n    'EPS',\n    'Ellipsis Finance Token',\n    'https://ellipsis.finance/',\n  ),\n  jgn: new Token(\n    MAINNET,\n    '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n    18,\n    'JGN',\n    'Juggernaut DeFi Token',\n    'https://jgndefi.com/',\n  ),\n  tlm: new Token(\n    MAINNET,\n    '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n    4,\n    'TLM',\n    'Alien Worlds Trilium Token',\n    'https://alienworlds.io/',\n  ),\n  perl: new Token(\n    MAINNET,\n    '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n    18,\n    'PERL',\n    'Perlin',\n    'https://perlinx.finance/',\n  ),\n  alpa: new Token(\n    MAINNET,\n    '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n    18,\n    'ALPA',\n    'AlpaToken',\n    'https://bsc.alpaca.city/',\n  ),\n  hzn: new Token(\n    MAINNET,\n    '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n    18,\n    'HZN',\n    'Horizon Protocol Token',\n    'https://horizonprotocol.com/',\n  ),\n  suter: new Token(\n    MAINNET,\n    '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n    18,\n    'SUTER',\n    'Suterusu Token',\n    'https://shield.suterusu.io/',\n  ),\n  cgg: new Token(\n    MAINNET,\n    '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n    18,\n    'CGG',\n    'pTokens CGG Token',\n    'https://chainguardians.io/',\n  ),\n  mix: new Token(\n    MAINNET,\n    '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n    18,\n    'MIX',\n    'Mix Token',\n    'https://mixie.chainguardians.io/',\n  ),\n  hakka: new Token(\n    MAINNET,\n    '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n    18,\n    'HAKKA',\n    'Hakka Token',\n    'https://hakka.finance/',\n  ),\n  xed: new Token(\n    MAINNET,\n    '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n    18,\n    'XED',\n    'Exeedme Token',\n    'https://www.exeedme.com/',\n  ),\n  τbtc: new Token(\n    MAINNET,\n    '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n    9,\n    'τBTC',\n    'τBitcoin Token',\n    'https://www.btcst.finance/',\n  ),\n  alpaca: new Token(\n    MAINNET,\n    '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n    18,\n    'ALPACA',\n    'AlpacaToken',\n    'https://www.alpacafinance.org/',\n  ),\n  dfd: new Token(\n    MAINNET,\n    '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n    18,\n    'DFD',\n    'DefiDollar DAO',\n    'https://dusd.finance/',\n  ),\n  lmt: new Token(\n    MAINNET,\n    '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n    18,\n    'LMT',\n    'Lympo Market Token',\n    'https://lympo.io/lmt/',\n  ),\n  btt: new Token(\n    MAINNET,\n    '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n    18,\n    'BTT',\n    'Binance-Peg BitTorrent Token',\n    'https://www.bittorrent.com/',\n  ),\n  trx: new Token(\n    MAINNET,\n    '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n    18,\n    'TRX',\n    'TRON Token',\n    'https://tron.network/',\n  ),\n  win: new Token(\n    MAINNET,\n    '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n    18,\n    'WIN',\n    'WIN Token',\n    'https://winklink.org/',\n  ),\n  mcoin: new Token(\n    MAINNET,\n    '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n    18,\n    'MCOIN',\n    'Wrapped Mirror COIN Token',\n    'https://mirror.finance/',\n  ),\n  math: new Token(\n    MAINNET,\n    '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n    18,\n    'MATH',\n    'MATH Token',\n    'https://mathwallet.org/',\n  ),\n  kun: new Token(\n    MAINNET,\n    '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n    18,\n    'KUN',\n    'QIAN governance token',\n    'https://chemix.io/home',\n  ),\n  qsd: new Token(\n    MAINNET,\n    '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n    18,\n    'QSD',\n    'QIAN second generation dollar',\n    'https://chemix.io/home',\n  ),\n  hyfi: new Token(\n    MAINNET,\n    '0x9a319b959e33369C5eaA494a770117eE3e585318',\n    18,\n    'HYFI',\n    'HYFI Token',\n    'https://hyfi.pro/#/',\n  ),\n  oin: new Token(\n    MAINNET,\n    '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n    8,\n    'OIN',\n    'oinfinance Token',\n    'https://oin.finance/',\n  ),\n  doge: new Token(\n    MAINNET,\n    '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n    8,\n    'DOGE',\n    'Binance-Peg Dogecoin',\n    'https://dogecoin.com/',\n  ),\n  fine: new Token(\n    MAINNET,\n    '0x4e6415a5727ea08aAE4580057187923aeC331227',\n    18,\n    'FINE',\n    'Refinable Token',\n    'https://refinable.com/',\n  ),\n  one: new Token(\n    MAINNET,\n    '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n    18,\n    'ONE',\n    'BigONE Token',\n    'https://www.bigone.com/',\n  ),\n  pmon: new Token(\n    MAINNET,\n    '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n    18,\n    'PMON',\n    'Polkamon Token',\n    'https://polkamon.com/',\n  ),\n  τdoge: new Token(\n    MAINNET,\n    '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n    8,\n    'τDOGE',\n    'τDogecoin',\n    'https://www.btcst.finance/',\n  ),\n  btr: new Token(\n    MAINNET,\n    '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n    18,\n    'BTR',\n    'Bitrue Token',\n    'https://www.bitrue.com/',\n  ),\n  ubxt: new Token(\n    MAINNET,\n    '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n    18,\n    'UBXT',\n    'UpBots Token',\n    'https://upbots.com/',\n  ),\n  wmass: new Token(\n    MAINNET,\n    '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n    8,\n    'WMASS',\n    'Wrapped MASS Token',\n    'https://massnet.org/en/',\n  ),\n  rfox: new Token(\n    MAINNET,\n    '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n    18,\n    'RFOX',\n    'RFOX Token',\n    'https://www.redfoxlabs.io/',\n  ),\n  xend: new Token(\n    MAINNET,\n    '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n    18,\n    'XEND',\n    'XEND Token',\n    'https://xend.finance/',\n  ),\n  cyc: new Token(MAINNET, '0x810EE35443639348aDbbC467b33310d2AB43c168', 18, 'CYC', 'CYC Token', 'https://cyclone.xyz/'),\n  chr: new Token(\n    MAINNET,\n    '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n    6,\n    'CHR',\n    'Chroma Token',\n    'https://chromia.com/',\n  ),\n  deri: new Token(\n    MAINNET,\n    '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n    18,\n    'DERI',\n    'Deri Token',\n    'https://deri.finance/#/index',\n  ),\n  well: new Token(\n    MAINNET,\n    '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n    18,\n    'WELL',\n    'BitWell Token',\n    'https://www.bitwellex.com/',\n  ),\n  wex: new Token(\n    MAINNET,\n    '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n    18,\n    'WEX',\n    'WaultSwap Token',\n    'https://wault.finance/',\n  ),\n  waultx: new Token(\n    MAINNET,\n    '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n    18,\n    'WAULTx',\n    'Wault Token',\n    'https://wault.finance/',\n  ),\n  popen: new Token(\n    MAINNET,\n    '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n    18,\n    'pOPEN',\n    'OPEN Governance Token',\n    'https://opendao.io/',\n  ),\n  ez: new Token(\n    MAINNET,\n    '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n    18,\n    'EZ',\n    'Easy V2 Token',\n    'https://easyfi.network/',\n  ),\n  vrt: new Token(\n    MAINNET,\n    '0x5F84ce30DC3cF7909101C69086c50De191895883',\n    18,\n    'VRT',\n    'Venus Reward Token',\n    'https://venus.io/',\n  ),\n  tusd: new Token(\n    MAINNET,\n    '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n    18,\n    'TUSD',\n    'Binance-Peg TrueUSD Token',\n    'https://www.trueusd.com/',\n  ),\n  mtrg: new Token(\n    MAINNET,\n    '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n    18,\n    'MTRG',\n    'Wrapped MTRG Token',\n    'https://www.meter.io/',\n  ),\n  ktn: new Token(\n    MAINNET,\n    '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n    18,\n    'KTN',\n    'Kattana Token',\n    'https://kattana.io/',\n  ),\n  qkc: new Token(\n    MAINNET,\n    '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n    18,\n    'QKC',\n    'QuarkChain Token',\n    'https://quarkchain.io/',\n  ),\n  bcfx: new Token(\n    MAINNET,\n    '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n    18,\n    'bCFX',\n    'BSC Conflux Token',\n    'https://www.confluxnetwork.org/',\n  ),\n  mx: new Token(MAINNET, '0x9F882567A62a5560d147d64871776EeA72Df41D3', 18, 'MX', 'MX Token', 'https://www.mxc.com/'),\n  ata: new Token(\n    MAINNET,\n    '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n    18,\n    'ATA',\n    'Automata Token',\n    'https://www.ata.network/',\n  ),\n  mbox: new Token(\n    MAINNET,\n    '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n    18,\n    'MBOX',\n    'Mobox Token',\n    'https://www.mobox.io/#/',\n  ),\n  boring: new Token(\n    MAINNET,\n    '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n    18,\n    'BORING',\n    'BoringDAO Token',\n    'https://www.boringdao.com/',\n  ),\n  marsh: new Token(\n    MAINNET,\n    '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n    18,\n    'MARSH',\n    'Unmarshal Token',\n    'https://unmarshal.io/',\n  ),\n  ampl: new Token(\n    MAINNET,\n    '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n    9,\n    'AMPL',\n    'AMPL Token',\n    'https://www.ampleforth.org/',\n  ),\n  o3: new Token(\n    MAINNET,\n    '0xEe9801669C6138E84bD50dEB500827b776777d28',\n    18,\n    'O3',\n    'O3 Swap Token',\n    'https://o3swap.com/',\n  ),\n  hai: new Token(MAINNET, '0xaA9E582e5751d703F85912903bacADdFed26484C', 8, 'HAI', 'Hacken Token', 'https://hacken.io/'),\n  htb: new Token(\n    MAINNET,\n    '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n    18,\n    'HTB',\n    'Hotbit Token',\n    'https://www.hotbit.io/',\n  ),\n  woo: new Token(\n    MAINNET,\n    '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n    18,\n    'WOO',\n    'Wootrade Network Token',\n    'https://woo.network/',\n  ),\n  $dg: new Token(\n    MAINNET,\n    '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n    18,\n    '$DG',\n    'Decentral Games Token',\n    'https://decentral.games/',\n  ),\n  safemoon: new Token(\n    MAINNET,\n    '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n    9,\n    'SAFEMOON',\n    'Safemoon Token',\n    'https://safemoon.net/',\n  ),\n  axs: new Token(\n    MAINNET,\n    '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n    18,\n    'AXS',\n    'Binance-Pegged Axie Infinity Shard',\n    'https://axieinfinity.com/',\n  ),\n  c98: new Token(\n    MAINNET,\n    '0xaEC945e04baF28b135Fa7c640f624f8D90F1C3a6',\n    18,\n    'c98',\n    'Coin98 Token',\n    'https://coin98.com/',\n  ),\n  pots: new Token(\n    MAINNET,\n    '0x3Fcca8648651E5b974DD6d3e50F61567779772A8',\n    18,\n    'POTS',\n    'Moonpot Token',\n    'https://moonpot.com/',\n  ),\n  gnt: new Token(\n    MAINNET,\n    '0xF750A26EB0aCf95556e8529E72eD530f3b60f348',\n    18,\n    'GNT',\n    'GreenTrust Token',\n    'https://www.greentrusttoken.com/',\n  ),\n  rusd: new Token(\n    MAINNET,\n    '0x07663837218A003e66310a01596af4bf4e44623D',\n    18,\n    'rUSD',\n    'rUSD Token',\n    'https://appv2.rampdefi.com/#/',\n  ),\n  bp: new Token(\n    MAINNET,\n    '0xACB8f52DC63BB752a51186D1c55868ADbFfEe9C1',\n    18,\n    'BP',\n    'BunnyPark Token',\n    'https://www.bunnypark.com/',\n  ),\n  sfund: new Token(\n    MAINNET,\n    '0x477bC8d23c634C154061869478bce96BE6045D12',\n    18,\n    'SFUND',\n    'Seedify Fund Token',\n    'https://seedify.fund/',\n  ),\n  naos: new Token(\n    MAINNET,\n    '0x758d08864fB6cCE3062667225ca10b8F00496cc2',\n    18,\n    'NAOS',\n    'NAOSToken',\n    'https://naos.finance/',\n  ),\n  cart: new Token(\n    MAINNET,\n    '0x5C8C8D560048F34E5f7f8ad71f2f81a89DBd273e',\n    18,\n    'CART',\n    'CryptoArt.ai',\n    'https://cryptoart.ai/',\n  ),\n  light: new Token(\n    MAINNET,\n    '0x037838b556d9c9d654148a284682C55bB5f56eF4',\n    18,\n    'LIGHT',\n    'Lightning',\n    'https://lightningprotocol.finance/',\n  ),\n  rpg: new Token(\n    MAINNET,\n    '0xc2098a8938119A52B1F7661893c0153A6CB116d5',\n    18,\n    'RPG',\n    'Rangers Protocol',\n    'https://www.rangersprotocol.com/',\n  ),\n  mcb: new Token(\n    MAINNET,\n    '0x5fE80d2CD054645b9419657d3d10d26391780A7B',\n    18,\n    'MCB',\n    'MCDEX',\n    'https://mcdex.io/homepage/',\n  ),\n  lazio: new Token(\n    MAINNET,\n    '0x77d547256A2cD95F32F67aE0313E450Ac200648d',\n    8,\n    'LAZIO',\n    'FC Lazio Fan Token',\n    'https://launchpad.binance.com/en/subscription/LAZIO_BNB',\n  ),\n  arv: new Token(MAINNET, '0x6679eB24F59dFe111864AEc72B443d1Da666B360', 8, 'ARV', 'ARIVA', 'https://ariva.digital'),\n  moni: new Token(\n    MAINNET,\n    '0x9573c88aE3e37508f87649f87c4dd5373C9F31e0',\n    18,\n    'MONI',\n    'Monsta Infinite',\n    'https://monstainfinite.com/',\n  ),\n  xms: new Token(\n    MAINNET,\n    '0x7859B01BbF675d67Da8cD128a50D155cd881B576',\n    18,\n    'XMS',\n    'Mars Ecosystem',\n    'https://marsecosystem.com/',\n  ),\n  zoo: new Token(\n    MAINNET,\n    '0x1D229B958D5DDFca92146585a8711aECbE56F095',\n    18,\n    'ZOO',\n    'ZOO Crypto World',\n    'https://zoogame.finance/',\n  ),\n  fina: new Token(\n    MAINNET,\n    '0x426c72701833fdDBdFc06c944737C6031645c708',\n    18,\n    'FINA',\n    'Defina Finance',\n    'https://defina.finance/',\n  ),\n  dar: new Token(\n    MAINNET,\n    '0x23CE9e926048273eF83be0A3A8Ba9Cb6D45cd978',\n    6,\n    'DAR',\n    'Mines of Dalarnia',\n    'https://www.minesofdalarnia.com/',\n  ),\n  xwg: new Token(\n    MAINNET,\n    '0x6b23C89196DeB721e6Fd9726E6C76E4810a464bc',\n    18,\n    'XWG',\n    'X World Games',\n    'https://xwg.games/',\n  ),\n  eternal: new Token(\n    MAINNET,\n    '0xD44FD09d74cd13838F137B590497595d6b3FEeA4',\n    18,\n    'ETERNAL',\n    'CryptoMines Eternal',\n    'https://cryptomines.app/',\n  ),\n  porto: new Token(\n    MAINNET,\n    '0x49f2145d6366099e13B10FbF80646C0F377eE7f6',\n    8,\n    'PORTO',\n    'FC Porto Fan Token',\n    'https://launchpad.binance.com/en/subscription/PORTO_BNB',\n  ),\n  kart: new Token(\n    MAINNET,\n    '0x8BDd8DBcBDf0C066cA5f3286d33673aA7A553C10',\n    18,\n    'KART',\n    'Dragon Kart',\n    'https://dragonkart.com/',\n  ),\n  qi: new Token(MAINNET, '0x8729438EB15e2C8B576fCc6AeCdA6A148776C0F5', 18, 'QI', 'BENQI', 'https://benqi.fi/'),\n  sheesha: new Token(\n    MAINNET,\n    '0x232FB065D9d24c34708eeDbF03724f2e95ABE768',\n    18,\n    'SHEESHA',\n    'Sheesha Finance',\n    'https://www.sheeshafinance.io/',\n  ),\n  bcoin: new Token(\n    MAINNET,\n    '0x00e1656e45f18ec6747F5a8496Fd39B50b38396D',\n    18,\n    'BCOIN',\n    'Bomb Crypto',\n    'https://bombcrypto.io/',\n  ),\n}\n\nexport const testnetTokens = {\n  wbnb: new Token(\n    TESTNET,\n    '0x094616F0BdFB0b526bD735Bf66Eca0Ad254ca81F',\n    18,\n    'WBNB',\n    'Wrapped BNB',\n    'https://www.binance.com/',\n  ),\n  cake: new Token(\n    TESTNET,\n    '0x703f112bda4cc6cb9c5fb4b2e6140f6d8374f10b',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n    'https://pancakeswap.finance/',\n  ),\n  busd: new Token(\n    TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n    'https://www.paxos.com/busd/',\n  ),\n  syrup: new Token(\n    TESTNET,\n    '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    18,\n    'SYRUP',\n    'SyrupBar Token',\n    'https://pancakeswap.finance/',\n  ),\n  bake: new Token(\n    TESTNET,\n    '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    18,\n    'BAKE',\n    'Bakeryswap Token',\n    'https://www.bakeryswap.org/',\n  ),\n}\n\nconst tokens = (): TokenList => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n\n  // If testnet - return list comprised of testnetTokens wherever they exist, and mainnetTokens where they don't\n  if (parseInt(chainId, 10) === ChainId.TESTNET) {\n    return Object.keys(mainnetTokens).reduce((accum, key) => {\n      return { ...accum, [key]: testnetTokens[key] || mainnetTokens[key] }\n    }, {})\n  }\n\n  return mainnetTokens\n}\n\nexport const serializeTokens = (): SerializedTokenList => {\n  const unserializedTokens = tokens()\n  const serializedTokens = Object.keys(unserializedTokens).reduce((accum, key) => {\n    return { ...accum, [key]: serializeToken(unserializedTokens[key]) }\n  }, {})\n\n  return serializedTokens\n}\n\nexport default tokens()\n","export default {\n  masterChef: {\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\n    56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lotteryV2: {\n    // @ts-ignore\n    97: window.SO_LotteryConfig.contract,\n    // @ts-ignore\n    56: window.SO_LotteryConfig.contract,\n  },\n  multiCall: {\n    1: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\n    4: '0x42Ad527de7d4e9d9d011aC45B31D8551f8Fe9821',\n    5: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\n    100: '0x67dA5f2FfaDDfF067AB9d5F025F8810634d84287',\n    77: '0x2D0Cf59485baa2A105541b9bf850E06C071AFab8',\n    137: '0x02817C1e3543c2d908a590F5dB6bc97f933dB4BD',\n    80001: '0x6aa1bdc159e28beca44cc7f1a260a25e7b63f53d',\n    56: '0xa9193376D09C7f31283C54e56D013fCF370Cd9D9', //'0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '0xe348b292e8eA5FAB54340656f3D374b259D658b8', //'0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\n    42161: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\n    421611: '0xf27ee99622c3c9b264583dacb2cce056e194494f',\n    250: '0x22D4cF72C45F8198CfbF4B568dBdB5A85e8DC0B5',\n    25: '0x88f9B139B70a9083C27430EBb64099fdf9e29e78',\n    336: '0x1763d5e86452Ed9C13b874fDe60A0669D11C5d40',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\n    97: '',\n  },\n  predictions: {\n    56: '0x18B2A687610328590Bc8F2e5fEdDe3b582A49cdA',\n    97: '',\n  },\n  chainlinkOracle: {\n    56: '0xD276fCF34D54A926773c399eBAa772C12ec394aC',\n    97: '',\n  },\n  bunnySpecialCakeVault: {\n    56: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\n    97: '',\n  },\n  bunnySpecialPrediction: {\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    97: '',\n  },\n  bunnySpecialLottery: {\n    56: '0x24ED31d31C5868e5a96aA77fdcB890f3511fa0b2',\n    97: '0x382cB497110F398F0f152cae82821476AE51c9cF',\n  },\n  farmAuction: {\n    56: '0xb92Ab7c1edcb273AbA24b0656cEb3681654805D2',\n    97: '0x3F9602593b4f7C67ab045DB51BbDEa94E40fA9Fe',\n  },\n  AnniversaryAchievement: {\n    56: '0x787980da5491118C3cB33B21aB50c8c379D2C552',\n    97: '0x981aE96378e770DE44F89cD9175E708f9EDB70a9',\n  },\n  nftMarket: {\n    56: '0x17539cCa21C7933Df5c980172d22659B8C345C5A',\n    97: '0x7f9f37ddcaa33893f9beb3d8748c8d6bfbde6ab2',\n  },\n  nftSale: {\n    56: '0x29fE7148636b7Ae0b1E53777b28dfbaA9327af8E',\n    97: '0xe486De509c5381cbdBF3e71F57D7F1f7570f5c46',\n  },\n  pancakeSquad: {\n    56: '0x0a8901b0E25DEb55A87524f0cC164E9644020EBA',\n    97: '0xfC0c3F11fDA72Cb9A56F28Ec8D44C0ae4B3ABF86',\n  },\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  // @ts-ignore\n  const chainId = parseInt(window.SO_LotteryConfig.chainId, 10)\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  // @ts-ignore\n  //return window.SO_LotteryConfig.contract\n  return getAddress(addresses.multiCall)\n}\nexport const getLotteryV2Address = () => {\n  // @ts-ignore\n  return window.SO_LotteryConfig.contract\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getBunnySpecialLotteryAddress = () => {\n  return getAddress(addresses.bunnySpecialLottery)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\nexport const getAnniversaryAchievement = () => {\n  return getAddress(addresses.AnniversaryAchievement)\n}\nexport const getNftMarketAddress = () => {\n  return getAddress(addresses.nftMarket)\n}\nexport const getNftSaleAddress = () => {\n  return getAddress(addresses.nftSale)\n}\nexport const getPancakeSquadAddress = () => {\n  return getAddress(addresses.pancakeSquad)\n}\n","/* tslint:disable */\nimport { ChainId, Token } from '@pancakeswap/sdk'\nimport { serializeToken } from 'state/user/hooks/helpers'\nimport { SerializedToken } from './types'\n\nconst { MAINNET, TESTNET } = ChainId\n\ninterface TokenList {\n  [symbol: string]: Token\n}\n\ninterface SerializedTokenList {\n  [symbol: string]: SerializedToken\n}\n\ninterface TokenInfo {\n  address: string\n  symbol: string\n  title: string\n  decimals: number\n  viewDecimals: number\n  price: number | false\n}\n\nexport const mainnetTokens = {\n  cake: new Token(\n    MAINNET,\n    '0x703f112bda4cc6cb9c5fb4b2e6140f6d8374f10b',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n    'https://pancakeswap.finance/',\n  ),\n}\n\nexport const testnetTokens = {\n  cake: new Token(\n    TESTNET,\n    '0x703f112bda4cc6cb9c5fb4b2e6140f6d8374f10b',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n    'https://pancakeswap.finance/',\n  ),\n}\n\nexport const info = (): TokenInfo => {\n  const {\n    chainId,\n    token: {\n      symbol,\n      address,\n      decimals,\n      viewDecimals,\n      title,\n      price,\n    },\n  } = window.SO_LotteryConfig\n  return {\n    address,\n    symbol,\n    title,\n    decimals,\n    viewDecimals: (viewDecimals !== undefined) ? viewDecimals : 2,\n    price: price || false\n  }\n}\n\nconst tokens = (): TokenList => {\n  const tokensList: TokenList = {}\n  const {\n    chainId,\n    token: {\n      symbol,\n      address,\n      decimals,\n      title\n    },\n  } = window.SO_LotteryConfig\n\n  tokensList.cake = new Token(\n    chainId,\n    address,\n    decimals,\n    symbol,\n    title,\n    ''\n  )\n\n  return tokensList\n}\n\n\nexport const serializeTokens = (): SerializedTokenList => {\n  const unserializedTokens = tokens()\n  const serializedTokens = Object.keys(unserializedTokens).reduce((accum, key) => {\n    return { ...accum, [key]: serializeToken(unserializedTokens[key]) }\n  }, {})\n\n  return serializedTokens\n}\n\nexport default tokens()\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData, { getGraphLotteryUser } from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const fetchAdditionalUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; skip?: number }\n>('lottery/fetchAdditionalUserLotteries', async ({ account, skip }) => {\n  const additionalUserLotteries = await getGraphLotteryUser(account, undefined, skip)\n  return additionalUserLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(fetchAdditionalUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      const mergedRounds = [...state.userLotteryData.rounds, ...action.payload.rounds]\n      state.userLotteryData.rounds = mergedRounds\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\nexport default LotterySlice.reducer\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { ChainId, Pair, Token } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  updateGasPrice,\n  addWatchlistToken,\n  addWatchlistPool,\n  updateUserPoolStakedOnly,\n  updateUserPoolsViewMode,\n  ViewMode,\n  updateUserFarmsViewMode,\n  updateUserPredictionChartDisclaimerShow,\n  updateUserPredictionAcceptedRisk,\n  updateUserUsernameVisibility,\n  updateUserExpertModeAcknowledgementShow,\n  hidePhishingWarningBanner,\n  setIsExchangeChartDisplayed,\n} from '../actions'\nimport { deserializeToken, GAS_PRICE_GWEI, serializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function usePhishingBannerManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const showPhishingWarningBanner = useSelector<AppState, AppState['user']['showPhishingWarningBanner']>(\n    (state) => state.user.showPhishingWarningBanner,\n  )\n\n  const hideBanner = useCallback(() => {\n    dispatch(hidePhishingWarningBanner())\n  }, [dispatch])\n\n  return [showPhishingWarningBanner, hideBanner]\n}\n\n// Get user preference for exchange price chart\n// For mobile layout chart is hidden by default\nexport function useExchangeChartManager(isMobile: boolean): [boolean, (isDisplayed: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isChartDisplayed = useSelector<AppState, AppState['user']['isExchangeChartDisplayed']>(\n    (state) => state.user.isExchangeChartDisplayed,\n  )\n\n  const setUserChartPreference = useCallback(\n    (isDisplayed: boolean) => {\n      dispatch(setIsExchangeChartDisplayed(isDisplayed))\n    },\n    [dispatch],\n  )\n\n  return [isMobile ? false : isChartDisplayed, setUserChartPreference]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserPoolStakedOnly(): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPoolStakedOnly = useSelector<AppState, AppState['user']['userPoolStakedOnly']>((state) => {\n    return state.user.userPoolStakedOnly\n  })\n\n  const setUserPoolStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      dispatch(updateUserPoolStakedOnly({ userPoolStakedOnly: stakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [userPoolStakedOnly, setUserPoolStakedOnly]\n}\n\nexport function useUserPoolsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPoolsViewMode = useSelector<AppState, AppState['user']['userPoolsViewMode']>((state) => {\n    return state.user.userPoolsViewMode\n  })\n\n  const setUserPoolsViewMode = useCallback(\n    (viewMode: ViewMode) => {\n      dispatch(updateUserPoolsViewMode({ userPoolsViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userPoolsViewMode, setUserPoolsViewMode]\n}\n\nexport function useUserFarmsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmsViewMode = useSelector<AppState, AppState['user']['userFarmsViewMode']>((state) => {\n    return state.user.userFarmsViewMode\n  })\n\n  const setUserFarmsViewMode = useCallback(\n    (viewMode: ViewMode) => {\n      dispatch(updateUserFarmsViewMode({ userFarmsViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userFarmsViewMode, setUserFarmsViewMode]\n}\n\nexport function useUserPredictionAcceptedRisk(): [boolean, (acceptedRisk: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPredictionAcceptedRisk = useSelector<AppState, AppState['user']['userPredictionAcceptedRisk']>((state) => {\n    return state.user.userPredictionAcceptedRisk\n  })\n\n  const setUserPredictionAcceptedRisk = useCallback(\n    (acceptedRisk: boolean) => {\n      dispatch(updateUserPredictionAcceptedRisk({ userAcceptedRisk: acceptedRisk }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionAcceptedRisk, setUserPredictionAcceptedRisk]\n}\n\nexport function useUserPredictionChartDisclaimerShow(): [boolean, (showDisclaimer: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPredictionChartDisclaimerShow = useSelector<\n    AppState,\n    AppState['user']['userPredictionChartDisclaimerShow']\n  >((state) => {\n    return state.user.userPredictionChartDisclaimerShow\n  })\n\n  const setPredictionUserChartDisclaimerShow = useCallback(\n    (showDisclaimer: boolean) => {\n      dispatch(updateUserPredictionChartDisclaimerShow({ userShowDisclaimer: showDisclaimer }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionChartDisclaimerShow, setPredictionUserChartDisclaimerShow]\n}\n\nexport function useUserExpertModeAcknowledgementShow(): [boolean, (showAcknowledgement: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userExpertModeAcknowledgementShow = useSelector<\n    AppState,\n    AppState['user']['userExpertModeAcknowledgementShow']\n  >((state) => {\n    return state.user.userExpertModeAcknowledgementShow\n  })\n\n  const setUserExpertModeAcknowledgementShow = useCallback(\n    (showAcknowledgement: boolean) => {\n      dispatch(updateUserExpertModeAcknowledgementShow({ userExpertModeAcknowledgementShow: showAcknowledgement }))\n    },\n    [dispatch],\n  )\n\n  return [userExpertModeAcknowledgementShow, setUserExpertModeAcknowledgementShow]\n}\n\nexport function useUserUsernameVisibility(): [boolean, (usernameVisibility: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userUsernameVisibility = useSelector<AppState, AppState['user']['userUsernameVisibility']>((state) => {\n    return state.user.userUsernameVisibility\n  })\n\n  const setUserUsernameVisibility = useCallback(\n    (usernameVisibility: boolean) => {\n      dispatch(updateUserUsernameVisibility({ userUsernameVisibility: usernameVisibility }))\n    },\n    [dispatch],\n  )\n\n  return [userUsernameVisibility, setUserUsernameVisibility]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useGasPrice(): string {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const userGas = useSelector<AppState, AppState['user']['gasPrice']>((state) => state.user.gasPrice)\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport function useGasPriceManager(): [string, (userGasPrice: string) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userGasPrice = useGasPrice()\n\n  const setGasPrice = useCallback(\n    (gasPrice: string) => {\n      dispatch(updateGasPrice({ gasPrice }))\n    },\n    [dispatch],\n  )\n\n  return [userGasPrice, setGasPrice]\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n\nexport const useWatchlistTokens = (): [string[], (address: string) => void] => {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedTokens = useSelector((state: AppState) => state.user.watchlistTokens) ?? []\n  const updatedSavedTokens = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistToken({ address }))\n    },\n    [dispatch],\n  )\n  return [savedTokens, updatedSavedTokens]\n}\n\nexport const useWatchlistPools = (): [string[], (address: string) => void] => {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedPools = useSelector((state: AppState) => state.user.watchlistPools) ?? []\n  const updateSavedPools = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistPool({ address }))\n    },\n    [dispatch],\n  )\n  return [savedPools, updateSavedPools]\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nexport const MAX_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype LotteriesWhere = { id_in?: string[] }\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  // Populate all nodeRound data with supplementary graphResponse round data when available\n  const nodeRoundsWithGraphData = nodeData.map((nodeRoundData) => {\n    const graphRoundData = graphResponse.find((graphResponseRound) => graphResponseRound.id === nodeRoundData.lotteryId)\n    return {\n      endTime: nodeRoundData.endTime,\n      finalNumber: nodeRoundData.finalNumber.toString(),\n      startTime: nodeRoundData.startTime,\n      status: nodeRoundData.status,\n      id: nodeRoundData.lotteryId,\n      ticketPrice: graphRoundData?.ticketPrice,\n      totalTickets: graphRoundData?.totalTickets,\n      totalUsers: graphRoundData?.totalUsers,\n      winningTickets: graphRoundData?.winningTickets,\n    }\n  })\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = graphResponse\n    .map((graphRound) => graphRound?.id)\n    .indexOf(lastCombinedDataRound?.id)\n\n  const remainingSubgraphRounds = graphResponse ? graphResponse.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteries = async (\n  first = MAX_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: LotteriesWhere = {},\n): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries($first: Int!, $skip: Int!, $where: Lottery_filter) {\n          lotteries(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n      { skip, first, where },\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","import { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from 'hooks/useRefresh'\nimport { deserializeToken } from 'state/user/hooks/helpers'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, SerializedFarm, DeserializedFarmUserData, DeserializedFarm, DeserializedFarmsState } from '../types'\n\nconst deserializeFarmUserData = (farm: SerializedFarm): DeserializedFarmUserData => {\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\nconst deserializeFarm = (farm: SerializedFarm): DeserializedFarm => {\n  const { lpAddresses, lpSymbol, pid, dual, multiplier, isCommunity, quoteTokenPriceBusd, tokenPriceBusd } = farm\n\n  return {\n    lpAddresses,\n    lpSymbol,\n    pid,\n    dual,\n    multiplier,\n    isCommunity,\n    quoteTokenPriceBusd,\n    tokenPriceBusd,\n    token: deserializeToken(farm.token),\n    quoteToken: deserializeToken(farm.quoteToken),\n    userData: deserializeFarmUserData(farm),\n    tokenAmountTotal: farm.tokenAmountTotal ? new BigNumber(farm.tokenAmountTotal) : BIG_ZERO,\n    lpTotalInQuoteToken: farm.lpTotalInQuoteToken ? new BigNumber(farm.lpTotalInQuoteToken) : BIG_ZERO,\n    lpTotalSupply: farm.lpTotalSupply ? new BigNumber(farm.lpTotalSupply) : BIG_ZERO,\n    tokenPriceVsQuote: farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO,\n    poolWeight: farm.poolWeight ? new BigNumber(farm.poolWeight) : BIG_ZERO,\n  }\n}\n\nexport const usePollFarmsPublicData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n  }, [includeArchive, dispatch, slowRefresh])\n}\n\nexport const usePollFarmsWithUserData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([251, 252]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): DeserializedFarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  const deserializedFarmsData = farms.data.map(deserializeFarm)\n  const { loadArchivedFarmsData, userDataLoaded } = farms\n  return {\n    loadArchivedFarmsData,\n    userDataLoaded,\n    data: deserializedFarmsData,\n  }\n}\n\nexport const useFarmFromPid = (pid: number): DeserializedFarm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return deserializeFarm(farm)\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): DeserializedFarm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return deserializeFarm(farm)\n}\n\nexport const useFarmUser = (pid): DeserializedFarmUserData => {\n  const { userData } = useFarmFromPid(pid)\n  const { allowance, tokenBalance, stakedBalance, earnings } = userData\n  return {\n    allowance,\n    tokenBalance,\n    stakedBalance,\n    earnings,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.tokenPriceBusd)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply.gt(0) && farm.lpTotalInQuoteToken.gt(0)) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(farm.lpTotalSupply)\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(251)\n\n  const cakePriceBusdAsString = cakeBnbFarm.tokenPriceBusd\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { SerializedToken } from 'config/constants/types'\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport enum FarmStakedOnly {\n  ON_FINISHED = 'onFinished',\n  TRUE = 'true',\n  FALSE = 'false',\n}\n\nexport enum ViewMode {\n  TABLE = 'TABLE',\n  CARD = 'CARD',\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\n  'user/updateUserFarmStakedOnly',\n)\nexport const updateUserPoolStakedOnly = createAction<{ userPoolStakedOnly: boolean }>('user/updateUserPoolStakedOnly')\nexport const updateUserPoolsViewMode = createAction<{ userPoolsViewMode: ViewMode }>('user/updateUserPoolsViewMode')\nexport const updateUserFarmsViewMode = createAction<{ userFarmsViewMode: ViewMode }>('user/updateUserFarmsViewMode')\nexport const updateUserPredictionAcceptedRisk = createAction<{ userAcceptedRisk: boolean }>(\n  'user/updateUserPredictionAcceptedRisk',\n)\nexport const updateUserPredictionChartDisclaimerShow = createAction<{ userShowDisclaimer: boolean }>(\n  'user/updateUserPredictionChartDisclaimerShow',\n)\nexport const updateUserExpertModeAcknowledgementShow = createAction<{ userExpertModeAcknowledgementShow: boolean }>(\n  'user/updateUserExpertModeAcknowledgementShow',\n)\nexport const updateUserUsernameVisibility = createAction<{ userUsernameVisibility: boolean }>(\n  'user/updateUserUsernameVisibility',\n)\nexport const updateGasPrice = createAction<{ gasPrice: string }>('user/updateGasPrice')\n\nexport const addWatchlistToken = createAction<{ address: string }>('user/addWatchlistToken')\nexport const addWatchlistPool = createAction<{ address: string }>('user/addWatchlistPool')\n\nexport const hidePhishingWarningBanner = createAction<void>('user/hidePhishingWarningBanner')\n\nexport const setIsExchangeChartDisplayed = createAction<boolean>('user/toggleIsExchangeChartDisplayed')\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setProvider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setProvider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n  // @ts-ignore\n  return { library: provider, chainId: chainId ?? parseInt(window.SO_LotteryConfig.chainId, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { ChainId, Currency, currencyEquals, JSBI, Price } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport tokens, { mainnetTokens } from 'config/constants/tokens'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst BUSD_MAINNET = mainnetTokens.busd\nconst { wbnb: WBNB } = tokens\n\n/**\n * Returns the price in BUSD of the input currency\n * @param currency currency to compute the BUSD price of\n */\nexport default function useBUSDPrice(currency?: Currency): Price | undefined {\n  const { chainId } = useActiveWeb3React()\n  const wrapped = wrappedCurrency(currency, chainId)\n  const tokenPairs: [Currency | undefined, Currency | undefined][] = useMemo(\n    () => [\n      [chainId && wrapped && currencyEquals(WBNB, wrapped) ? undefined : currency, chainId ? WBNB : undefined],\n      [wrapped?.equals(BUSD_MAINNET) ? undefined : wrapped, chainId === ChainId.MAINNET ? BUSD_MAINNET : undefined],\n      [chainId ? WBNB : undefined, chainId === ChainId.MAINNET ? BUSD_MAINNET : undefined],\n    ],\n    [chainId, currency, wrapped],\n  )\n  const [[ethPairState, ethPair], [busdPairState, busdPair], [busdEthPairState, busdEthPair]] = usePairs(tokenPairs)\n\n  return useMemo(() => {\n    if (!currency || !wrapped || !chainId) {\n      return undefined\n    }\n    // handle weth/eth\n    if (wrapped.equals(WBNB)) {\n      if (busdPair) {\n        const price = busdPair.priceOf(WBNB)\n        return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator)\n      }\n      return undefined\n    }\n    // handle busd\n    if (wrapped.equals(BUSD_MAINNET)) {\n      return new Price(BUSD_MAINNET, BUSD_MAINNET, '1', '1')\n    }\n\n    const ethPairETHAmount = ethPair?.reserveOf(WBNB)\n    const ethPairETHBUSDValue: JSBI =\n      ethPairETHAmount && busdEthPair ? busdEthPair.priceOf(WBNB).quote(ethPairETHAmount).raw : JSBI.BigInt(0)\n\n    // all other tokens\n    // first try the busd pair\n    if (\n      busdPairState === PairState.EXISTS &&\n      busdPair &&\n      busdPair.reserveOf(BUSD_MAINNET).greaterThan(ethPairETHBUSDValue)\n    ) {\n      const price = busdPair.priceOf(wrapped)\n      return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator)\n    }\n    if (ethPairState === PairState.EXISTS && ethPair && busdEthPairState === PairState.EXISTS && busdEthPair) {\n      if (busdEthPair.reserveOf(BUSD_MAINNET).greaterThan('0') && ethPair.reserveOf(WBNB).greaterThan('0')) {\n        const ethBusdPrice = busdEthPair.priceOf(BUSD_MAINNET)\n        const currencyEthPrice = ethPair.priceOf(WBNB)\n        const busdPrice = ethBusdPrice.multiply(currencyEthPrice).invert()\n        return new Price(currency, BUSD_MAINNET, busdPrice.denominator, busdPrice.numerator)\n      }\n    }\n\n    return undefined\n  }, [chainId, currency, ethPair, ethPairState, busdEthPair, busdEthPairState, busdPair, busdPairState, wrapped])\n}\n\nexport const useCakeBusdPrice = (): Price | undefined => {\n  const cakeBusdPrice = useBUSDPrice(tokens.cake)\n  return cakeBusdPrice\n}\n\nexport const useBNBBusdPrice = (): Price | undefined => {\n  const bnbBusdPrice = useBUSDPrice(tokens.wbnb)\n  return bnbBusdPrice\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { useCakeBusdPrice } from 'hooks/useBUSDPrice'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport const PageMeta: React.FC<{ symbol?: string }> = ({ symbol }) => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = useCakeBusdPrice()\n  const cakePriceUsdDisplay = cakePriceUsd ? `$${cakePriceUsd.toFixed(3)}` : '...'\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  let pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n  if (symbol) {\n    pageTitle = [symbol, title].join(' - ')\n  }\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\ninterface PageProps extends React.HTMLAttributes<HTMLDivElement> {\n  symbol?: string\n}\n\nconst Page: React.FC<PageProps> = ({ children, symbol, ...props }) => {\n  return (\n    <>\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    // @ts-ignore\n    const chainId = parseInt(window.SO_LotteryConfig.chainId, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { useCallback } from 'react'\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { resetUserNftState } from '../state/nftMarket/reducer'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { chainId, activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    dispatch(resetUserNftState())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n    window.localStorage.removeItem(connectorLocalStorageKey)\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }, [deactivate, dispatch, chainId])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport tokens from 'config/constants/tokens'\nimport * as token from 'config/constants/tokens.lottery'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getBunnySpecialLotteryAddress,\n  getFarmAuctionAddress,\n  getAnniversaryAchievement,\n  getNftMarketAddress,\n  getNftSaleAddress,\n  getPancakeSquadAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport bunnySpecialLotteryAbi from 'config/abi/bunnySpecialLottery.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport anniversaryAchievementAbi from 'config/abi/anniversaryAchievement.json'\nimport nftMarketAbi from 'config/abi/nftMarket.json'\nimport nftSaleAbi from 'config/abi/nftSale.json'\nimport pancakeSquadAbi from 'config/abi/pancakeSquad.json'\nimport erc721CollectionAbi from 'config/abi/erc721collection.json'\nimport { ChainLinkOracleContract, FarmAuctionContract, PancakeProfileContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, token.info().address, signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer) as PancakeProfileContract\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\nexport const getBunnySpecialLotteryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialLotteryAbi, getBunnySpecialLotteryAddress(), signer)\n}\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\n}\nexport const getAnniversaryAchievementContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(anniversaryAchievementAbi, getAnniversaryAchievement(), signer)\n}\nexport const getNftMarketContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(nftMarketAbi, getNftMarketAddress(), signer)\n}\nexport const getNftSaleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(nftSaleAbi, getNftSaleAddress(), signer)\n}\nexport const getPancakeSquadContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeSquadAbi, getPancakeSquadAddress(), signer)\n}\nexport const getErc721CollectionContract = (signer?: ethers.Signer | ethers.providers.Provider, address?: string) => {\n  return getContract(erc721CollectionAbi, address, signer)\n}\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    // @ts-ignore\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return includes a boolean whether the call was successful e.g. [wasSuccessful, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  if (true) return multicall(abi, calls)\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const API_PROFILE = process.env.REACT_APP_API_PROFILE\nexport const API_NFT = process.env.REACT_APP_API_NFT\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\n\n/**\n * V1 will be deprecated but is still used to claim old rounds\n */\nexport const GRAPH_API_PREDICTION_V1 = 'https://api.thegraph.com/subgraphs/name/pancakeswap/prediction'\n\nexport const INFO_CLIENT = 'https://bsc.streamingfast.io/subgraphs/name/pancakeswap/exchange-v2'\nexport const BLOCKS_CLIENT = 'https://api.thegraph.com/subgraphs/name/pancakeswap/blocks'\nexport const GRAPH_API_NFTMARKET = process.env.REACT_APP_GRAPH_API_NFT_MARKET\n","import { request, gql } from 'graphql-request'\nimport { stringify } from 'qs'\nimport { GRAPH_API_NFTMARKET, API_NFT } from 'config/constants/endpoints'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { ethers } from 'ethers'\nimport map from 'lodash/map'\nimport { uniq } from 'lodash'\nimport { pancakeBunniesAddress } from 'views/Nft/market/constants'\nimport {\n  TokenMarketData,\n  ApiCollections,\n  TokenIdWithCollectionAddress,\n  NftToken,\n  NftLocation,\n  Collection,\n  ApiResponseCollectionTokens,\n  ApiResponseSpecificToken,\n  ApiCollection,\n  CollectionMarketDataBaseFields,\n  Transaction,\n  AskOrder,\n  ApiSingleTokenData,\n  NftAttribute,\n  ApiTokenFilterResponse,\n  ApiCollectionsResponse,\n} from './types'\nimport { getBaseNftFields, getBaseTransactionFields, getCollectionBaseFields } from './queries'\n\n/**\n * API HELPERS\n */\n\n/**\n * Fetch static data from all collections using the API\n * @returns\n */\nexport const getCollectionsApi = async (): Promise<ApiCollectionsResponse> => {\n  const res = await fetch(`${API_NFT}/collections`)\n  if (res.ok) {\n    const json = await res.json()\n    return json\n  }\n  console.error('Failed to fetch NFT collections', res.statusText)\n  return null\n}\n\n/**\n * Fetch static data from a collection using the API\n * @returns\n */\nexport const getCollectionApi = async (collectionAddress: string): Promise<ApiCollection> => {\n  const res = await fetch(`${API_NFT}/collections/${collectionAddress}`)\n  if (res.ok) {\n    const json = await res.json()\n    return json.data\n  }\n  console.error(`API: Failed to fetch NFT collection ${collectionAddress}`, res.statusText)\n  return null\n}\n\n/**\n * Fetch static data for all nfts in a collection using the API\n * @param collectionAddress\n * @param size\n * @param page\n * @returns\n */\nexport const getNftsFromCollectionApi = async (\n  collectionAddress: string,\n  size = 100,\n  page = 1,\n): Promise<ApiResponseCollectionTokens> => {\n  const isPBCollection = collectionAddress.toLowerCase() === pancakeBunniesAddress.toLowerCase()\n  const requestPath = `${API_NFT}/collections/${collectionAddress}/tokens${\n    !isPBCollection ? `?page=${page}&size=${size}` : ``\n  }`\n\n  const res = await fetch(requestPath)\n  if (res.ok) {\n    const data = await res.json()\n    return data\n  }\n  console.error(`API: Failed to fetch NFT tokens for ${collectionAddress} collection`, res.statusText)\n  return null\n}\n\n/**\n * Fetch a single NFT using the API\n * @param collectionAddress\n * @param tokenId\n * @returns NFT from API\n */\nexport const getNftApi = async (\n  collectionAddress: string,\n  tokenId: string,\n): Promise<ApiResponseSpecificToken['data']> => {\n  const res = await fetch(`${API_NFT}/collections/${collectionAddress}/tokens/${tokenId}`)\n  if (res.ok) {\n    const json = await res.json()\n    return json.data\n  }\n\n  console.error(`API: Can't fetch NFT token ${tokenId} in ${collectionAddress}`, res.status)\n  return null\n}\n\n/**\n * Fetch a list of NFT from different collections\n * @param from Array of { collectionAddress: string; tokenId: string }\n * @returns Array of NFT from API\n */\nexport const getNftsFromDifferentCollectionsApi = async (\n  from: { collectionAddress: string; tokenId: string }[],\n): Promise<NftToken[]> => {\n  const promises = from.map((nft) => getNftApi(nft.collectionAddress, nft.tokenId))\n  const responses = await Promise.all(promises)\n  // Sometimes API can't find some tokens (e.g. 404 response)\n  // at least return the ones that returned successfully\n  return responses\n    .filter((resp) => resp)\n    .map((res, index) => ({\n      tokenId: res.tokenId,\n      name: res.name,\n      collectionName: res.collection.name,\n      collectionAddress: from[index].collectionAddress,\n      description: res.description,\n      attributes: res.attributes,\n      createdAt: res.createdAt,\n      updatedAt: res.updatedAt,\n      image: {\n        original: res.image?.original,\n        thumbnail: res.image?.thumbnail,\n      },\n    }))\n}\n\n/**\n * SUBGRAPH HELPERS\n */\n\n/**\n * Fetch market data from a collection using the Subgraph\n * @returns\n */\nexport const getCollectionSg = async (collectionAddress: string): Promise<CollectionMarketDataBaseFields> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getCollectionData($collectionAddress: String!) {\n          collection(id: $collectionAddress) {\n            ${getCollectionBaseFields()}\n          }\n        }\n      `,\n      { collectionAddress: collectionAddress.toLowerCase() },\n    )\n    return res.collection\n  } catch (error) {\n    console.error('Failed to fetch collection', error)\n    return null\n  }\n}\n\n/**\n * Fetch market data from all collections using the Subgraph\n * @returns\n */\nexport const getCollectionsSg = async (): Promise<CollectionMarketDataBaseFields[]> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        {\n          collections {\n            ${getCollectionBaseFields()}\n          }\n        }\n      `,\n    )\n    return res.collections\n  } catch (error) {\n    console.error('Failed to fetch NFT collections', error)\n    return []\n  }\n}\n\n/**\n * Fetch market data for nfts in a collection using the Subgraph\n * @param collectionAddress\n * @param first\n * @param skip\n * @returns\n */\nexport const getNftsFromCollectionSg = async (\n  collectionAddress: string,\n  first = 1000,\n  skip = 0,\n): Promise<TokenMarketData[]> => {\n  // Squad to be sorted by tokenId as this matches the order of the paginated API return. For PBs - get the most recent,\n  const isPBCollection = collectionAddress.toLowerCase() === pancakeBunniesAddress.toLowerCase()\n\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getNftCollectionMarketData($collectionAddress: String!) {\n          collection(id: $collectionAddress) {\n            id\n            nfts(orderBy:${isPBCollection ? 'updatedAt' : 'tokenId'}, skip: $skip, first: $first) {\n             ${getBaseNftFields()}\n            }\n          }\n        }\n      `,\n      { collectionAddress: collectionAddress.toLowerCase(), skip, first },\n    )\n    return res.collection.nfts\n  } catch (error) {\n    console.error('Failed to fetch NFTs from collection', error)\n    return []\n  }\n}\n\n/**\n * Fetch market data for PancakeBunnies NFTs by bunny id using the Subgraph\n * @param bunnyId - bunny id to query\n * @param existingTokenIds - tokens that are already loaded into redux\n * @returns\n */\nexport const getNftsByBunnyIdSg = async (\n  bunnyId: string,\n  existingTokenIds: string[],\n  orderDirection: 'asc' | 'desc',\n): Promise<TokenMarketData[]> => {\n  try {\n    const where =\n      existingTokenIds.length > 0\n        ? { otherId: bunnyId, isTradable: true, tokenId_not_in: existingTokenIds }\n        : { otherId: bunnyId, isTradable: true }\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getNftsByBunnyIdSg($collectionAddress: String!, $where: NFT_filter, $orderDirection: String!) {\n          nfts(first: 30, where: $where, orderBy: currentAskPrice, orderDirection: $orderDirection) {\n            ${getBaseNftFields()}\n          }\n        }\n      `,\n      {\n        collectionAddress: pancakeBunniesAddress.toLowerCase(),\n        where,\n        orderDirection,\n      },\n    )\n    return res.nfts\n  } catch (error) {\n    console.error(`Failed to fetch collection NFTs for bunny id ${bunnyId}`, error)\n    return []\n  }\n}\n\n/**\n * Fetch market data for PancakeBunnies NFTs by bunny id using the Subgraph\n * @param bunnyId - bunny id to query\n * @param existingTokenIds - tokens that are already loaded into redux\n * @returns\n */\nexport const getMarketDataForTokenIds = async (\n  collectionAddress: string,\n  existingTokenIds: string[],\n): Promise<TokenMarketData[]> => {\n  try {\n    if (existingTokenIds.length === 0) {\n      return []\n    }\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getMarketDataForTokenIds($collectionAddress: String!, $where: NFT_filter) {\n          collection(id: $collectionAddress) {\n            id\n            nfts(first: 1000, where: $where) {\n              ${getBaseNftFields()}\n            }\n          }\n        }\n      `,\n      {\n        collectionAddress: collectionAddress.toLowerCase(),\n        where: { tokenId_in: existingTokenIds },\n      },\n    )\n    return res.collection.nfts\n  } catch (error) {\n    console.error(`Failed to fetch market data for NFTs stored tokens`, error)\n    return []\n  }\n}\n\nexport const getNftsMarketData = async (\n  where = {},\n  first = 1000,\n  orderBy = 'id',\n  orderDirection: 'asc' | 'desc' = 'desc',\n  skip = 0,\n): Promise<TokenMarketData[]> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getNftsMarketData($first: Int, $skip: Int!, $where: NFT_filter, $orderBy: NFT_orderBy, $orderDirection: OrderDirection) {\n          nfts(where: $where, first: $first, orderBy: $orderBy, orderDirection: $orderDirection, skip: $skip) {\n            ${getBaseNftFields()}\n            transactionHistory {\n              ${getBaseTransactionFields()}\n            }\n          }\n        }\n      `,\n      { where, first, skip, orderBy, orderDirection },\n    )\n\n    return res.nfts\n  } catch (error) {\n    console.error('Failed to fetch NFTs market data', error)\n    return []\n  }\n}\n\nexport const getAllPancakeBunniesLowestPrice = async (bunnyIds: string[]): Promise<Record<string, number>> => {\n  try {\n    const singlePancakeBunnySubQueries = bunnyIds.map(\n      (\n        bunnyId,\n      ) => `b${bunnyId}:nfts(first: 1, where: { otherId: ${bunnyId}, isTradable: true }, orderBy: currentAskPrice, orderDirection: asc) {\n        currentAskPrice\n      }\n    `,\n    )\n    const rawResponse: Record<string, { currentAskPrice: string }[]> = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getAllPancakeBunniesLowestPrice {\n          ${singlePancakeBunnySubQueries}\n        }\n      `,\n    )\n    return Object.keys(rawResponse).reduce((lowestPricesData, subQueryKey) => {\n      const bunnyId = subQueryKey.split('b')[1]\n      return {\n        ...lowestPricesData,\n        [bunnyId]:\n          rawResponse[subQueryKey].length > 0 ? parseFloat(rawResponse[subQueryKey][0].currentAskPrice) : Infinity,\n      }\n    }, {})\n  } catch (error) {\n    console.error('Failed to fetch PancakeBunnies lowest prices', error)\n    return {}\n  }\n}\n\nexport const getAllPancakeBunniesRecentUpdatedAt = async (bunnyIds: string[]): Promise<Record<string, number>> => {\n  try {\n    const singlePancakeBunnySubQueries = bunnyIds.map(\n      (\n        bunnyId,\n      ) => `b${bunnyId}:nfts(first: 1, where: { otherId: ${bunnyId}, isTradable: true }, orderBy: updatedAt, orderDirection: desc) {\n        updatedAt\n      }\n    `,\n    )\n    const rawResponse: Record<string, { updatedAt: string }[]> = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getAllPancakeBunniesLowestPrice {\n          ${singlePancakeBunnySubQueries}\n        }\n      `,\n    )\n    return Object.keys(rawResponse).reduce((updatedAtData, subQueryKey) => {\n      const bunnyId = subQueryKey.split('b')[1]\n      return {\n        ...updatedAtData,\n        [bunnyId]: rawResponse[subQueryKey].length > 0 ? Number(rawResponse[subQueryKey][0].updatedAt) : -Infinity,\n      }\n    }, {})\n  } catch (error) {\n    console.error('Failed to fetch PancakeBunnies latest market updates', error)\n    return {}\n  }\n}\n\n/**\n * Returns the lowest price of any NFT in a collection\n */\nexport const getLowestPriceInCollection = async (collectionAddress: string) => {\n  try {\n    const response = await getNftsMarketData(\n      { collection: collectionAddress.toLowerCase(), isTradable: true },\n      1,\n      'currentAskPrice',\n      'asc',\n    )\n\n    if (response.length === 0) {\n      return 0\n    }\n\n    const [nftSg] = response\n    return parseFloat(nftSg.currentAskPrice)\n  } catch (error) {\n    console.error(`Failed to lowest price NFTs in collection ${collectionAddress}`, error)\n    return 0\n  }\n}\n\n/**\n * Fetch user trading data for buyTradeHistory, sellTradeHistory and askOrderHistory from the Subgraph\n * @param where a User_filter where condition\n * @returns a UserActivity object\n */\nexport const getUserActivity = async (\n  address: string,\n): Promise<{ askOrderHistory: AskOrder[]; buyTradeHistory: Transaction[]; sellTradeHistory: Transaction[] }> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getUserActivity($address: String!) {\n          user(id: $address) {\n            buyTradeHistory(first: 250, orderBy: timestamp, orderDirection: desc) {\n              ${getBaseTransactionFields()}\n              nft {\n                ${getBaseNftFields()}\n              }\n            }\n            sellTradeHistory(first: 250, orderBy: timestamp, orderDirection: desc) {\n              ${getBaseTransactionFields()}\n              nft {\n                ${getBaseNftFields()}\n              }\n            }\n            askOrderHistory(first: 500, orderBy: timestamp, orderDirection: desc) {\n              id\n              block\n              timestamp\n              orderType\n              askPrice\n              nft {\n                ${getBaseNftFields()}\n              }\n            }\n          }\n        }\n      `,\n      { address },\n    )\n\n    return res.user || { askOrderHistory: [], buyTradeHistory: [], sellTradeHistory: [] }\n  } catch (error) {\n    console.error('Failed to fetch user Activity', error)\n    return {\n      askOrderHistory: [],\n      buyTradeHistory: [],\n      sellTradeHistory: [],\n    }\n  }\n}\n\n/**\n * Get the most recently listed NFTs\n * @param first Number of nfts to retrieve\n * @returns NftTokenSg[]\n */\nexport const getLatestListedNfts = async (first: number): Promise<TokenMarketData[]> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getLatestNftMarketData($first: Int) {\n          nfts(where: { isTradable: true }, orderBy: updatedAt , orderDirection: desc, first: $first) {\n            ${getBaseNftFields()}\n            collection {\n              id\n            }\n          }\n        }\n      `,\n      { first },\n    )\n\n    return res.nfts\n  } catch (error) {\n    console.error('Failed to fetch NFTs market data', error)\n    return []\n  }\n}\n\n/**\n * Filter NFTs from a collection\n * @param collectionAddress\n * @returns\n */\nexport const fetchNftsFiltered = async (\n  collectionAddress: string,\n  filters: Record<string, string | number>,\n): Promise<ApiTokenFilterResponse> => {\n  const res = await fetch(`${API_NFT}/collections/${collectionAddress}/filter?${stringify(filters)}`)\n\n  if (res.ok) {\n    const data = await res.json()\n    return data\n  }\n\n  console.error(`API: Failed to fetch NFT collection ${collectionAddress}`, res.statusText)\n  return null\n}\n\n/**\n * OTHER HELPERS\n */\n\nexport const getMetadataWithFallback = (apiMetadata: ApiResponseCollectionTokens['data'], bunnyId: string) => {\n  // The fallback is just for the testnet where some bunnies don't exist\n  return (\n    apiMetadata[bunnyId] ?? {\n      name: '',\n      description: '',\n      collection: { name: 'Pancake Bunnies' },\n      image: {\n        original: '',\n        thumbnail: '',\n      },\n    }\n  )\n}\n\nexport const getPancakeBunniesAttributesField = (bunnyId: string) => {\n  // Generating attributes field that is not returned by API\n  // but can be \"faked\" since objects are keyed with bunny id\n  return [\n    {\n      traitType: 'bunnyId',\n      value: bunnyId,\n      displayType: null,\n    },\n  ]\n}\n\nexport const combineApiAndSgResponseToNftToken = (\n  apiMetadata: ApiSingleTokenData,\n  marketData: TokenMarketData,\n  attributes: NftAttribute[],\n) => {\n  return {\n    tokenId: marketData.tokenId,\n    name: apiMetadata.name,\n    description: apiMetadata.description,\n    collectionName: apiMetadata.collection.name,\n    collectionAddress: pancakeBunniesAddress,\n    image: apiMetadata.image,\n    marketData,\n    attributes,\n  }\n}\n\nexport const fetchWalletTokenIdsForCollections = async (\n  account: string,\n  collections: ApiCollections,\n): Promise<TokenIdWithCollectionAddress[]> => {\n  const walletNftPromises = map(collections, async (collection): Promise<TokenIdWithCollectionAddress[]> => {\n    const { address: collectionAddress } = collection\n    const contract = getErc721Contract(collectionAddress)\n    let balanceOfResponse\n\n    try {\n      balanceOfResponse = await contract.balanceOf(account)\n    } catch (e) {\n      console.error(e)\n      return []\n    }\n\n    const balanceOf = balanceOfResponse.toNumber()\n\n    // User has no NFTs for this collection\n    if (balanceOfResponse.eq(0)) {\n      return []\n    }\n\n    const getTokenId = async (index: number) => {\n      try {\n        const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n        const tokenId = tokenIdBn.toString()\n        return tokenId\n      } catch (error) {\n        console.error('getTokenIdAndData', error)\n        return null\n      }\n    }\n\n    const tokenIdPromises = []\n\n    // For each index get the tokenId\n    for (let i = 0; i < balanceOf; i++) {\n      tokenIdPromises.push(getTokenId(i))\n    }\n\n    const tokenIds = await Promise.all(tokenIdPromises)\n    const nftLocation = NftLocation.WALLET\n    const tokensWithCollectionAddress = tokenIds.map((tokenId) => {\n      return { tokenId, collectionAddress, nftLocation }\n    })\n\n    return tokensWithCollectionAddress\n  })\n\n  const walletNfts = await Promise.all(walletNftPromises)\n  return walletNfts.flat()\n}\n\n/**\n * Helper to combine data from the collections' API and subgraph\n */\nexport const combineCollectionData = (\n  collectionApiData: ApiCollection[],\n  collectionSgData: CollectionMarketDataBaseFields[],\n): Record<string, Collection> => {\n  const collectionsMarketObj: Record<string, CollectionMarketDataBaseFields> = collectionSgData.reduce(\n    (prev, current) => ({ ...prev, [current.id]: { ...current } }),\n    {},\n  )\n\n  return collectionApiData.reduce((accum, current) => {\n    const collectionMarket = collectionsMarketObj[current.address.toLowerCase()]\n    const collection: Collection = {\n      ...current,\n      ...collectionMarket,\n    }\n\n    if (current.name) {\n      collection.name = current.name\n    }\n\n    return {\n      ...accum,\n      [current.address]: collection,\n    }\n  }, {})\n}\n\n/**\n * Evaluate whether a market NFT is in a users wallet, their profile picture, or on sale\n * @param tokenId string\n * @param tokenIdsInWallet array of tokenIds in wallet\n * @param tokenIdsForSale array of tokenIds on sale\n * @param profileNftId Optional tokenId of users' profile picture\n * @returns NftLocation enum value\n */\nexport const getNftLocationForMarketNft = (\n  tokenId: string,\n  tokenIdsInWallet: string[],\n  tokenIdsForSale: string[],\n  profileNftId?: string,\n): NftLocation => {\n  if (tokenId === profileNftId) {\n    return NftLocation.PROFILE\n  }\n  if (tokenIdsForSale.includes(tokenId)) {\n    return NftLocation.FORSALE\n  }\n  if (tokenIdsInWallet.includes(tokenId)) {\n    return NftLocation.WALLET\n  }\n  console.error(`Cannot determine location for tokenID ${tokenId}, defaulting to NftLocation.WALLET`)\n  return NftLocation.WALLET\n}\n\n/**\n * Construct complete TokenMarketData entities with a users' wallet NFT ids and market data for their wallet NFTs\n * @param walletNfts TokenIdWithCollectionAddress\n * @param marketDataForWalletNfts TokenMarketData[]\n * @returns TokenMarketData[]\n */\nexport const attachMarketDataToWalletNfts = (\n  walletNfts: TokenIdWithCollectionAddress[],\n  marketDataForWalletNfts: TokenMarketData[],\n): TokenMarketData[] => {\n  const walletNftsWithMarketData = walletNfts.map((walletNft) => {\n    const marketData = marketDataForWalletNfts.find(\n      (marketNft) =>\n        marketNft.tokenId === walletNft.tokenId &&\n        marketNft.collection.id.toLowerCase() === walletNft.collectionAddress.toLowerCase(),\n    )\n    return (\n      marketData ?? {\n        tokenId: walletNft.tokenId,\n        collection: {\n          id: walletNft.collectionAddress.toLowerCase(),\n        },\n        nftLocation: walletNft.nftLocation,\n        metadataUrl: null,\n        transactionHistory: null,\n        currentSeller: null,\n        isTradable: null,\n        currentAskPrice: null,\n        latestTradedPriceInBNB: null,\n        tradeVolumeBNB: null,\n        totalTrades: null,\n        otherId: null,\n      }\n    )\n  })\n  return walletNftsWithMarketData\n}\n\n/**\n * Attach TokenMarketData and location to NftToken\n * @param nftsWithMetadata NftToken[] with API metadata\n * @param nftsForSale  market data for nfts that are on sale (i.e. not in a user's wallet)\n * @param walletNfts market data for nfts in a user's wallet\n * @param tokenIdsInWallet array of token ids in user's wallet\n * @param tokenIdsForSale array of token ids of nfts that are on sale\n * @param profileNftId profile picture token id\n * @returns NFT[]\n */\nexport const combineNftMarketAndMetadata = (\n  nftsWithMetadata: NftToken[],\n  nftsForSale: TokenMarketData[],\n  walletNfts: TokenMarketData[],\n  tokenIdsInWallet: string[],\n  tokenIdsForSale: string[],\n  profileNftId?: string,\n): NftToken[] => {\n  const completeNftData = nftsWithMetadata.map<NftToken>((nft) => {\n    // Get metadata object\n    const isOnSale = nftsForSale.filter((forSaleNft) => forSaleNft.tokenId === nft.tokenId).length > 0\n    let marketData\n    if (isOnSale) {\n      marketData = nftsForSale.find((marketNft) => marketNft.tokenId === nft.tokenId)\n    } else {\n      marketData = walletNfts.find((marketNft) => marketNft.tokenId === nft.tokenId)\n    }\n    const location = getNftLocationForMarketNft(nft.tokenId, tokenIdsInWallet, tokenIdsForSale, profileNftId)\n    return { ...nft, marketData, location }\n  })\n  return completeNftData\n}\n\n/**\n * Get in-wallet, on-sale & profile pic NFT metadata, complete with market data for a given account\n * @param account\n * @param collections\n * @param profileNftWithCollectionAddress\n * @returns Promise<NftToken[]>\n */\nexport const getCompleteAccountNftData = async (\n  account: string,\n  collections: ApiCollections,\n  profileNftWithCollectionAddress?: TokenIdWithCollectionAddress,\n): Promise<NftToken[]> => {\n  const walletNftIdsWithCollectionAddress = await fetchWalletTokenIdsForCollections(account, collections)\n  if (profileNftWithCollectionAddress?.tokenId) {\n    walletNftIdsWithCollectionAddress.unshift(profileNftWithCollectionAddress)\n  }\n\n  const uniqueCollectionAddresses = uniq(\n    walletNftIdsWithCollectionAddress.map((walletNftId) => walletNftId.collectionAddress),\n  )\n\n  const walletNftsByCollection = uniqueCollectionAddresses.map((collectionAddress) => {\n    return {\n      collectionAddress,\n      idWithCollectionAddress: walletNftIdsWithCollectionAddress.filter(\n        (walletNft) => walletNft.collectionAddress === collectionAddress,\n      ),\n    }\n  })\n\n  const walletMarketDataRequests = walletNftsByCollection.map((walletNftByCollection) => {\n    const tokenIdIn = walletNftByCollection.idWithCollectionAddress.map((walletNft) => walletNft.tokenId)\n    return getNftsMarketData({\n      tokenId_in: tokenIdIn,\n      collection: walletNftByCollection.collectionAddress.toLowerCase(),\n    })\n  })\n\n  const walletMarketDataResponses = await Promise.all(walletMarketDataRequests)\n  const walletMarketData = walletMarketDataResponses.flat()\n\n  const walletNftsWithMarketData = attachMarketDataToWalletNfts(walletNftIdsWithCollectionAddress, walletMarketData)\n\n  const walletTokenIds = walletNftIdsWithCollectionAddress\n    .filter((walletNft) => {\n      // Profile Pic NFT is no longer wanted in this array, hence the filter\n      return profileNftWithCollectionAddress?.tokenId !== walletNft.tokenId\n    })\n    .map((nft) => nft.tokenId)\n\n  const marketDataForSaleNfts = await getNftsMarketData({ currentSeller: account.toLowerCase() })\n  const tokenIdsForSale = marketDataForSaleNfts.map((nft) => nft.tokenId)\n\n  const forSaleNftIds = marketDataForSaleNfts.map((nft) => {\n    return { collectionAddress: nft.collection.id, tokenId: nft.tokenId }\n  })\n\n  const metadataForAllNfts = await getNftsFromDifferentCollectionsApi([\n    ...forSaleNftIds,\n    ...walletNftIdsWithCollectionAddress,\n  ])\n\n  const completeNftData = combineNftMarketAndMetadata(\n    metadataForAllNfts,\n    marketDataForSaleNfts,\n    walletNftsWithMarketData,\n    walletTokenIds,\n    tokenIdsForSale,\n    profileNftWithCollectionAddress?.tokenId,\n  )\n\n  return completeNftData\n}\n\n/**\n * Fetch distribution information for a collection\n * @returns\n */\nexport const getCollectionDistributionApi = async <T>(collectionAddress: string): Promise<T> => {\n  const res = await fetch(`${API_NFT}/collections/${collectionAddress}/distribution`)\n  if (res.ok) {\n    const data = await res.json()\n    return data\n  }\n  console.error(`API: Failed to fetch NFT collection ${collectionAddress} distribution`, res.statusText)\n  return null\n}\n","export const getBaseNftFields = () => `\n  tokenId\n  metadataUrl\n  currentAskPrice\n  currentSeller\n  latestTradedPriceInBNB\n  tradeVolumeBNB\n  totalTrades\n  isTradable\n  updatedAt\n  otherId\n  collection {\n    id\n  }\n`\n\nexport const getBaseTransactionFields = () => `\n  id\n  block\n  timestamp\n  askPrice\n  netPrice\n  withBNB\n  buyer {\n    id\n  }\n  seller {\n    id\n  }\n`\n\nexport const getCollectionBaseFields = () => `\n  id\n  name\n  symbol\n  active\n  totalTrades\n  totalVolumeBNB\n  numberTokensListed\n  creatorAddress\n  tradingFee\n  creatorFee\n  whitelistChecker\n`\n","import { BigNumberish } from 'ethers'\n\n// Collections -> Nfts -> Transactions\n// Users -> Nft tokens IDs\n\n// TODO: Handle the error state on the UI\nexport enum NFTMarketInitializationState {\n  UNINITIALIZED = 'UNINITIALIZED',\n  INITIALIZED = 'INITIALIZED',\n  ERROR = 'ERROR',\n}\n\nexport enum UserNftInitializationState {\n  UNINITIALIZED = 'UNINITIALIZED',\n  INITIALIZING = 'INITIALIZING',\n  INITIALIZED = 'INITIALIZED',\n  ERROR = 'ERROR',\n}\n\nexport enum NftFilterLoadingState {\n  IDLE = 'IDLE',\n  LOADING = 'LOADING',\n}\n\nexport interface State {\n  initializationState: NFTMarketInitializationState\n  data: {\n    collections: Record<string, Collection> // string is the address\n    nfts: Record<string, NftToken[]> // string is the collection address\n    filters: Record<string, NftFilter> // string is the collection address\n    loadingState: {\n      isUpdatingPancakeBunnies: boolean\n      latestPancakeBunniesUpdateAt: number\n    }\n    users: Record<string, User> // string is the address\n    user: UserNftsState\n  }\n}\n\nexport interface UserNftsState {\n  userNftsInitializationState: UserNftInitializationState\n  nfts: NftToken[]\n  activity: UserActivity\n}\n\nexport interface Transaction {\n  id: string\n  block: string\n  timestamp: string\n  askPrice: string\n  netPrice: string\n  buyer: { id: string }\n  seller: { id: string }\n  withBNB: boolean\n  nft?: TokenMarketData\n}\n\nexport enum AskOrderType {\n  NEW = 'NEW',\n  MODIFY = 'MODIFY',\n  CANCEL = 'CANCEL',\n}\n\nexport interface AskOrder {\n  id: string\n  block: string\n  timestamp: string\n  askPrice: string\n  orderType: AskOrderType\n  nft?: TokenMarketData\n}\n\nexport interface Image {\n  original: string\n  thumbnail: string\n  mp4?: string\n  webm?: string\n  gif?: string\n}\n\nexport enum NftLocation {\n  FORSALE = 'For Sale',\n  PROFILE = 'Profile Pic',\n  WALLET = 'In Wallet',\n}\n\n// Market data regarding specific token ID, acquired via subgraph\nexport interface TokenMarketData {\n  tokenId: string\n  metadataUrl: string\n  currentAskPrice: string\n  currentSeller: string\n  latestTradedPriceInBNB: string\n  tradeVolumeBNB: string\n  totalTrades: string\n  isTradable: boolean\n  otherId: string\n  collection?: {\n    id: string\n  }\n  updatedAt?: string\n  transactionHistory?: Transaction[]\n}\n\n// Represents single NFT token, either Squad-like NFT or single PancakeBunny.\nexport interface NftToken {\n  tokenId: string\n  name: string\n  description: string\n  collectionName: string\n  collectionAddress: string\n  image: Image\n  attributes?: NftAttribute[]\n  createdAt?: string // API createdAt\n  updatedAt?: string // API updatedAt\n  marketData?: TokenMarketData\n  location?: NftLocation\n  meta?: Record<string, string | number>\n}\n\nexport interface NftFilter {\n  loadingState: NftFilterLoadingState\n  activeFilters: Record<string, NftAttribute>\n  showOnlyOnSale: boolean\n  ordering: {\n    field: string\n    direction: 'asc' | 'desc'\n  }\n}\n\nexport interface TokenIdWithCollectionAddress {\n  collectionAddress: string\n  tokenId: string\n  nftLocation?: NftLocation\n}\n\nexport interface NftAttribute {\n  traitType: string\n  value: string | number\n  displayType: string\n}\n\n// Internal type used to refer to a collection\n// Most fields are populated from API (via ApiCollection type)\nexport interface Collection {\n  id: string\n  address: string\n  name: string\n  description?: string\n  symbol: string\n  active: boolean\n  totalVolumeBNB: string\n  numberTokensListed: string\n  tradingFee: string\n  creatorFee: string\n  owner: string\n  totalSupply: string\n  verified: boolean\n  avatar: string\n  banner: {\n    large: string\n    small: string\n  }\n  attributes?: NftAttribute[]\n}\n\nexport interface ApiCollections {\n  [key: string]: Collection\n}\n\nexport interface User {\n  address: string\n  numberTokensListed: BigNumberish\n  numberTokensPurchased: BigNumberish\n  numberTokensSold: BigNumberish\n  nfts: Record<string, BigNumberish> // String is an address, BigNumberish is a tokenID\n}\n\n/**\n * API RESPONSES\n */\n\nexport interface ApiCollection {\n  address: string\n  owner: string\n  name: string\n  description: string\n  symbol: string\n  totalSupply: string\n  verified: boolean\n  createdAt: string\n  updatedAt: string\n  avatar: string\n  banner: {\n    large: string\n    small: string\n  }\n  attributes?: NftAttribute[] // returned for specific collection but not for all collections\n}\n\n// Get all collections\n// ${API_NFT}/collections/\nexport interface ApiCollectionsResponse {\n  total: number\n  data: ApiCollection[]\n}\n\n// Get single collection\n// ${API_NFT}/collections/${collectionAddress}\nexport interface ApiSingleCollectionResponse {\n  data: ApiCollection\n}\n\n// Get single collection\n// ${API_NFT}/collections/${collectionAddress}\nexport interface ApiTokenFilterResponse {\n  total: number\n  data: Record<string, ApiSingleTokenData>\n}\n\nexport interface ApiSingleTokenData {\n  name: string\n  description: string\n  image: Image\n  collection: {\n    name: string\n  }\n  attributes?: NftAttribute[]\n  tokenId?: string\n}\n\n// Get tokens within collection\n// ${API_NFT}/collections/${collectionAddress}/tokens\nexport interface ApiResponseCollectionTokens {\n  total: number\n  attributesDistribution: Record<string, number>\n  data: Record<string, ApiSingleTokenData>\n}\n\n// Get specific token data\n// ${API_NFT}/collections/${collectionAddress}/tokens/${tokenId}\nexport interface ApiResponseSpecificToken {\n  data: {\n    tokenId: string\n    name: string\n    description: string\n    image: Image\n    createdAt: string\n    updatedAt: string\n    attributes: NftAttribute[]\n    collection: {\n      name: string\n    }\n  }\n}\n\n// ${API_NFT}/collections/${collectionAddress}/distribution\nexport interface ApiCollectionDistribution {\n  total: number\n  data: Record<string, Record<string, number>>\n}\n\nexport interface ApiCollectionDistributionPB {\n  total: number\n  data: Record<string, number>\n}\n\n/**\n * SUBGRAPH RESPONSES\n */\n\nexport interface CollectionMarketDataBaseFields {\n  id: string\n  name: string\n  symbol: string\n  active: boolean\n  totalTrades: string\n  totalVolumeBNB: string\n  numberTokensListed: string\n  creatorAddress: string\n  tradingFee: string\n  creatorFee: string\n  whitelistChecked: string\n}\n\nexport interface UserActivity {\n  askOrderHistory: AskOrder[]\n  buyTradeHistory: Transaction[]\n  sellTradeHistory: Transaction[]\n  initializationState: UserNftInitializationState\n}\n","import { Token } from '@pancakeswap/sdk'\nimport { SerializedToken } from 'config/constants/types'\nimport { parseUnits } from 'ethers/lib/utils'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n    projectLink: token.projectLink,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n    serializedToken.projectLink,\n  )\n}\n\nexport enum GAS_PRICE {\n  default = '5',\n  fast = '6',\n  instant = '7',\n  testnet = '10',\n}\n\nexport const GAS_PRICE_GWEI = {\n  default: parseUnits(GAS_PRICE.default, 'gwei').toString(),\n  fast: parseUnits(GAS_PRICE.fast, 'gwei').toString(),\n  instant: parseUnits(GAS_PRICE.instant, 'gwei').toString(),\n  testnet: parseUnits(GAS_PRICE.testnet, 'gwei').toString(),\n}\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  PANCAKE_TOP100,\n  PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useBlock } from 'state/block/hooks'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param currentBlock the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  currentBlock: number | undefined,\n): string[] {\n  if (!chainId || !currentBlock) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = currentBlock - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const { currentBlock } = useBlock()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, currentBlock)\n  }, [chainId, state.callResults, listeningKeys, currentBlock])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!currentBlock || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== currentBlock) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: currentBlock,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: currentBlock,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, currentBlock), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: currentBlock }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', currentBlock)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: currentBlock,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, currentBlock])\n\n  return null\n}\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport useToast from 'hooks/useToast'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  currentBlock: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = currentBlock - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const { currentBlock } = useBlock()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !currentBlock) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(currentBlock, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                t('Transaction receipt'),\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      {t('View on BscScan')}\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: currentBlock }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, currentBlock, dispatch, toastSuccess, toastError, t])\n\n  return null\n}\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { useEffect } from 'react'\n\nconst useUserAgent = () => {\n  useEffect(() => {\n    document.documentElement.setAttribute('data-useragent', navigator.userAgent)\n  }, [])\n}\n\nexport default useUserAgent\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import { useEffect } from 'react'\nimport history from 'routerHistory'\n\nconst useScrollOnRouteChange = () => {\n  useEffect(() => {\n    const unlisten = history.listen((args) => {\n      if (args.hash === '') {\n        setTimeout(() => {\n          window.scroll({\n            top: 0,\n            left: 0,\n            behavior: 'smooth',\n          })\n        }, 50)\n      }\n    })\n\n    return () => unlisten()\n  }, [])\n}\n\nexport default useScrollOnRouteChange\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <div>Loading...</div>\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import React, { lazy } from 'react'\nimport { Router, Route, Switch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport useUserAgent from 'hooks/useUserAgent'\nimport useScrollOnRouteChange from 'hooks/useScrollOnRouteChange'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport GlobalStyle from './style/Global'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport PageLoader from './components/Loader/PageLoader'\nimport history from './routerHistory'\nimport { ToastListener } from './contexts/ToastsContext'\nimport { StyleSheetManager } from 'styled-components'\n\nimport { useInactiveListener } from './hooks/useInactiveListener'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n  useScrollOnRouteChange()\n  useUserAgent()\n  useInactiveListener()\n\n  //  stylisPlugins={[stylisImportantPlugin]}\n  return (\n    <StyleSheetManager disableCSSOMInjection={true} target={document.getElementById('lottery-style-holder')}>\n      <Router history={history}>\n        <GlobalStyle />\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\">\n              <Lottery />\n            </Route>\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n        <ToastListener />\n        <DatePickerPortal />\n      </Router>\n    </StyleSheetManager>\n  )\n}\n\nexport default React.memo(App)\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { isAddress } from 'utils'\nimport { useAppDispatch } from 'state'\nimport usePreviousValue from 'hooks/usePreviousValue'\nimport { getAchievements } from 'state/achievements/helpers'\nimport { State, ProfileState, Achievement, ProfileAvatarFetchStatus } from '../types'\nimport { fetchProfile, fetchProfileAvatar, fetchProfileUsername } from '.'\nimport { getProfile, GetProfileResponse } from './helpers'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchProfile(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useProfileForAddress = (address: string) => {\n  const [profileState, setProfileState] = useState<{ profile: GetProfileResponse; isFetching: boolean }>({\n    profile: null,\n    isFetching: true,\n  })\n  const previousAddress = usePreviousValue(address)\n  const hasAddressChanged = previousAddress !== address\n\n  useEffect(() => {\n    const fetchProfileForAddress = async () => {\n      try {\n        const profile = await getProfile(address)\n        setProfileState({ profile, isFetching: false })\n      } catch (error) {\n        console.error(`Failed to fetch profile for address ${address}`, error)\n        setProfileState({ profile: null, isFetching: false })\n      }\n    }\n    if (hasAddressChanged || (!profileState.isFetching && !profileState.profile)) {\n      fetchProfileForAddress()\n    }\n  }, [profileState, address, hasAddressChanged])\n\n  // Clear state on account switch\n  useEffect(() => {\n    setProfileState({ profile: null, isFetching: true })\n  }, [address])\n\n  return profileState\n}\n\nexport const useAchievementsForAddress = (address: string) => {\n  const [state, setState] = useState<{ achievements: Achievement[]; isFetching: boolean }>({\n    achievements: [],\n    isFetching: false,\n  })\n  const previousAddress = usePreviousValue(address)\n  const hasAddressChanged = previousAddress !== address\n\n  useEffect(() => {\n    const fetchProfileForAddress = async () => {\n      setState({ achievements: [], isFetching: true })\n      try {\n        const achievements = await getAchievements(address)\n        setState({ achievements, isFetching: false })\n      } catch (error) {\n        console.error(`Failed to fetch achievements for address ${address}`, error)\n        setState({ achievements: [], isFetching: false })\n      }\n    }\n    if (hasAddressChanged || (!state.isFetching && !state.achievements)) {\n      fetchProfileForAddress()\n    }\n  }, [state, address, hasAddressChanged])\n\n  // Clear state on account switch\n  useEffect(() => {\n    setState({ achievements: [], isFetching: true })\n  }, [address])\n\n  return state\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\nexport const useGetProfileAvatar = (account: string) => {\n  const profileAvatar = useSelector((state: State) => state.profile.profileAvatars[account])\n  const { username, nft, hasRegistered, usernameFetchStatus, avatarFetchStatus } = profileAvatar || {}\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const address = isAddress(account)\n\n    if (!nft && avatarFetchStatus !== ProfileAvatarFetchStatus.FETCHED && address) {\n      dispatch(fetchProfileAvatar(account))\n    }\n\n    if (\n      !username &&\n      avatarFetchStatus === ProfileAvatarFetchStatus.FETCHED &&\n      usernameFetchStatus !== ProfileAvatarFetchStatus.FETCHED &&\n      address\n    ) {\n      dispatch(fetchProfileUsername({ account, hasRegistered }))\n    }\n  }, [account, nft, username, hasRegistered, avatarFetchStatus, usernameFetchStatus, dispatch])\n\n  return { username, nft, usernameFetchStatus, avatarFetchStatus }\n}\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { profileClear } from '../state/profile'\nimport { resetUserNftState } from '../state/nftMarket/reducer'\nimport { clearAllTransactions } from '../state/transactions/actions'\nimport { useAppDispatch } from '../state'\nimport { connectorsByName } from '../utils/web3React'\n\nexport const useInactiveListener = () => {\n  const { account, chainId, connector } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account && connector) {\n      const handleDeactivate = () => {\n        dispatch(profileClear())\n        dispatch(resetUserNftState())\n        // This localStorage key is set by @web3-react/walletconnect-connector\n        if (window.localStorage.getItem('walletconnect')) {\n          connectorsByName.walletconnect.close()\n          connectorsByName.walletconnect.walletConnectProvider = null\n        }\n        window.localStorage.removeItem(connectorLocalStorageKey)\n        if (chainId) {\n          dispatch(clearAllTransactions({ chainId }))\n        }\n      }\n\n      connector.addListener('Web3ReactDeactivate', handleDeactivate)\n\n      return () => {\n        connector.removeListener('Web3ReactDeactivate', handleDeactivate)\n      }\n    }\n    return undefined\n  }, [account, chainId, dispatch, connector])\n}\n","import React from 'react'\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  const [isDark] = useThemeManager()\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import BigNumber from 'bignumber.js'\nimport { Token } from '@pancakeswap/sdk'\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n  projectLink?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\ninterface FarmConfigBaseProps {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface SerializedFarmConfig extends FarmConfigBaseProps {\n  token: SerializedToken\n  quoteToken: SerializedToken\n}\n\nexport interface DeserializedFarmConfig extends FarmConfigBaseProps {\n  token: Token\n  quoteToken: Token\n}\n\ninterface PoolConfigBaseProps {\n  sousId: number\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport interface SerializedPoolConfig extends PoolConfigBaseProps {\n  earningToken: SerializedToken\n  stakingToken: SerializedToken\n}\n\nexport interface DeserializedPoolConfig extends PoolConfigBaseProps {\n  earningToken: Token\n  stakingToken: Token\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: string\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n\n// Farm Auction\nexport interface FarmAuctionBidderConfig {\n  account: string\n  farmName: string\n  tokenAddress: string\n  quoteToken: Token\n  tokenName: string\n  projectSite?: string\n  lpAddress?: string\n}\n\n// Note: this status is slightly different compared to 'status' comfing\n// from Farm Auction smart contract\nexport enum AuctionStatus {\n  ToBeAnnounced, // No specific dates/blocks to display\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\n  Open, // Auction is open for bids\n  Finished, // Auction end block is reached, bidding is not possible\n  Closed, // Auction was closed in smart contract\n}\n\nexport interface Auction {\n  id: number\n  status: AuctionStatus\n  startBlock: number\n  startDate: Date\n  endBlock: number\n  endDate: Date\n  auctionDuration: number\n  initialBidAmount: number\n  topLeaderboard: number\n  leaderboardThreshold: BigNumber\n}\n\nexport interface BidderAuction {\n  id: number\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface Bidder extends FarmAuctionBidderConfig {\n  position?: number\n  isTopPosition: boolean\n  samePositionAsAbove: boolean\n  amount: BigNumber\n}\n\nexport interface ConnectedBidder {\n  account: string\n  isWhitelisted: boolean\n  bidderData?: Bidder\n}\n","import { ChainId, JSBI, Percent, Token } from '@pancakeswap/sdk'\nimport { mainnetTokens, testnetTokens } from './tokens'\n\nexport const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [\n    mainnetTokens.wbnb,\n    mainnetTokens.cake,\n    mainnetTokens.busd,\n    mainnetTokens.usdt,\n    mainnetTokens.btcb,\n    mainnetTokens.ust,\n    mainnetTokens.eth,\n    mainnetTokens.usdc,\n  ],\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [mainnetTokens.busd, mainnetTokens.cake, mainnetTokens.btcb],\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [mainnetTokens.wbnb, mainnetTokens.dai, mainnetTokens.busd, mainnetTokens.usdt],\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [mainnetTokens.cake, mainnetTokens.wbnb],\n    [mainnetTokens.busd, mainnetTokens.usdt],\n    [mainnetTokens.dai, mainnetTokens.usdt],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { serializeTokens } from './tokens'\nimport { SerializedPoolConfig, PoolCategory } from './types'\n\nconst serializedTokens = serializeTokens()\n\nconst pools: SerializedPoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 1,\n    isFinished: false,\n  },\n  {\n    sousId: 240,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.zoo,\n    contractAddress: {\n      97: '',\n      56: '0x2EfE8772EB97B74be742d578A654AB6C95bF18db',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4516',\n  },\n  {\n    sousId: 239,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.sfund,\n    contractAddress: {\n      97: '',\n      56: '0x7F103689cabe17C2F70DA6faa298045d72a943b8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0311',\n  },\n  {\n    sousId: 238,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.qi,\n    contractAddress: {\n      97: '',\n      56: '0xbd52ef04DB1ad1c68A8FA24Fa71f2188978ba617',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.736',\n  },\n  {\n    sousId: 237,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.kart,\n    contractAddress: {\n      97: '',\n      56: '0x73bB10B89091f15e8FeD4d6e9EBa6415df6acb21',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1897',\n  },\n  {\n    sousId: 236,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.porto,\n    contractAddress: {\n      97: '',\n      56: '0xdD52FAB121376432DBCBb47592742F9d86CF8952',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0578',\n  },\n  {\n    sousId: 235,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dvi,\n    contractAddress: {\n      97: '',\n      56: '0x2b8751B7141Efa7a9917f9C6fea2CEA071af5eE7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.2516',\n  },\n  {\n    sousId: 234,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.jgn,\n    contractAddress: {\n      97: '',\n      56: '0xfDFb4DbE94916F9f55dBC2c14Ea8B3e386eCD9F9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.5233',\n  },\n  {\n    sousId: 233,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.eternal,\n    contractAddress: {\n      97: '',\n      56: '0xc28c400F2B675b25894FA632205ddec71E432288',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.002893',\n  },\n  {\n    sousId: 232,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.xwg,\n    contractAddress: {\n      97: '',\n      56: '0x79f5f7DDADeFa0A9e850DFFC4fBa77e5172Fe701',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.3379',\n  },\n  {\n    sousId: 231,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dar,\n    contractAddress: {\n      97: '',\n      56: '0x9b861A078B2583373A7a3EEf815bE1A39125Ae08',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.3148',\n  },\n  {\n    sousId: 230,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.fina,\n    contractAddress: {\n      97: '',\n      56: '0xa35caA9509a2337E22C54C929146D5F7f6515794',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.06944',\n  },\n  {\n    sousId: 229,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bmon,\n    contractAddress: {\n      97: '',\n      56: '0x6e63B2B96c77532ea7ec2B3D3BFA9C8e1d383f3C',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.0254',\n  },\n  {\n    sousId: 228,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dkt,\n    contractAddress: {\n      97: '',\n      56: '0xFef4B7a0194159d89717Efa592384d42B28D3926',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.09838',\n  },\n  {\n    sousId: 227,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ramp,\n    contractAddress: {\n      97: '',\n      56: '0x2D26e4b9a5F19eD5BB7AF221DC02432D31DEB4dA',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.2152',\n  },\n  {\n    sousId: 226,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lazio,\n    contractAddress: {\n      97: '',\n      56: '0xd008416c2c9cf23843bd179aa3cefedb4c8d1607',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0694',\n  },\n  {\n    sousId: 225,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.sps,\n    contractAddress: {\n      97: '',\n      56: '0xd9b63bb6c62fe2e9a641699a91e680994b8b0081',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.40046',\n  },\n  {\n    sousId: 224,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mcb,\n    contractAddress: {\n      97: '',\n      56: '0xCc2D359c3a99d9cfe8e6F31230142efF1C828e6D',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00706',\n  },\n  {\n    sousId: 223,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.rpg,\n    contractAddress: {\n      97: '',\n      56: '0x65C0940C50A3C98AEEc95a115Ae62E9804588713',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01863',\n  },\n  {\n    sousId: 222,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.beta,\n    contractAddress: {\n      97: '',\n      56: '0x6f660c58723922c6f866a058199ff4881019b4b5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 221,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.nft,\n    contractAddress: {\n      97: '',\n      56: '0x8d018823d13c56d62ffb795151a9e629c21e047b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '173727',\n  },\n  {\n    sousId: 220,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.chess,\n    contractAddress: {\n      97: '',\n      56: '0x4D1Ec426d0d7fb6bF344Dd372d0502EDD71c8d88',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0861',\n  },\n  {\n    sousId: 219,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tlos,\n    contractAddress: {\n      97: '',\n      56: '0xCB41a72067c227D6Ed7bc7CFAcd13eCe47Dfe5E9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3616',\n  },\n  {\n    sousId: 218,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.stephero,\n    contractAddress: {\n      97: '',\n      56: '0xcecba456fefe5b18d43df23419e7ab755b436655',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1851',\n  },\n  {\n    sousId: 217,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bp,\n    contractAddress: {\n      97: '',\n      56: '0x8ed7acf12b08274d5cdaf03d43d0e54bcbdd487e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.217',\n  },\n  {\n    sousId: 216,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cvp,\n    contractAddress: {\n      97: '',\n      56: '0xC4b15117BC0be030c20754FF36197641477af5d1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.14',\n  },\n  {\n    sousId: 215,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.qbt,\n    contractAddress: {\n      97: '',\n      56: '0xB72dEf58D0832f747d6B7197471Fe20AeA7EB463',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.412',\n  },\n  {\n    sousId: 214,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.naos,\n    contractAddress: {\n      97: '',\n      56: '0xb38b78529bCc895dA16CE2978D6cD6C56e8CfFC3',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1736',\n  },\n  {\n    sousId: 213,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pha,\n    contractAddress: {\n      97: '',\n      56: '0x2E101b5F7f910F2609e5AcE5f43bD274b1DE09AA',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.28',\n  },\n  {\n    sousId: 212,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bel,\n    contractAddress: {\n      97: '',\n      56: '0x52733Ad7b4D09BF613b0389045e33E2F287afa04',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.101',\n  },\n  {\n    sousId: 211,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ramp,\n    contractAddress: {\n      97: '',\n      56: '0x401b9b97bdbc3197c1adfab9652dc78040bd1e13',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.9837',\n  },\n  {\n    sousId: 210,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pots,\n    contractAddress: {\n      97: '',\n      56: '0xBeDb490970204cb3CC7B0fea94463BeD67d5364D',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0868',\n  },\n  {\n    sousId: 209,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tusd,\n    contractAddress: {\n      97: '',\n      56: '0xb6e510ae2da1ab4e350f837c70823ab75091780e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.5787',\n  },\n  {\n    sousId: 208,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.revv,\n    contractAddress: {\n      97: '',\n      56: '0x8aa5b2c67852ed5334c8a7f0b5eb0ef975106793',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.331',\n  },\n  {\n    sousId: 207,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.btt,\n    contractAddress: {\n      97: '',\n      56: '0x3b804460c3c62f0f565af593984159f13b1ac976',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '263',\n  },\n  {\n    sousId: 206,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.skill,\n    contractAddress: {\n      97: '',\n      56: '0x455f4d4cc4d6ca15441a93c631e82aaf338ad843',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00289',\n  },\n  {\n    sousId: 205,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.win,\n    contractAddress: {\n      97: '',\n      56: '0xde4aef42bb27a2cb45c746acde4e4d8ab711d27c',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1815.39',\n  },\n  {\n    sousId: 204,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.if,\n    contractAddress: {\n      97: '',\n      56: '0x57d3524888ded4085d9124a422f13b27c8a43de7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.02835',\n  },\n  {\n    sousId: 203,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.sps,\n    contractAddress: {\n      97: '',\n      56: '0xb56299d8fbf46c509014b103a164ad1fc65ea222',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '12.86',\n  },\n  {\n    sousId: 202,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.c98,\n    contractAddress: {\n      97: '',\n      56: '0x5e49531BA07bE577323e55666D46C6217164119E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 201,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.axs,\n    contractAddress: {\n      97: '',\n      56: '0xBB472601B3CB32723d0755094BA80B73F67f2AF3',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00744',\n  },\n  {\n    sousId: 200,\n    stakingToken: serializedTokens.axs,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x583A36816F3b8401C4fdf682203E0caDA6997740',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00992',\n  },\n  {\n    sousId: 199,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pmon,\n    contractAddress: {\n      97: '',\n      56: '0x28050e8f024e05f9ddbef5f60dd49f536dba0cf0',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.02696',\n  },\n  {\n    sousId: 198,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.trx,\n    contractAddress: {\n      97: '',\n      56: '0xb2b62f88ab82ed0bb4ab4da60d9dc9acf9e816e5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '9.6643',\n  },\n  {\n    sousId: 197,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.chess,\n    contractAddress: {\n      97: '',\n      56: '0xd1812e7e28c39e78727592de030fc0e7c366d61a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4286',\n  },\n  {\n    sousId: 196,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.titan,\n    contractAddress: {\n      97: '',\n      56: '0x97058cf9b36c9ef1622485cef22e72d6fea32a36',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.08912',\n  },\n  {\n    sousId: 195,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.harmony,\n    contractAddress: {\n      97: '',\n      56: '0xe595456846155e23b24cc9cbee910ee97027db6d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.0092',\n  },\n  {\n    sousId: 194,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mask,\n    contractAddress: {\n      97: '',\n      56: '0xae611c6d4d3ca2cee44cd34eb7aac29d5a387fcf',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.06423',\n  },\n  {\n    sousId: 193,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dvi,\n    contractAddress: {\n      97: '',\n      56: '0x135827eaf9746573c0b013f18ee12f138b9b0384',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.7233',\n  },\n  {\n    sousId: 192,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.gum,\n    contractAddress: {\n      97: '',\n      56: '0x09b8a5f51c9e245402057851ada274174fa00e2a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.67129',\n  },\n  {\n    sousId: 191,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.adx,\n    contractAddress: {\n      97: '',\n      56: '0x53a2d1db049b5271c6b6db020dba0e8a7c4eb90d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.7523',\n  },\n  {\n    sousId: 190,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.suter,\n    contractAddress: {\n      97: '',\n      56: '0x4da8da81647ee0aa7350e9959f3e4771eb753da0',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '69.9074',\n  },\n  {\n    sousId: 189,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bscpad,\n    contractAddress: {\n      97: '',\n      56: '0x0446b8f8474c590d2249a4acdd6eedbc2e004bca',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3877',\n  },\n  {\n    sousId: 188,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.rabbit,\n    contractAddress: {\n      97: '',\n      56: '0x391240A007Bfd8A59bA74978D691219a76c64c5C',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.993',\n  },\n  {\n    sousId: 187,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.waultx,\n    contractAddress: {\n      97: '',\n      56: '0x017DEa5C58c2Bcf57FA73945073dF7AD4052a71C',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '7.9108',\n  },\n  {\n    sousId: 186,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.wex,\n    contractAddress: {\n      97: '',\n      56: '0x6Bd94783caCef3fb7eAa9284f1631c464479829f',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '11.574',\n  },\n  {\n    sousId: 185,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.form,\n    contractAddress: {\n      97: '',\n      56: '0x7c71723fB1F9Cfb250B702cfc4eBd5D9Ab2E83d9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.4467',\n  },\n  {\n    sousId: 184,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.orbs,\n    contractAddress: {\n      97: '',\n      56: '0x9C8813d7D0A61d30610a7A5FdEF9109e196a3D77',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.8946',\n  },\n  {\n    sousId: 183,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.$dg,\n    contractAddress: {\n      97: '',\n      56: '0xa07a91da6d10173f33c294803684bceede325957',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00135',\n  },\n  {\n    sousId: 182,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.woo,\n    contractAddress: {\n      97: '',\n      56: '0x88c321d444c88acf3e747dc90f20421b97648903',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3854',\n  },\n  {\n    sousId: 181,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.woo,\n    contractAddress: {\n      97: '',\n      56: '0x3c7234c496d76133b48bd6a342e7aea4f8d87fc8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0003854',\n  },\n  {\n    sousId: 180,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.htb,\n    contractAddress: {\n      97: '',\n      56: '0x64473c33c360f315cab38674f1633505d1d8dcb2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '5.2083',\n  },\n  {\n    sousId: 179,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.jgn,\n    contractAddress: {\n      97: '',\n      56: '0x5cc7a19a50be2a6b2540ebcd55bd728e732e59c3',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1001',\n  },\n  {\n    sousId: 178,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dft,\n    contractAddress: {\n      97: '',\n      56: '0x2666e2494e742301ffc8026e476acc1710a775ed',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 177,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hai,\n    contractAddress: {\n      97: '',\n      56: '0x6ac2213F09A404c86AFf506Aa51B6a5BF1F6e24E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.3078',\n  },\n  {\n    sousId: 176,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.o3,\n    contractAddress: {\n      97: '',\n      56: '0x35BD47263f7E57368Df76339903C53bAa99076e1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.107638',\n  },\n  {\n    sousId: 175,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ampl,\n    contractAddress: {\n      97: '',\n      56: '0x62dEc3A560D2e8A84D30752bA454f97b26757877',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.398',\n  },\n  {\n    sousId: 174,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0x44d1f81e80e43e935d66d65874354ef91e5e49f6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4843',\n  },\n  {\n    sousId: 173,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x4ea43fce546975aae120c9eeceb172500be4a02b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6741',\n  },\n  {\n    sousId: 172,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.marsh,\n    contractAddress: {\n      97: '',\n      56: '0x567fd708e788e51b68666b9310ee9df163d60fae',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1108',\n  },\n  {\n    sousId: 171,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mbox,\n    contractAddress: {\n      97: '',\n      56: '0x36f9452083fc9bc469a31e7966b873f402292433',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4803',\n  },\n  {\n    sousId: 170,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ata,\n    contractAddress: {\n      97: '',\n      56: '0xc612680457751d0d01b5d901ad08132a3b001900',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 169,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mx,\n    contractAddress: {\n      97: '',\n      56: '0x336bcd59f2b6eb7221a99f7a50fd03c6bf9a306b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.27777',\n  },\n  {\n    sousId: 168,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bcfx,\n    contractAddress: {\n      97: '',\n      56: '0x2b3974dda76b2d408b7d680a27fbb0393e3cf0e1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6944',\n  },\n  {\n    sousId: 167,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.qkc,\n    contractAddress: {\n      97: '',\n      56: '0xfa67f97eeee6de55d179ecabbfe701f27d9a1ed9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '15.9143',\n  },\n  {\n    sousId: 166,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ktn,\n    contractAddress: {\n      97: '',\n      56: '0x48852322a185dc5fc733ff8c8d7c6dcbd2b3b2a2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01215',\n  },\n  {\n    sousId: 165,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mtrg,\n    contractAddress: {\n      97: '',\n      56: '0xf4d0f71698f58f221911515781b05e808a8635cb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.05613',\n  },\n  {\n    sousId: 164,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tusd,\n    contractAddress: {\n      97: '',\n      56: '0x9dceb1d92f7e0361d0766f3d98482424df857654',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.5787',\n  },\n  {\n    sousId: 163,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.vrt,\n    contractAddress: {\n      97: '',\n      56: '0xb77f1425ec3a7c78b1a1e892f72332c8b5e8ffcb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '40.5092',\n  },\n  {\n    sousId: 162,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.kalm,\n    contractAddress: {\n      97: '',\n      56: '0xb9ff4da0954b300542e722097671ead8cf337c17',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0868',\n  },\n  {\n    sousId: 161,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ez,\n    contractAddress: {\n      97: '',\n      56: '0xb19395702460261e51edf7a7b130109c64f13af9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01736',\n  },\n  {\n    sousId: 160,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.kalm,\n    contractAddress: {\n      97: '',\n      56: '0x6e113ecb9ff2d271140f124c2cc5b5e4b5700c9f',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    isFinished: true,\n    tokenPerBlock: '0.00868',\n  },\n  {\n    sousId: 159,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.popen,\n    contractAddress: {\n      97: '',\n      56: '0x7baf1763ce5d0da8c9d85927f08a8be9c481ce50',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.19097',\n  },\n  {\n    sousId: 158,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x2b8d6c9c62bfc1bed84724165d3000e61d332cab',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.023148',\n  },\n  {\n    sousId: 157,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.well,\n    contractAddress: {\n      97: '',\n      56: '0x8a06ff2748edcba3fb4e44a6bfda4e46769e557b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.2025',\n    sortOrder: 999,\n  },\n  {\n    sousId: 156,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.deri,\n    contractAddress: {\n      97: '',\n      56: '0x3eba95f5493349bbe0cad33eaae05dc6a7e26b90',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '1.6087',\n    sortOrder: 999,\n  },\n  {\n    sousId: 155,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.chr,\n    contractAddress: {\n      97: '',\n      56: '0x593edbd14a5b7eec828336accca9c16cc12f04be',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '1.655',\n    sortOrder: 999,\n  },\n  {\n    sousId: 154,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cyc,\n    contractAddress: {\n      97: '',\n      56: '0xD714738837944C3c592477249E8edB724A76e068',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00015914',\n    sortOrder: 999,\n  },\n  {\n    sousId: 153,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.xend,\n    contractAddress: {\n      97: '',\n      56: '0x8ea9f2482b2f7b12744a831f81f8d08714adc093',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.31828',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 152,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hget,\n    contractAddress: {\n      97: '',\n      56: '0x8e8125f871eb5ba9d55361365f5391ab437f9acc',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.03553',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 151,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hotcross,\n    contractAddress: {\n      97: '',\n      56: '0x0e09205e993f78cd5b3a5df355ae98ee7d0b5834',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.4722',\n    isFinished: false,\n  },\n  {\n    sousId: 150,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.rfox,\n    contractAddress: {\n      97: '',\n      56: '0xf9f00d41b1f4b3c531ff750a9b986c1a530f33d9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n    isFinished: false,\n  },\n  {\n    sousId: 149,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.wmass,\n    contractAddress: {\n      97: '',\n      56: '0x4Af531EcD50167a9402Ce921ee6436dd4cFC04FD',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.24942',\n    isFinished: false,\n  },\n  {\n    sousId: 148,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ubxt,\n    contractAddress: {\n      97: '',\n      56: '0x9b4bac2d8f69853aa29cb45478c77fc54532ac22',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.4074',\n    isFinished: false,\n  },\n  {\n    sousId: 147,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.btr,\n    contractAddress: {\n      97: '',\n      56: '0x20ee70a07ae1b475cb150dec27930d97915726ea',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.8935',\n    isFinished: false,\n  },\n  {\n    sousId: 146,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.τdoge,\n    contractAddress: {\n      97: '',\n      56: '0x017556dffb8c6a52fd7f4788adf6fb339309c81b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.868',\n    isFinished: false,\n  },\n  {\n    sousId: 145,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pmon,\n    contractAddress: {\n      97: '',\n      56: '0xdaa711ecf2ac0bff5c82fceeae96d0008791cc49',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01261',\n    isFinished: false,\n  },\n  {\n    sousId: 144,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.one,\n    contractAddress: {\n      97: '',\n      56: '0x74af842ecd0b6588add455a47aa21ed9ba794108',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '57.87',\n    isFinished: false,\n  },\n  {\n    sousId: 143,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.fine,\n    contractAddress: {\n      97: '',\n      56: '0x42d41749d6e9a1c5b47e27f690d4531f181b2159',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1342',\n    isFinished: false,\n  },\n  {\n    sousId: 142,\n    stakingToken: serializedTokens.doge,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xbebd44824631b55991fa5f2bf5c7a4ec96ff805b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01388',\n    isFinished: false,\n  },\n  {\n    sousId: 141,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bmxx,\n    contractAddress: {\n      97: '',\n      56: '0x55131f330c886e3f0cae389cedb23766ac9aa3ed',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01331',\n    isFinished: false,\n  },\n  {\n    sousId: 140,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.oin,\n    contractAddress: {\n      97: '',\n      56: '0x01453a74a94687fa3f99b80762435855a13664f4',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3472',\n    isFinished: false,\n  },\n  {\n    sousId: 139,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hyfi,\n    contractAddress: {\n      97: '',\n      56: '0x0032ceb978fe5fc8a5d5d6f5adfc005e76397e29',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.8935',\n    isFinished: false,\n  },\n  {\n    sousId: 138,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.kun,\n    contractAddress: {\n      97: '',\n      56: '0x439b46d467402cebc1a2fa05038b5b696b1f4417',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.23148',\n    isFinished: false,\n  },\n  {\n    sousId: 137,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.math,\n    contractAddress: {\n      97: '',\n      56: '0x377ae5f933aa4cfa41fa03e2cae8a2befccf53b2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.15798',\n    isFinished: false,\n  },\n  {\n    sousId: 136,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ust,\n    contractAddress: {\n      97: '',\n      56: '0xce3ebac3f549ebf1a174a6ac3b390c179422b5f6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.17361',\n    isFinished: false,\n  },\n  {\n    sousId: 135,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.win,\n    contractAddress: {\n      97: '',\n      56: '0xd26dec254c699935c286cd90e9841dcabf1af72d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '462.96',\n    isFinished: false,\n  },\n  {\n    sousId: 134,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.trx,\n    contractAddress: {\n      97: '',\n      56: '0x93e2867d9b74341c2d19101b7fbb81d6063cca4d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '4.0509',\n    isFinished: false,\n  },\n  {\n    sousId: 133,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.btt,\n    contractAddress: {\n      97: '',\n      56: '0x3b644e44033cff70bd6b771904225f3dd69dfb6d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '79.86',\n    isFinished: false,\n  },\n  {\n    sousId: 132,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lmt,\n    contractAddress: {\n      97: '',\n      56: '0x0a687d7b951348d681f7ed5eea84c0ba7b9566dc',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.66145',\n    isFinished: false,\n  },\n  {\n    sousId: 131,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pnt,\n    contractAddress: {\n      97: '',\n      56: '0x417df1c0e6a498eb1f2247f99032a01d4fafe922',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.09548',\n    isFinished: false,\n  },\n  {\n    sousId: 130,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.xmark,\n    contractAddress: {\n      97: '',\n      56: '0xdc8943d806f9dd64312d155284abf780455fd345',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0298',\n    isFinished: false,\n  },\n  {\n    sousId: 129,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ramp,\n    contractAddress: {\n      97: '',\n      56: '0xa90a894e5bc20ab2be46c7e033a38f8b8eaa771a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4861',\n    isFinished: true,\n  },\n  {\n    sousId: 128,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hakka,\n    contractAddress: {\n      97: '',\n      56: '0x34ac807e34e534fe426da1e11f816422774aae1c',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.4722',\n    isFinished: false,\n  },\n  {\n    sousId: 127,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pbtc,\n    contractAddress: {\n      97: '',\n      56: '0x31fa2f516b77c4273168b284ac6d9def5aa6dafb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0000031',\n    isFinished: false,\n  },\n  {\n    sousId: 126,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x7112f8988f075c7784666ab071927ae4109a8076',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.003472',\n    isFinished: false,\n  },\n  {\n    sousId: 125,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bbadger,\n    contractAddress: {\n      97: '',\n      56: '0x126dfbcef85c5bf335f8be99ca4006037f417892',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00265278',\n    isFinished: false,\n  },\n  {\n    sousId: 124,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bdigg,\n    contractAddress: {\n      97: '',\n      56: '0x4f0ad2332b1f9983e8f63cbee617523bb7de5031',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000403',\n    isFinished: false,\n  },\n  {\n    sousId: 123,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x9483ca44324de06802576866b9d296f7614f45ac',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4629',\n    isFinished: false,\n  },\n  {\n    sousId: 122,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.xed,\n    contractAddress: {\n      97: '',\n      56: '0x72ceec6e2a142678e703ab0710de78bc819f4ce0',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3472',\n    isFinished: false,\n  },\n  {\n    sousId: 121,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cgg,\n    contractAddress: {\n      97: '',\n      56: '0x1c6ed21d3313822ae73ed0d94811ffbbe543f341',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.10918',\n    isFinished: false,\n  },\n  {\n    sousId: 120,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.perl,\n    contractAddress: {\n      97: '',\n      56: '0x1ac0d0333640f57327c83053c581340ebc829e30',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.1574',\n    isFinished: false,\n  },\n  {\n    sousId: 119,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.arpa,\n    contractAddress: {\n      97: '',\n      56: '0xc707e5589aeb1dc117b0bb5a3622362f1812d4fc',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.949',\n    isFinished: false,\n  },\n  {\n    sousId: 118,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0x22106cdcf9787969e1672d8e6a9c03a889cda9c5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.11284',\n    isFinished: false,\n  },\n  {\n    sousId: 117,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dexe,\n    contractAddress: {\n      97: '',\n      56: '0x999b86e8bba3d4f05afb8155963999db70afa97f',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.009837',\n    isFinished: true,\n  },\n  {\n    sousId: 116,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dfd,\n    contractAddress: {\n      97: '',\n      56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.46296',\n    isFinished: false,\n  },\n  {\n    sousId: 115,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.alpaca,\n    contractAddress: {\n      97: '',\n      56: '0xf73fdeb26a8c7a4abf3809d3db11a06ba5c13d0e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.22743',\n    isFinished: false,\n  },\n  {\n    sousId: 114,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.τbtc,\n    contractAddress: {\n      97: '',\n      56: '0xaac7171afc93f4b75e1268d208040b152ac65e32',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000608',\n    isFinished: false,\n  },\n  {\n    sousId: 113,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.τbtc,\n    contractAddress: {\n      97: '',\n      56: '0x2c6017269b4324d016ca5d8e3267368652c18905',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000608',\n    isFinished: true,\n  },\n  {\n    sousId: 112,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.swingby,\n    contractAddress: {\n      97: '',\n      56: '0x675434c68f2672c983e36cf10ed13a4014720b79',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.21527',\n  },\n  {\n    sousId: 111,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.xed,\n    contractAddress: {\n      97: '',\n      56: '0x05d6c2d1d687eacfb5e6440d5a3511e91f2201a8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3472',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 110,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hakka,\n    contractAddress: {\n      97: '',\n      56: '0xd623a32da4a632ce01766c317d07cb2cad56949b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.4722',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 109,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cgg,\n    contractAddress: {\n      97: '',\n      56: '0xdf75f38dbc98f9f26377414e567abcb8d57cca33',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.10918',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 108,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mix,\n    contractAddress: {\n      97: '',\n      56: '0xce64a930884b2c68cd93fc1c7c7cdc221d427692',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3721',\n  },\n  {\n    sousId: 107,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.suter,\n    contractAddress: {\n      97: '',\n      56: '0xc1E70edd0141c454b834Deac7ddDeA413424aEf9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '15.3356',\n  },\n  {\n    sousId: 106,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.broobee,\n    contractAddress: {\n      97: '',\n      56: '0x189d8228CdfDc404Bd9e5bD65ff958cb5fd8855c',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '14.4675',\n  },\n  {\n    sousId: 105,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hzn,\n    contractAddress: {\n      97: '',\n      56: '0x0196c582216e2463f052E2B07Ef8667Bec9Fb17a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6944',\n  },\n  {\n    sousId: 104,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.alpa,\n    contractAddress: {\n      97: '',\n      56: '0x8f84106286c9c8A42bc3555C835E6e2090684ab7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.23495',\n  },\n  {\n    sousId: 103,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.perl,\n    contractAddress: {\n      97: '',\n      56: '0xa8d32b31ECB5142f067548Bf0424389eE98FaF26',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.1574',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 102,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tlm,\n    contractAddress: {\n      97: '',\n      56: '0xC59aa49aE508050c2dF653E77bE13822fFf02E9A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '17.361',\n  },\n  {\n    sousId: 101,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.jgn,\n    contractAddress: {\n      97: '',\n      56: '0x14AeA62384789EDA98f444cCb970F6730877d3F9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.08796',\n  },\n  {\n    sousId: 100,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.eps,\n    contractAddress: {\n      97: '',\n      56: '0xebb87dF24D65977cbe62538E4B3cFBD5d0308642',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.07716',\n  },\n  {\n    sousId: 99,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.arpa,\n    contractAddress: {\n      97: '',\n      56: '0x40918EF8efFF4aA061656013a81E0e5A8A702eA7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.949',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 98,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.itam,\n    contractAddress: {\n      97: '',\n      56: '0x44eC1B26035865D9A7C130fD872670CD7Ebac2bC',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.096',\n  },\n  {\n    sousId: 97,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x1329ad151dE6C441184E32E108401126AE850937',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4629',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 96,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tko,\n    contractAddress: {\n      97: '',\n      56: '0x9bbDc92474a7e7321B78dcDA5EF35f4981438760',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.1574',\n  },\n  {\n    sousId: 95,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.apys,\n    contractAddress: {\n      97: '',\n      56: '0x46530d79b238f809e80313e73715b160c66677aF',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.09953',\n  },\n  {\n    sousId: 94,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hoo,\n    contractAddress: {\n      97: '',\n      56: '0x47fD853D5baD391899172892F91FAa6d0cd8A2Aa',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.489',\n  },\n  {\n    sousId: 93,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0xe25aB6F05BBF6C1be953BF2d7df15B3e01b8e5a5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.11284',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 92,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.easy,\n    contractAddress: {\n      97: '',\n      56: '0xEB8Fd597921E3Dd37B0F103a2625F855e2C9b9B5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0072338',\n  },\n  {\n    sousId: 91,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.nrv,\n    contractAddress: {\n      97: '',\n      56: '0xABFd8d1942628124aB971937154f826Bce86DcbC',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.15046',\n  },\n  {\n    sousId: 90,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dego,\n    contractAddress: {\n      97: '',\n      56: '0x526d3c204255f807C95a99b69596f2f9f72345e5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00405',\n  },\n  {\n    sousId: 89,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.gum,\n    contractAddress: {\n      97: '',\n      56: '0xAa2082BeE04fc518300ec673F9497ffa6F669dB8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.08912',\n  },\n  {\n    sousId: 88,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pbtc,\n    contractAddress: {\n      97: '',\n      56: '0x9096625Bc0d36F5EDa6d44e511641667d89C28f4',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0000031',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 87,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dft,\n    contractAddress: {\n      97: '',\n      56: '0x78BD4dB48F8983c3C36C8EAFbEF38f6aC7B55285',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6811',\n  },\n  {\n    sousId: 86,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.swth,\n    contractAddress: {\n      97: '',\n      56: '0x35418e14F5aA615C4f020eFBa6e01C5DbF15AdD2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.3148',\n  },\n  {\n    sousId: 85,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x3c7cC49a35942fbD3C2ad428a6c22490cd709d03',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.003472',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 84,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.zil,\n    contractAddress: {\n      97: '',\n      56: '0xF795739737ABcFE0273f4Dced076460fdD024Dd9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.0995',\n  },\n  {\n    sousId: 83,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pcws,\n    contractAddress: {\n      97: '',\n      56: '0x06FF8960F7F4aE572A3f57FAe77B2882BE94Bf90',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00434',\n  },\n  {\n    sousId: 82,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bbadger,\n    contractAddress: {\n      97: '',\n      56: '0xe4dD0C50fb314A8B2e84D211546F5B57eDd7c2b9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00265278',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 81,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bdigg,\n    contractAddress: {\n      97: '',\n      56: '0xb627A7e33Db571bE792B0b69c5C2f5a8160d5500',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000403',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 80,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lto,\n    contractAddress: {\n      97: '',\n      56: '0xadBfFA25594AF8Bc421ecaDF54D057236a99781e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.2893',\n  },\n  {\n    sousId: 79,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mir,\n    contractAddress: {\n      97: '',\n      56: '0x3e31488f08EBcE6F2D8a2AA512aeFa49a3C7dFa7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01273',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 78,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mir,\n    contractAddress: {\n      97: '',\n      56: '0x453a75908fb5a36d482d5f8fe88eca836f32ead5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01273',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 77,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.trade,\n    contractAddress: {\n      97: '',\n      56: '0x509C99D73FB54b2c20689708b3F824147292D38e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4484',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 76,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dusk,\n    contractAddress: {\n      97: '',\n      56: '0xF1bd5673Ea4a1C415ec84fa3E402F2F7788E7717',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4629',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 75,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bifi,\n    contractAddress: {\n      97: '',\n      56: '0xB4C68A1C565298834360BbFF1652284275120D47',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00007234',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 74,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.txl,\n    contractAddress: {\n      97: '',\n      56: '0x153e62257F1AAe05d5d253a670Ca7585c8D3F94F',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.434027',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 73,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cos,\n    contractAddress: {\n      97: '',\n      56: '0xF682D186168b4114ffDbF1291F19429310727151',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '5.787',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 72,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bunny,\n    contractAddress: {\n      97: '',\n      56: '0xaDdAE5f4dB84847ac9d947AED1304A8e7D19f7cA',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00289',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 71,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.alice,\n    contractAddress: {\n      97: '',\n      56: '0x4C32048628D0d32d4D6c52662FB4A92747782B56',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.14467',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 70,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.for,\n    contractAddress: {\n      97: '',\n      56: '0x47642101e8D8578C42765d7AbcFd0bA31868c523',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '2.8935',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 69,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bux,\n    contractAddress: {\n      97: '',\n      56: '0x07F8217c68ed9b838b0b8B58C19c79bACE746e9A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5787',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 68,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.nuls,\n    contractAddress: {\n      97: '',\n      56: '0x580DC9bB9260A922E3A4355b9119dB990F09410d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0868',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 67,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.belt,\n    contractAddress: {\n      97: '',\n      56: '0x6f0037d158eD1AeE395e1c12d21aE8583842F472',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00868',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 66,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ramp,\n    contractAddress: {\n      97: '',\n      56: '0x423382f989C6C289c8D441000e1045e231bd7d90',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4861',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 65,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bfi,\n    contractAddress: {\n      97: '',\n      56: '0x0A595623b58dFDe6eB468b613C11A7A8E84F09b9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0001157',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 64,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dexe,\n    contractAddress: {\n      97: '',\n      56: '0x9E6dA246d369a41DC44673ce658966cAf487f7b2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.009837',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 63,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bel,\n    contractAddress: {\n      97: '',\n      56: '0x2C0f449387b15793B9da27c2d945dBed83ab1B07',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0549',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 62,\n    stakingToken: serializedTokens.tpt,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x0c3D6892aa3b23811Af3bd1bbeA8b0740E8e4528',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0462',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 61,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tpt,\n    contractAddress: {\n      97: '',\n      56: '0x75C91844c5383A68b7d3A427A44C32E3ba66Fe45',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3.616',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 60,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.watch,\n    contractAddress: {\n      97: '',\n      56: '0xC58954199E268505fa3D3Cb0A00b7207af8C2D1d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.3472',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 59,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.xmark,\n    contractAddress: {\n      97: '',\n      56: '0xA5137e08C48167E363Be8Ec42A68f4F54330964E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0413',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 58,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bmxx,\n    contractAddress: {\n      97: '',\n      56: '0x6F31B87f51654424Ce57E9F8243E27ed13846CDB',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00248',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 57,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.iotx,\n    contractAddress: {\n      97: '',\n      56: '0xCE54BA909d23B9d4BE0Ff0d84e5aE83F0ADD8D9a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '6.365',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 56,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bor,\n    contractAddress: {\n      97: '',\n      56: '0x3e677dC00668d69c2A7724b9AFA7363e8A56994e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.000395',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 55,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bopen,\n    contractAddress: {\n      97: '',\n      56: '0x5Ac8406498dC1921735d559CeC271bEd23B294A7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0723',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 54,\n    stakingToken: serializedTokens.sushi,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xb69b6e390cba1F68442A886bC89E955048DAe7E3',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0367',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 53,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dodo,\n    contractAddress: {\n      97: '',\n      56: '0xae3001ddb18A6A57BEC2C19D71680437CA87bA1D',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0578',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 52,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.swingby,\n    contractAddress: {\n      97: '',\n      56: '0x02aa767e855b8e80506fb47176202aA58A95315a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.13',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 51,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bry,\n    contractAddress: {\n      97: '',\n      56: '0x1c736F4FB20C7742Ee83a4099fE92abA61dFca41',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.1157',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 50,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.zee,\n    contractAddress: {\n      97: '',\n      56: '0x02861B607a5E87daf3FD6ec19DFB715F1b371379',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.1736',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 49,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.swgb,\n    contractAddress: {\n      97: '',\n      56: '0x73e4E8d010289267dEe3d1Fc48974B60363963CE',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.899',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 48,\n    stakingToken: serializedTokens.comp,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xE0565fBb109A3f3f8097D8A9D931277bfd795072',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.055',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 47,\n    stakingToken: serializedTokens.comp,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xc3693e3cbc3514d5d07EA5b27A721F184F617900',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.55',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 46,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.sfp,\n    contractAddress: {\n      97: '',\n      56: '0x2B02d43967765b18E31a9621da640588f3550EFD',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.6',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 45,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lina,\n    contractAddress: {\n      97: '',\n      56: '0x212bb602418C399c29D52C55100fD6bBa12bea05',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.983',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 44,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lina,\n    contractAddress: {\n      97: '',\n      56: '0x04aE8ca68A116278026fB721c06dCe709eD7013C',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0983',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 43,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lit,\n    contractAddress: {\n      97: '',\n      56: '0x1714bAAE9DD4738CDEA07756427FA8d4F08D9479',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.231',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 42,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hget,\n    contractAddress: {\n      97: '',\n      56: '0xcCD0b93cC6ce3dC6dFaA9DB68f70e5C8455aC5bd',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0138',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 41,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bdo,\n    contractAddress: {\n      97: '',\n      56: '0x9cB24e9460351bC51d4066BC6AEd1F3809b02B78',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.075',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 40,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.egld,\n    contractAddress: {\n      97: '',\n      56: '0x2dcf4cDFf4Dd954683Fe0a6123077f8a025b66cF',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.001215',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 39,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ust,\n    contractAddress: {\n      97: '',\n      56: '0x6EFa207ACdE6e1caB77c1322CbdE9628929ba88F',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.1157',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 38,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.wsote,\n    contractAddress: {\n      97: '',\n      56: '0xD0b738eC507571176D40f28bd56a0120E375f73a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.23',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 37,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.front,\n    contractAddress: {\n      97: '',\n      56: '0xf7a31366732F08E8e6B88519dC3E827e04616Fc9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.2546',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 36,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.helmet,\n    contractAddress: {\n      97: '',\n      56: '0x9F23658D5f4CEd69282395089B0f8E4dB85C6e79',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.81',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 35,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.btcst,\n    contractAddress: {\n      97: '',\n      56: '0xB6fd2724cc9c90DD31DA35DbDf0300009dceF97d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.011574',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 34,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bscx,\n    contractAddress: {\n      97: '',\n      56: '0x108BFE84Ca8BCe0741998cb0F60d313823cEC143',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.17361',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 33,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ten,\n    contractAddress: {\n      97: '',\n      56: '0x4A26b082B432B060B1b00A84eE4E823F04a6f69a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.05787',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 32,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.balbt,\n    contractAddress: {\n      97: '',\n      56: '0x3cc08B7C6A31739CfEd9d8d38b484FDb245C79c8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4166',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 31,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.asr,\n    contractAddress: {\n      97: '',\n      56: '0xd18E1AEb349ef0a6727eCe54597D98D263e05CAB',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 30,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.atm,\n    contractAddress: {\n      97: '',\n      56: '0x68C7d180bD8F7086D91E65A422c59514e4aFD638',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 29,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.og,\n    contractAddress: {\n      97: '',\n      56: '0xbE65d7e42E05aD2c4ad28769dc9c5b4b6EAff2C7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 28,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.reef,\n    contractAddress: {\n      97: '',\n      56: '0x1500fa1afbfe4f4277ed0345cdf12b2c9ca7e139',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '115.74',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 27,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ditto,\n    contractAddress: {\n      97: '',\n      56: '0x624ef5C2C6080Af188AF96ee5B3160Bb28bb3E02',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01157',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 26,\n    stakingToken: serializedTokens.twt,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x0554a5D083Abf2f056ae3F6029e1714B9A655174',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.248',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 24,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.juv,\n    contractAddress: {\n      97: '',\n      56: '0x543467B17cA5De50c8BF7285107A36785Ab57E56',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 25,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.psg,\n    contractAddress: {\n      97: '',\n      56: '0x65aFEAFaec49F23159e897EFBDCe19D94A86A1B6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 21,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.vai,\n    contractAddress: {\n      97: '',\n      56: '0x1AD34D8d4D79ddE88c9B6b8490F8fC67831f2CAe',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.104',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 20,\n    stakingToken: serializedTokens.bnb,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x555Ea72d7347E82C614C16f005fA91cAf06DCB5a',\n    },\n    poolCategory: PoolCategory.BINANCE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 19,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bnb,\n    contractAddress: {\n      97: '',\n      56: '0x326D754c64329aD7cb35744770D56D0E1f3B3124',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0041',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 18,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.blink,\n    contractAddress: {\n      97: '',\n      56: '0x42Afc29b2dEa792974d1e9420696870f1Ca6d18b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '23.14',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 17,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.blink,\n    contractAddress: {\n      97: '',\n      56: '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '23.14',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 16,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.unfi,\n    contractAddress: {\n      97: '',\n      56: '0xFb1088Dae0f03C5123587d2babb3F307831E6367',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02893',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 15,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.twt,\n    contractAddress: {\n      97: '',\n      56: '0x9c4EBADa591FFeC4124A7785CAbCfb7068fED2fb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 14,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hard,\n    contractAddress: {\n      97: '',\n      56: '0x90F995b9d46b32c4a1908A8c6D0122e392B3Be97',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.346',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 13,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.broobee,\n    contractAddress: {\n      97: '',\n      56: '0xdc8c45b7F3747Ca9CaAEB3fa5e0b5FCE9430646b',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '12.5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 12,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.stax,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0xFF02241a2A1d2a7088A344309400E9fE74772815',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '0.2',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 11,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.nar,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0xDc938BA1967b06d666dA79A7B1E31a8697D1565E',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '1',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 10,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.nya,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x07a0A5B67136d40F4d7d95Bc8e0583bafD7A81b9',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '10',\n    isFinished: true,\n  },\n  {\n    sousId: 9,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ctk,\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0x21A9A53936E812Da06B7623802DEc9A1f94ED23a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 8,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.twt,\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0xe7f9A439Aa7292719aC817798DDd1c4D35934aAF',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '20',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 7,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.inj,\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0xcec2671C81a0Ecf7F8Ee796EFa6DBDc5Cb062693',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.25',\n    sortOrder: 999,\n    isFinished: true,\n  },\n]\n\nexport default pools\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n  PredictionUser,\n  HistoryFilter,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  UserResponse,\n} from './queries'\nimport { ROUNDS_PER_PAGE } from './config'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  HOUSE = 'house',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nconst getRoundPosition = (positionResponse: string) => {\n  if (positionResponse === 'Bull') {\n    return BetPosition.BULL\n  }\n\n  if (positionResponse === 'Bear') {\n    return BetPosition.BEAR\n  }\n\n  if (positionResponse === 'House') {\n    return BetPosition.HOUSE\n  }\n\n  return null\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    block: numberOrNull(betResponse.block),\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedAt: numberOrNull(betResponse.claimedAt),\n    claimedBlock: numberOrNull(betResponse.claimedBlock),\n    claimedHash: betResponse.claimedHash,\n    claimedBNB: betResponse.claimedBNB ? parseFloat(betResponse.claimedBNB) : 0,\n    claimedNetBNB: betResponse.claimedNetBNB ? parseFloat(betResponse.claimedNetBNB) : 0,\n    createdAt: numberOrNull(betResponse.createdAt),\n    updatedAt: numberOrNull(betResponse.updatedAt),\n  } as Bet\n\n  if (betResponse.user) {\n    bet.user = transformUserResponse(betResponse.user)\n  }\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformUserResponse = (userResponse: UserResponse): PredictionUser => {\n  const {\n    id,\n    createdAt,\n    updatedAt,\n    block,\n    totalBets,\n    totalBetsBull,\n    totalBetsBear,\n    totalBNB,\n    totalBNBBull,\n    totalBNBBear,\n    totalBetsClaimed,\n    totalBNBClaimed,\n    winRate,\n    averageBNB,\n    netBNB,\n  } = userResponse\n\n  return {\n    id,\n    createdAt: numberOrNull(createdAt),\n    updatedAt: numberOrNull(updatedAt),\n    block: numberOrNull(block),\n    totalBets: numberOrNull(totalBets),\n    totalBetsBull: numberOrNull(totalBetsBull),\n    totalBetsBear: numberOrNull(totalBetsBear),\n    totalBNB: totalBNB ? parseFloat(totalBNB) : 0,\n    totalBNBBull: totalBNBBull ? parseFloat(totalBNBBull) : 0,\n    totalBNBBear: totalBNBBear ? parseFloat(totalBNBBear) : 0,\n    totalBetsClaimed: numberOrNull(totalBetsClaimed),\n    totalBNBClaimed: totalBNBClaimed ? parseFloat(totalBNBClaimed) : 0,\n    winRate: winRate ? parseFloat(winRate) : 0,\n    averageBNB: averageBNB ? parseFloat(averageBNB) : 0,\n    netBNB: netBNB ? parseFloat(netBNB) : 0,\n  }\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    position,\n    startAt,\n    startBlock,\n    startHash,\n    lockAt,\n    lockBlock,\n    lockHash,\n    lockPrice,\n    lockRoundId,\n    closeAt,\n    closeBlock,\n    closeHash,\n    closePrice,\n    closeRoundId,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bullAmount,\n    bearBets,\n    bearAmount,\n    bets = [],\n  } = roundResponse\n\n  return {\n    id,\n    failed,\n    startHash,\n    lockHash,\n    lockRoundId,\n    closeRoundId,\n    closeHash,\n    position: getRoundPosition(position),\n    epoch: numberOrNull(epoch),\n    startAt: numberOrNull(startAt),\n    startBlock: numberOrNull(startBlock),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : 0,\n    closeAt: numberOrNull(closeAt),\n    closeBlock: numberOrNull(closeBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : 0,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bullAmount: bullAmount ? parseFloat(bullAmount) : 0,\n    bearBets: numberOrNull(bearBets),\n    bearAmount: bearAmount ? parseFloat(bearAmount) : 0,\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n\n  if (bet.round.position === BetPosition.HOUSE) {\n    return Result.HOUSE\n  }\n\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\nexport const getFilteredBets = (bets: Bet[], filter: HistoryFilter) => {\n  switch (filter) {\n    case HistoryFilter.COLLECTED:\n      return bets.filter((bet) => bet.claimed === true)\n    case HistoryFilter.UNCOLLECTED:\n      return bets.filter((bet) => {\n        return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n      })\n    case HistoryFilter.ALL:\n    default:\n      return bets\n  }\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const { market } = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n      }\n    `,\n  )) as { market: TotalWonMarketResponse }\n\n  const totalBNB = market.totalBNB ? parseFloat(market.totalBNB) : 0\n  const totalBNBTreasury = market.totalBNBTreasury ? parseFloat(market.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - totalBNBTreasury, 0)\n}\n\ntype WhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (where: WhereClause = {}, first = 1000, skip = 0): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const LEADERBOARD_RESULTS_PER_PAGE = 20\n\ninterface GetPredictionUsersOptions {\n  skip?: number\n  first?: number\n  orderBy?: string\n  orderDir?: string\n  where?: WhereClause\n}\n\nconst defaultPredictionUserOptions = {\n  skip: 0,\n  first: LEADERBOARD_RESULTS_PER_PAGE,\n  orderBy: 'createdAt',\n  orderDir: 'desc',\n}\n\nexport const getPredictionUsers = async (options: GetPredictionUsersOptions = {}): Promise<UserResponse[]> => {\n  const { first, skip, where, orderBy, orderDir } = { ...defaultPredictionUserOptions, ...options }\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getUsers($first: Int!, $skip: Int!, $where: User_filter, $orderBy: User_orderBy, $orderDir: OrderDirection) {\n        users(first: $first, skip: $skip, where: $where, orderBy: $orderBy, orderDirection: $orderDir) {\n          ${getUserBaseFields()} \n        }\n      }\n    `,\n    { first, skip, where, orderBy, orderDir },\n  )\n  return response.users\n}\n\nexport const getPredictionUser = async (account: string): Promise<UserResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getUser($id: ID!) {\n        user(id: $id) {\n          ${getUserBaseFields()}\n        }\n      }\n  `,\n    {\n      id: account.toLowerCase(),\n    },\n  )\n  return response.user\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalSeconds' | 'minBetAmount' | 'bufferSeconds'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalSeconds', 'minBetAmount', 'paused', 'bufferSeconds'].map((method) => ({\n    address,\n    name: method,\n  }))\n  const [[currentEpoch], [intervalSeconds], [minBetAmount], [paused], [bufferSeconds]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalSeconds: intervalSeconds.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    bufferSeconds: bufferSeconds.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startTimestamp: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startTimestamp,\n    lockTimestamp: null,\n    closeTimestamp: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n    lockOracleId: null,\n    closeOracleId: null,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startTimestamp,\n    lockTimestamp,\n    closeTimestamp,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardBaseCalAmount,\n    rewardAmount,\n    oracleCalled,\n    lockOracleId,\n    closeOracleId,\n  } = response\n\n  return {\n    oracleCalled,\n    epoch: epoch.toNumber(),\n    startTimestamp: startTimestamp.eq(0) ? null : startTimestamp.toNumber(),\n    lockTimestamp: lockTimestamp.eq(0) ? null : lockTimestamp.toNumber(),\n    closeTimestamp: closeTimestamp.eq(0) ? null : closeTimestamp.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    lockOracleId: lockOracleId.toString(),\n    closeOracleId: closeOracleId.toString(),\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n\nexport const fetchUsersRoundsLength = async (account: string) => {\n  try {\n    const contract = getPredictionsContract()\n    const length = await contract.getUserRoundsLength(account)\n    return length\n  } catch {\n    return ethers.BigNumber.from(0)\n  }\n}\n\n/**\n * Fetches rounds a user has participated in\n */\nexport const fetchUserRounds = async (\n  account: string,\n  cursor = 0,\n  size = ROUNDS_PER_PAGE,\n): Promise<{ [key: string]: ReduxNodeLedger }> => {\n  const contract = getPredictionsContract()\n\n  try {\n    const [rounds, ledgers] = await contract.getUserRounds(account, cursor, size)\n\n    return rounds.reduce((accum, round, index) => {\n      return {\n        ...accum,\n        [round.toString()]: serializePredictionsLedgerResponse(ledgers[index]),\n      }\n    }, {})\n  } catch {\n    // When the results run out the contract throws an error.\n    return null\n  }\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((pool) => pool.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((pool) => pool.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((pool) => pool.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((pool) => ({\n    address: pool.stakingToken.address,\n    name: 'allowance',\n    params: [account, getAddress(pool.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((pool) => ({\n    address: pool.stakingToken.address,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingCake('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { DeserializedPool } from 'state/types'\nimport { getApy } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 5000\nconst MANUAL_POOL_AUTO_COMPOUND_FREQUENCY = 0\n\nexport const getAprData = (pool: DeserializedPool, performanceFee: number) => {\n  const { isAutoVault, apr } = pool\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const autoCompoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_AUTO_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const autoApr = getApy(apr, AUTO_VAULT_COMPOUND_FREQUENCY, 365, performanceFee) * 100\n    return { apr: autoApr, autoCompoundFrequency }\n  }\n  return { apr, autoCompoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: DeserializedPool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, SerializedPool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? pool.stakingToken.address.toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? pool.earningToken.address.toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: SerializedPool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","export const REWARD_RATE = 0.97\n\n// Estimated number of seconds it takes to submit a transaction (3 blocks) in seconds\nexport const ROUND_BUFFER = 9\n\nexport const PAST_ROUND_COUNT = 5\nexport const FUTURE_ROUND_COUNT = 2\n\nexport const ROUNDS_PER_PAGE = 200\nexport const LEADERBOARD_MIN_ROUNDS_PLAYED = 10\n","export interface UserResponse {\n  id: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  totalBets: string\n  totalBetsBull: string\n  totalBetsBear: string\n  totalBNB: string\n  totalBNBBull: string\n  totalBNBBear: string\n  totalBetsClaimed: string\n  totalBNBClaimed: string\n  winRate: string\n  averageBNB: string\n  netBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedAt: string\n  claimedBlock: string\n  claimedHash: string\n  claimedBNB: string\n  claimedNetBNB: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  position: string\n  failed: boolean\n  startAt: string\n  startBlock: string\n  startHash: string\n  lockAt: string\n  lockBlock: string\n  lockHash: string\n  lockPrice: string\n  lockRoundId: string\n  closeAt: string\n  closeBlock: string\n  closeHash: string\n  closePrice: string\n  closeRoundId: string\n  totalBets: string\n  totalAmount: string\n  bullBets: string\n  bullAmount: string\n  bearBets: string\n  bearAmount: string\n  bets?: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  position\n  failed\n  startAt\n  startBlock\n  startHash\n  lockAt\n  lockBlock\n  lockHash\n  lockPrice\n  lockRoundId\n  closeAt\n  closeBlock\n  closeHash\n  closePrice\n  closeRoundId\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n`\n\nexport const getBetBaseFields = () => `\n id\n hash  \n amount\n position\n claimed\n claimedAt\n claimedHash\n claimedBlock\n claimedBNB\n claimedNetBNB\n createdAt\n updatedAt\n`\n\nexport const getUserBaseFields = () => `\n  id\n  createdAt\n  updatedAt\n  block\n  totalBets\n  totalBetsBull\n  totalBetsBear\n  totalBNB\n  totalBNBBull\n  totalBNBBear\n  totalBetsClaimed\n  totalBNBClaimed\n  winRate\n  averageBNB\n  netBNB\n`\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport {\n  Bet,\n  LedgerData,\n  HistoryFilter,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeRound,\n  BetPosition,\n  LeaderboardLoadingState,\n  PredictionUser,\n  LeaderboardFilter,\n  State,\n} from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  FUTURE_ROUND_COUNT,\n  LEADERBOARD_MIN_ROUNDS_PLAYED,\n  PAST_ROUND_COUNT,\n  ROUNDS_PER_PAGE,\n  ROUND_BUFFER,\n} from './config'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n  fetchUsersRoundsLength,\n  fetchUserRounds,\n  getPredictionUsers,\n  transformUserResponse,\n  LEADERBOARD_RESULTS_PER_PAGE,\n  getPredictionUser,\n} from './helpers'\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  intervalSeconds: 300,\n  minBetAmount: '10000000000000',\n  bufferSeconds: 60,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: [],\n  totalHistory: 0,\n  currentHistoryPage: 1,\n  hasHistoryLoaded: false,\n  ledgers: {},\n  claimableStatuses: {},\n  leaderboard: {\n    selectedAddress: null,\n    loadingState: LeaderboardLoadingState.INITIAL,\n    filters: {\n      address: null,\n      orderBy: 'netBNB',\n      timePeriod: 'all',\n    },\n    skip: 0,\n    hasMoreResults: true,\n    addressResults: {},\n    results: [],\n  },\n}\n\n// Thunks\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalSeconds'\n  | 'minBetAmount'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n  | 'bufferSeconds'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/initialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs =\n      marketData.currentEpoch > PAST_ROUND_COUNT\n        ? range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n        : [marketData.currentEpoch]\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const fetchNodeHistory = createAsyncThunk<\n  { bets: Bet[]; claimableStatuses: PredictionsState['claimableStatuses']; page?: number; totalHistory: number },\n  { account: string; page?: number }\n>('predictions/fetchNodeHistory', async ({ account, page = 1 }) => {\n  const userRoundsLength = await fetchUsersRoundsLength(account)\n  const emptyResult = { bets: [], claimableStatuses: {}, totalHistory: userRoundsLength.toNumber() }\n  const maxPages = userRoundsLength.lte(ROUNDS_PER_PAGE) ? 1 : Math.ceil(userRoundsLength.toNumber() / ROUNDS_PER_PAGE)\n\n  if (userRoundsLength.eq(0)) {\n    return emptyResult\n  }\n\n  if (page > maxPages) {\n    return emptyResult\n  }\n\n  const cursor = userRoundsLength.sub(ROUNDS_PER_PAGE * page)\n\n  // If the page request is the final one we only want to retrieve the amount of rounds up to the next cursor.\n  const size =\n    maxPages === page\n      ? userRoundsLength\n          .sub(ROUNDS_PER_PAGE * (page - 1)) // Previous page's cursor\n          .toNumber()\n      : ROUNDS_PER_PAGE\n  const userRounds = await fetchUserRounds(account, cursor.lt(0) ? 0 : cursor.toNumber(), size)\n\n  if (!userRounds) {\n    return emptyResult\n  }\n\n  const epochs = Object.keys(userRounds).map((epochStr) => Number(epochStr))\n  const roundData = await getRoundsData(epochs)\n  const claimableStatuses = await getClaimStatuses(account, epochs)\n\n  // Turn the data from the node into an Bet object that comes from the graph\n  const bets: Bet[] = roundData.reduce((accum, round) => {\n    const reduxRound = serializePredictionsRoundsResponse(round)\n    const ledger = userRounds[reduxRound.epoch]\n    const ledgerAmount = ethers.BigNumber.from(ledger.amount)\n    const closePrice = round.closePrice ? parseFloat(formatUnits(round.closePrice, 8)) : null\n    const lockPrice = round.lockPrice ? parseFloat(formatUnits(round.lockPrice, 8)) : null\n\n    const getRoundPosition = () => {\n      if (!closePrice) {\n        return null\n      }\n\n      if (round.closePrice.eq(round.lockPrice)) {\n        return BetPosition.HOUSE\n      }\n\n      return round.closePrice.gt(round.lockPrice) ? BetPosition.BULL : BetPosition.BEAR\n    }\n\n    return [\n      ...accum,\n      {\n        id: null,\n        hash: null,\n        amount: parseFloat(formatUnits(ledgerAmount)),\n        position: ledger.position,\n        claimed: ledger.claimed,\n        claimedAt: null,\n        claimedHash: null,\n        claimedBNB: 0,\n        claimedNetBNB: 0,\n        createdAt: null,\n        updatedAt: null,\n        block: 0,\n        round: {\n          id: null,\n          epoch: round.epoch.toNumber(),\n          failed: false,\n          startBlock: null,\n          startAt: round.startTimestamp ? round.startTimestamp.toNumber() : null,\n          startHash: null,\n          lockAt: round.lockTimestamp ? round.lockTimestamp.toNumber() : null,\n          lockBlock: null,\n          lockPrice,\n          lockHash: null,\n          lockRoundId: round.lockOracleId ? round.lockOracleId.toString() : null,\n          closeRoundId: round.closeOracleId ? round.closeOracleId.toString() : null,\n          closeHash: null,\n          closeAt: null,\n          closePrice,\n          closeBlock: null,\n          totalBets: 0,\n          totalAmount: parseFloat(formatUnits(round.totalAmount)),\n          bullBets: 0,\n          bullAmount: parseFloat(formatUnits(round.bullAmount)),\n          bearBets: 0,\n          bearAmount: parseFloat(formatUnits(round.bearAmount)),\n          position: getRoundPosition(),\n        },\n      },\n    ]\n  }, [])\n\n  return { bets, claimableStatuses, page, totalHistory: userRoundsLength.toNumber() }\n})\n\n// Leaderboard\nexport const filterLeaderboard = createAsyncThunk<{ results: PredictionUser[] }, { filters: LeaderboardFilter }>(\n  'predictions/filterLeaderboard',\n  async ({ filters }) => {\n    const usersResponse = await getPredictionUsers({\n      skip: 0,\n      orderBy: filters.orderBy,\n      where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${filters.orderBy}_gt`]: 0 },\n    })\n\n    return { results: usersResponse.map(transformUserResponse) }\n  },\n)\n\nexport const fetchAddressResult = createAsyncThunk<\n  { account: string; data: PredictionUser },\n  string,\n  { rejectValue: string }\n>('predictions/fetchAddressResult', async (account, { rejectWithValue }) => {\n  const userResponse = await getPredictionUser(account)\n\n  if (!userResponse) {\n    return rejectWithValue(account)\n  }\n\n  return { account, data: transformUserResponse(userResponse) }\n})\n\nexport const filterNextPageLeaderboard = createAsyncThunk<\n  { results: PredictionUser[]; skip: number },\n  number,\n  { state: State }\n>('predictions/filterNextPageLeaderboard', async (skip, { getState }) => {\n  const state = getState()\n  const usersResponse = await getPredictionUsers({\n    skip,\n    orderBy: state.predictions.leaderboard.filters.orderBy,\n    where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${state.predictions.leaderboard.filters.orderBy}_gt`]: 0 },\n  })\n\n  return { results: usersResponse.map(transformUserResponse), skip }\n})\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setLeaderboardFilter: (state, action: PayloadAction<Partial<LeaderboardFilter>>) => {\n      state.leaderboard.filters = {\n        ...state.leaderboard.filters,\n        ...action.payload,\n      }\n\n      // Anytime we filters change we need to reset back to page 1\n      state.leaderboard.skip = 0\n      state.leaderboard.hasMoreResults = true\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markAsCollected: (state, action: PayloadAction<{ [key: string]: boolean }>) => {\n      state.claimableStatuses = { ...state.claimableStatuses, ...action.payload }\n    },\n    setSelectedAddress: (state, action: PayloadAction<string>) => {\n      state.leaderboard.selectedAddress = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    // Leaderboard filter\n    builder.addCase(filterLeaderboard.pending, (state) => {\n      // Only mark as loading if we come from IDLE. This allows initialization.\n      if (state.leaderboard.loadingState === LeaderboardLoadingState.IDLE) {\n        state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n      }\n    })\n    builder.addCase(filterLeaderboard.fulfilled, (state, action) => {\n      const { results } = action.payload\n\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.results = results\n\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\n        state.leaderboard.hasMoreResults = false\n      }\n\n      // Populate address results to reduce calls\n      state.leaderboard.addressResults = {\n        ...state.leaderboard.addressResults,\n        ...results.reduce((accum, result) => {\n          return {\n            ...accum,\n            [result.id]: result,\n          }\n        }, {}),\n      }\n    })\n\n    // Leaderboard account result\n    builder.addCase(fetchAddressResult.pending, (state) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n    })\n    builder.addCase(fetchAddressResult.fulfilled, (state, action) => {\n      const { account, data } = action.payload\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.addressResults[account] = data\n    })\n    builder.addCase(fetchAddressResult.rejected, (state, action) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.addressResults[action.payload] = null\n    })\n\n    // Leaderboard next page\n    builder.addCase(filterNextPageLeaderboard.pending, (state) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n    })\n    builder.addCase(filterNextPageLeaderboard.fulfilled, (state, action) => {\n      const { results, skip } = action.payload\n\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.results = [...state.leaderboard.results, ...results]\n      state.leaderboard.skip = skip\n\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\n        state.leaderboard.hasMoreResults = false\n      }\n    })\n\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, minBetAmount } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startTimestamp + intervalSeconds + ROUND_BUFFER,\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalSeconds = intervalSeconds\n      state.minBetAmount = minBetAmount\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, bufferSeconds, rounds, claimableStatuses, ledgers } =\n        action.payload\n      const futureRounds: ReduxNodeRound[] = []\n      const currentRound = rounds[currentEpoch]\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(makeFutureRoundResponse(currentEpoch + i, currentRound.startTimestamp + intervalSeconds * i))\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        intervalSeconds,\n        bufferSeconds,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.history[account] = merge([], state.history[account] ?? [], bets)\n    })\n\n    // History from the node\n    builder.addCase(fetchNodeHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchNodeHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchNodeHistory.fulfilled, (state, action) => {\n      const { bets, claimableStatuses, page, totalHistory } = action.payload\n\n      state.isFetchingHistory = false\n      state.history = page === 1 ? bets : [...state.history, ...bets]\n      state.claimableStatuses = { ...state.claimableStatuses, ...claimableStatuses }\n      state.hasHistoryLoaded = state.history.length === totalHistory || bets.length === 0\n      state.totalHistory = totalHistory\n      state.currentHistoryPage = page\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setLastOraclePrice,\n  markAsCollected,\n  setLeaderboardFilter,\n  setSelectedAddress,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement, AchievementFetchStatus } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  achievements: [],\n  achievementFetchStatus: AchievementFetchStatus.NOT_FETCHED,\n}\n\nexport const fetchAchievements = createAsyncThunk<Achievement[], string>(\n  'achievements/fetchAchievements',\n  async (account) => {\n    const achievements = await getAchievements(account)\n    return achievements\n  },\n)\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.achievements.push(action.payload)\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchAchievements.pending, (state) => {\n      state.achievementFetchStatus = AchievementFetchStatus.FETCHING\n    })\n    builder.addCase(fetchAchievements.fulfilled, (state, action) => {\n      state.achievementFetchStatus = AchievementFetchStatus.FETCHED\n      state.achievements = action.payload\n    })\n    builder.addCase(fetchAchievements.rejected, (state) => {\n      state.achievementFetchStatus = AchievementFetchStatus.ERROR\n    })\n  },\n})\n\n// Actions\nexport const { addAchievement } = achievementSlice.actions\n\nexport default achievementSlice.reducer\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","import { createAction } from '@reduxjs/toolkit'\nimport { Transaction } from 'state/info/types'\nimport { ProtocolData, TokenData, PoolData, ChartEntry, PriceChartEntry } from './types'\n\nexport const updateProtocolData = createAction<{ protocolData: ProtocolData }>('info/protocol/updateProtocolData')\nexport const updateProtocolChartData = createAction<{ chartData: ChartEntry[] }>(\n  'info/protocol/updateProtocolChartData',\n)\nexport const updateProtocolTransactions = createAction<{ transactions: Transaction[] }>(\n  'info/protocol/updateProtocolTransactions',\n)\n\nexport const updatePoolData = createAction<{ pools: PoolData[] }>('info/pools/updatePoolData')\nexport const addPoolKeys = createAction<{ poolAddresses: string[] }>('info/pools/addPoolKeys')\nexport const updatePoolChartData = createAction<{ poolAddress: string; chartData: ChartEntry[] }>(\n  'info/pools/updatePoolChartData',\n)\nexport const updatePoolTransactions = createAction<{ poolAddress: string; transactions: Transaction[] }>(\n  'info/pools/updatePoolTransactions',\n)\n\nexport const updateTokenData = createAction<{ tokens: TokenData[] }>('info/tokens/updateTokenData')\nexport const addTokenKeys = createAction<{ tokenAddresses: string[] }>('info/tokens/addTokenKeys')\nexport const addTokenPoolAddresses = createAction<{ tokenAddress: string; poolAddresses: string[] }>(\n  'info/tokens/addTokenPoolAddresses',\n)\nexport const updateTokenChartData = createAction<{ tokenAddress: string; chartData: ChartEntry[] }>(\n  'info/tokens/updateTokenChartData',\n)\nexport const updateTokenTransactions = createAction<{ tokenAddress: string; transactions: Transaction[] }>(\n  'info/tokens/updateTokenTransactions',\n)\nexport const updateTokenPriceData = createAction<{\n  tokenAddress: string\n  secondsInterval: number\n  priceData?: PriceChartEntry[]\n  oldestFetchedTimestamp: number\n}>('info/tokens/updateTokenPriceData')\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport { InfoState } from './types'\nimport {\n  updateProtocolData,\n  updateProtocolChartData,\n  updateProtocolTransactions,\n  updatePoolData,\n  addPoolKeys,\n  updatePoolChartData,\n  updatePoolTransactions,\n  updateTokenData,\n  addTokenKeys,\n  addTokenPoolAddresses,\n  updateTokenChartData,\n  updateTokenPriceData,\n  updateTokenTransactions,\n} from './actions'\n\nconst initialState: InfoState = {\n  protocol: {\n    overview: undefined,\n    chartData: undefined,\n    transactions: undefined,\n  },\n  pools: { byAddress: {} },\n  tokens: { byAddress: {} },\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    // Protocol actions\n    .addCase(updateProtocolData, (state, { payload: { protocolData } }) => {\n      state.protocol.overview = protocolData\n    })\n    .addCase(updateProtocolChartData, (state, { payload: { chartData } }) => {\n      state.protocol.chartData = chartData\n    })\n    .addCase(updateProtocolTransactions, (state, { payload: { transactions } }) => {\n      state.protocol.transactions = transactions\n    })\n    // Pools actions\n    .addCase(updatePoolData, (state, { payload: { pools } }) => {\n      pools.forEach((poolData) => {\n        state.pools.byAddress[poolData.address] = {\n          ...state.pools.byAddress[poolData.address],\n          data: poolData,\n        }\n      })\n    })\n    .addCase(addPoolKeys, (state, { payload: { poolAddresses } }) => {\n      poolAddresses.forEach((address) => {\n        if (!state.pools.byAddress[address]) {\n          state.pools.byAddress[address] = {\n            data: undefined,\n            chartData: undefined,\n            transactions: undefined,\n          }\n        }\n      })\n    })\n    .addCase(updatePoolChartData, (state, { payload: { poolAddress, chartData } }) => {\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], chartData }\n    })\n    .addCase(updatePoolTransactions, (state, { payload: { poolAddress, transactions } }) => {\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], transactions }\n    })\n    // Tokens actions\n    .addCase(updateTokenData, (state, { payload: { tokens } }) => {\n      tokens.forEach((tokenData) => {\n        state.tokens.byAddress[tokenData.address] = {\n          ...state.tokens.byAddress[tokenData.address],\n          data: tokenData,\n        }\n      })\n    })\n    .addCase(addTokenKeys, (state, { payload: { tokenAddresses } }) => {\n      tokenAddresses.forEach((address) => {\n        if (!state.tokens.byAddress[address]) {\n          state.tokens.byAddress[address] = {\n            poolAddresses: undefined,\n            data: undefined,\n            chartData: undefined,\n            priceData: {},\n            transactions: undefined,\n          }\n        }\n      })\n    })\n    .addCase(addTokenPoolAddresses, (state, { payload: { tokenAddress, poolAddresses } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], poolAddresses }\n    })\n    .addCase(updateTokenChartData, (state, { payload: { tokenAddress, chartData } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], chartData }\n    })\n    .addCase(updateTokenTransactions, (state, { payload: { tokenAddress, transactions } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], transactions }\n    })\n    .addCase(\n      updateTokenPriceData,\n      (state, { payload: { tokenAddress, secondsInterval, priceData, oldestFetchedTimestamp } }) => {\n        state.tokens.byAddress[tokenAddress] = {\n          ...state.tokens.byAddress[tokenAddress],\n          priceData: {\n            ...state.tokens.byAddress[tokenAddress]?.priceData,\n            [secondsInterval]: priceData,\n            oldestFetchedTimestamp,\n          },\n        }\n      },\n    ),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { SerializedToken } from 'config/constants/types'\nimport { DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  addWatchlistPool,\n  addWatchlistToken,\n  FarmStakedOnly,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  muteAudio,\n  toggleTheme,\n  unmuteAudio,\n  updateGasPrice,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserFarmsViewMode,\n  updateUserPoolStakedOnly,\n  updateUserPoolsViewMode,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  ViewMode,\n  updateUserPredictionAcceptedRisk,\n  updateUserPredictionChartDisclaimerShow,\n  updateUserUsernameVisibility,\n  updateUserExpertModeAcknowledgementShow,\n  hidePhishingWarningBanner,\n  setIsExchangeChartDisplayed,\n} from './actions'\nimport { GAS_PRICE_GWEI } from './hooks/helpers'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n  isExchangeChartDisplayed: boolean\n  userFarmStakedOnly: FarmStakedOnly\n  userPoolStakedOnly: boolean\n  userPoolsViewMode: ViewMode\n  userFarmsViewMode: ViewMode\n  userPredictionAcceptedRisk: boolean\n  userPredictionChartDisclaimerShow: boolean\n  userExpertModeAcknowledgementShow: boolean\n  userUsernameVisibility: boolean\n  gasPrice: string\n  watchlistTokens: string[]\n  watchlistPools: string[]\n  showPhishingWarningBanner: boolean\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n  isExchangeChartDisplayed: true,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n  userPoolStakedOnly: false,\n  userPoolsViewMode: ViewMode.TABLE,\n  userFarmsViewMode: ViewMode.TABLE,\n  userPredictionAcceptedRisk: false,\n  userPredictionChartDisclaimerShow: true,\n  userExpertModeAcknowledgementShow: true,\n  userUsernameVisibility: false,\n  gasPrice: GAS_PRICE_GWEI.default,\n  watchlistTokens: [],\n  watchlistPools: [],\n  showPhishingWarningBanner: true,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    })\n    .addCase(updateUserPoolStakedOnly, (state, { payload: { userPoolStakedOnly } }) => {\n      state.userPoolStakedOnly = userPoolStakedOnly\n    })\n    .addCase(updateUserPoolsViewMode, (state, { payload: { userPoolsViewMode } }) => {\n      state.userPoolsViewMode = userPoolsViewMode\n    })\n    .addCase(updateUserFarmsViewMode, (state, { payload: { userFarmsViewMode } }) => {\n      state.userFarmsViewMode = userFarmsViewMode\n    })\n    .addCase(updateUserPredictionAcceptedRisk, (state, { payload: { userAcceptedRisk } }) => {\n      state.userPredictionAcceptedRisk = userAcceptedRisk\n    })\n    .addCase(updateUserPredictionChartDisclaimerShow, (state, { payload: { userShowDisclaimer } }) => {\n      state.userPredictionChartDisclaimerShow = userShowDisclaimer\n    })\n    .addCase(updateUserExpertModeAcknowledgementShow, (state, { payload: { userExpertModeAcknowledgementShow } }) => {\n      state.userExpertModeAcknowledgementShow = userExpertModeAcknowledgementShow\n    })\n    .addCase(updateUserUsernameVisibility, (state, { payload: { userUsernameVisibility } }) => {\n      state.userUsernameVisibility = userUsernameVisibility\n    })\n    .addCase(updateGasPrice, (state, action) => {\n      state.gasPrice = action.payload.gasPrice\n    })\n    .addCase(addWatchlistToken, (state, { payload: { address } }) => {\n      // state.watchlistTokens can be undefined for pre-loaded localstorage user state\n      const tokenWatchlist = state.watchlistTokens ?? []\n      if (!tokenWatchlist.includes(address)) {\n        state.watchlistTokens = [...tokenWatchlist, address]\n      } else {\n        // Remove token from watchlist\n        const newTokens = state.watchlistTokens.filter((x) => x !== address)\n        state.watchlistTokens = newTokens\n      }\n    })\n    .addCase(addWatchlistPool, (state, { payload: { address } }) => {\n      // state.watchlistPools can be undefined for pre-loaded localstorage user state\n      const poolsWatchlist = state.watchlistPools ?? []\n      if (!poolsWatchlist.includes(address)) {\n        state.watchlistPools = [...poolsWatchlist, address]\n      } else {\n        // Remove pool from watchlist\n        const newPools = state.watchlistPools.filter((x) => x !== address)\n        state.watchlistPools = newPools\n      }\n    })\n    .addCase(hidePhishingWarningBanner, (state) => {\n      state.showPhishingWarningBanner = false\n    })\n    .addCase(setIsExchangeChartDisplayed, (state, { payload }) => {\n      state.isExchangeChartDisplayed = payload\n    }),\n)\n","import { createAction } from '@reduxjs/toolkit'\nimport { DerivedPairDataNormalized, PairDataNormalized, PairDataTimeWindowEnum } from './types'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\nexport const updatePairData =\n  createAction<{ pairData: PairDataNormalized; pairId: string; timeWindow: PairDataTimeWindowEnum }>(\n    'swap/updatePairData',\n  )\nexport const updateDerivedPairData =\n  createAction<{ pairData: DerivedPairDataNormalized; pairId: string; timeWindow: PairDataTimeWindowEnum }>(\n    'swap/updateDerivedPairData',\n  )\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  Field,\n  replaceSwapState,\n  selectCurrency,\n  setRecipient,\n  switchCurrencies,\n  typeInput,\n  updateDerivedPairData,\n  updatePairData,\n} from './actions'\nimport { DerivedPairDataNormalized, PairDataNormalized } from './types'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n  readonly pairDataById: Record<number, Record<string, PairDataNormalized>> | null\n  readonly derivedPairDataById: Record<number, Record<string, DerivedPairDataNormalized>> | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  pairDataById: {},\n  derivedPairDataById: {},\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n          pairDataById: state.pairDataById,\n          derivedPairDataById: state.derivedPairDataById,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    })\n    .addCase(updatePairData, (state, { payload: { pairData, pairId, timeWindow } }) => {\n      if (!state.pairDataById[pairId]) {\n        state.pairDataById[pairId] = {}\n      }\n      state.pairDataById[pairId][timeWindow] = pairData\n    })\n    .addCase(updateDerivedPairData, (state, { payload: { pairData, pairId, timeWindow } }) => {\n      if (!state.derivedPairDataById[pairId]) {\n        state.derivedPairDataById[pairId] = {}\n      }\n      state.derivedPairDataById[pairId][timeWindow] = pairData\n    }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nexport const initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport cloneDeep from 'lodash/cloneDeep'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer, { initialState as profileInitialState } from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport infoReducer from './info'\nimport { updateVersion } from './global/actions'\nimport user, { initialState as userInitialState } from './user/reducer'\nimport transactions, { initialState as transactionsInitialState } from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists, { initialState as listsInitialState } from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\nimport nftMarketReducer from './nftMarket/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists', 'profile']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n    info: infoReducer,\n    nftMarket: nftMarketReducer,\n\n    // Exchange\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({\n    states: PERSISTED_KEYS,\n    preloadedState: {\n      user: cloneDeep(userInitialState),\n      transactions: cloneDeep(transactionsInitialState),\n      lists: cloneDeep(listsInitialState),\n      profile: cloneDeep(profileInitialState),\n    },\n  }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n// @ts-ignore\nconst lotteryTokenDecimals = parseInt(window.SO_LotteryConfig.token.decimals, 10)\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = lotteryTokenDecimals || 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = lotteryTokenDecimals || 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = lotteryTokenDecimals || 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = lotteryTokenDecimals || 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = lotteryTokenDecimals || 18, decimals = lotteryTokenDecimals || 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = lotteryTokenDecimals || 18, decimals = lotteryTokenDecimals || 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = lotteryTokenDecimals || 18, decimals = lotteryTokenDecimals || 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\nimport { ROUTER_ADDRESS } from '../config/constants'\n// import { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n\n// @ts-ignore\nconst BASE_BSC_SCAN_URL = window.SO_LotteryConfig.etherscan\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URL}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URL}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URL}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URL}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URL}/address/${data}`\n    }\n  }\n}\n\nexport function getBscScanLinkForNft(\n  collectionAddress: string,\n  tokenId: string,\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  return `${BASE_BSC_SCAN_URL}/token/${collectionAddress}?a=${tokenId}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlock } from 'state/block/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, currentBlock))\n  }, [fragment, contract, results, currentBlock])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, currentBlock))\n  }, [fragment, results, contractInterface, currentBlock])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, currentBlock)\n  }, [result, contract, fragment, currentBlock])\n}\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.StaticJsonRpcProvider(RPC_URL)\n\nexport default null\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState, ProfileAvatarFetchStatus, Profile } from 'state/types'\nimport { NftToken } from 'state/nftMarket/types'\nimport { getProfile, getProfileAvatar, getUsername } from './helpers'\n\nexport const initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: false,\n  hasRegistered: false,\n  data: null,\n  profileAvatars: {},\n}\n\nexport const fetchProfile = createAsyncThunk<{ hasRegistered: boolean; profile?: Profile }, string>(\n  'profile/fetchProfile',\n  async (account) => {\n    const { hasRegistered, profile } = await getProfile(account)\n    return { hasRegistered, profile }\n  },\n)\n\nexport const fetchProfileAvatar = createAsyncThunk<{ account: string; nft: NftToken; hasRegistered: boolean }, string>(\n  'profile/fetchProfileAvatar',\n  async (account) => {\n    const { nft, hasRegistered } = await getProfileAvatar(account)\n    return { account, nft, hasRegistered }\n  },\n)\n\nexport const fetchProfileUsername = createAsyncThunk<\n  { account: string; username: string },\n  { account: string; hasRegistered: boolean }\n>('profile/fetchProfileUsername', async ({ account, hasRegistered }) => {\n  if (!hasRegistered) {\n    return { account, username: '' }\n  }\n  const username = await getUsername(account)\n  return { account, username }\n})\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchProfile.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchProfile.fulfilled, (state, action) => {\n      const { hasRegistered, profile } = action.payload\n\n      state.isInitialized = true\n      state.isLoading = false\n      state.hasRegistered = hasRegistered\n      state.data = profile\n    })\n    builder.addCase(fetchProfile.rejected, (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    })\n    builder.addCase(fetchProfileUsername.pending, (state, action) => {\n      const { account } = action.meta.arg\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHING,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          hasRegistered: false,\n          username: null,\n          nft: null,\n          // I think in theory this else should never be reached since we only check for username after we checked for profile/avatar\n          // just in case I set isFetchingAvatar will be ProfileAvatarFetchStatus.FETCHED at this point to avoid refetching\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHING,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n    builder.addCase(fetchProfileUsername.fulfilled, (state, action) => {\n      const { account, username } = action.payload\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          username,\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          username,\n          nft: null,\n          hasRegistered: true,\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n          // I think in theory this else should never be reached since we only check for username after we checked for profile/avatar\n          // just in case I set isFetchingAvatar will be ProfileAvatarFetchStatus.FETCHED at this point to avoid refetching\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n    builder.addCase(fetchProfileUsername.rejected, (state, action) => {\n      const { account } = action.meta.arg\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          username: '',\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          hasRegistered: false,\n          username: '',\n          nft: null,\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n    builder.addCase(fetchProfileAvatar.pending, (state, action) => {\n      const account = action.meta.arg\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          hasRegistered: false,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHING,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          username: null,\n          nft: null,\n          hasRegistered: false,\n          usernameFetchStatus: ProfileAvatarFetchStatus.NOT_FETCHED,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHING,\n        }\n      }\n    })\n    builder.addCase(fetchProfileAvatar.fulfilled, (state, action) => {\n      const { account, nft, hasRegistered } = action.payload\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          nft,\n          hasRegistered,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          username: null,\n          nft,\n          hasRegistered,\n          usernameFetchStatus: ProfileAvatarFetchStatus.NOT_FETCHED,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n    builder.addCase(fetchProfileAvatar.rejected, (state, action) => {\n      const account = action.meta.arg\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          nft: null,\n          hasRegistered: false,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          username: null,\n          nft: null,\n          hasRegistered: false,\n          usernameFetchStatus: ProfileAvatarFetchStatus.NOT_FETCHED,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n  },\n})\n\n// Actions\nexport const { profileClear, addPoints } = profileSlice.actions\n\nexport default profileSlice.reducer\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import { Address } from '../types'\n\nexport enum CollectionKey {\n  PANCAKE = 'pancake',\n  SQUAD = 'pancakeSquad',\n}\n\nexport type Collection = {\n  name: string\n  description?: string\n  slug: string\n  address: Address\n}\n\nexport type Collections = {\n  [key in CollectionKey]: Collection\n}\n","import { Collections, CollectionKey } from './types'\n\nconst collections: Collections = {\n  [CollectionKey.PANCAKE]: {\n    name: 'Pancake Bunnies',\n    slug: 'pancake-bunnies',\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n  },\n  [CollectionKey.SQUAD]: {\n    name: 'Pancake Squad',\n    description: \"PancakeSwap's first official generative NFT collection.. Join the squad.\",\n    slug: 'pancake-squad',\n    address: {\n      56: '0x0a8901b0E25DEb55A87524f0cC164E9644020EBA',\n      97: '0xEf12ef570300bFA65c4F022deAaA3dfF4f5d5c91',\n    },\n  },\n}\n\nexport default collections\n","import collections from 'config/constants/nftsCollections'\nimport { CollectionKey } from 'config/constants/nftsCollections/types'\nimport { getAddress } from 'utils/addressHelpers'\n\nexport const nftsBaseUrl = '/nfts'\nexport const pancakeBunniesAddress = getAddress(collections[CollectionKey.PANCAKE].address)\nexport const pancakeSquadAddress = getAddress(collections[CollectionKey.SQUAD].address)\n"],"sourceRoot":""}